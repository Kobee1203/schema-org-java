/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package spec.model;

import java.util.List;
import spec.model.SportsTeam;
import spec.model.Person;
import spec.model.datatype.Text;
import spec.model.datatype.URL;

/**
 * Event type: Sports event.
 *
 * @see <a href="https://schema.org/SportsEvent">https://schema.org/SportsEvent</a>
 */
public interface SportsEvent extends Event {

    /**
     * A competitor in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> List<T> getCompetitorList();

    /**
     * A competitor in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> T getCompetitor();

    /**
     * A competitor in a sports event.
     *
     * @param competitor SportsTeam value to set.
     */
    void addCompetitor(SportsTeam competitor);
    /**
     * A competitor in a sports event.
     *
     * @param competitor Person value to set.
     */
    void addCompetitor(Person competitor);

    /**
     * The away team in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> List<T> getAwayTeamList();

    /**
     * The away team in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> T getAwayTeam();

    /**
     * The away team in a sports event.
     *
     * @param awayTeam SportsTeam value to set.
     */
    void addAwayTeam(SportsTeam awayTeam);
    /**
     * The away team in a sports event.
     *
     * @param awayTeam Person value to set.
     */
    void addAwayTeam(Person awayTeam);

    /**
     * A type of sport (e.g. Baseball).
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    <T> List<T> getSportList();

    /**
     * A type of sport (e.g. Baseball).
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    <T> T getSport();

    /**
     * A type of sport (e.g. Baseball).
     *
     * @param sport Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void addSport(Text sport);
    /**
     * A type of sport (e.g. Baseball).
     *
     * @param sport URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void addSport(URL sport);

    /**
     * The home team in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> List<T> getHomeTeamList();

    /**
     * The home team in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> T getHomeTeam();

    /**
     * The home team in a sports event.
     *
     * @param homeTeam SportsTeam value to set.
     */
    void addHomeTeam(SportsTeam homeTeam);
    /**
     * The home team in a sports event.
     *
     * @param homeTeam Person value to set.
     */
    void addHomeTeam(Person homeTeam);
}
