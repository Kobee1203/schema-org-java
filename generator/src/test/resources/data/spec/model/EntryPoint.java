/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package spec.model;

import java.util.List;
import spec.model.datatype.Text;
import spec.model.SoftwareApplication;
import spec.model.datatype.URL;
import spec.model.DigitalPlatformEnumeration;

/**
 * An entry point, within some Web-based protocol.
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass</a>
 * @see <a href="https://schema.org/EntryPoint">https://schema.org/EntryPoint</a>
 */
public interface EntryPoint extends Intangible {

    /**
     * The supported encoding type(s) for an EntryPoint request.
     *
     * @return {@link Text}
     */
    List<Text> getEncodingTypeList();

    /**
     * The supported encoding type(s) for an EntryPoint request.
     *
     * @return {@link Text}
     */
    Text getEncodingType();

    /**
     * The supported encoding type(s) for an EntryPoint request.
     *
     * @param encodingType Text value to set.
     */
    void addEncodingType(Text encodingType);

    /**
     * An application that can complete the request.
     *
     * @return {@link SoftwareApplication}
     */
    List<SoftwareApplication> getActionApplicationList();

    /**
     * An application that can complete the request.
     *
     * @return {@link SoftwareApplication}
     */
    SoftwareApplication getActionApplication();

    /**
     * An application that can complete the request.
     *
     * @param actionApplication SoftwareApplication value to set.
     */
    void addActionApplication(SoftwareApplication actionApplication);

    /**
     * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
     *
     * @return {@link URL} or {@link DigitalPlatformEnumeration} or {@link Text}
     */
    <T> List<T> getActionPlatformList();

    /**
     * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
     *
     * @return {@link URL} or {@link DigitalPlatformEnumeration} or {@link Text}
     */
    <T> T getActionPlatform();

    /**
     * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
     *
     * @param actionPlatform URL value to set.
     */
    void addActionPlatform(URL actionPlatform);
    /**
     * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
     *
     * @param actionPlatform DigitalPlatformEnumeration value to set.
     */
    void addActionPlatform(DigitalPlatformEnumeration actionPlatform);
    /**
     * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
     *
     * @param actionPlatform Text value to set.
     */
    void addActionPlatform(Text actionPlatform);

    /**
     * The supported content type(s) for an EntryPoint response.
     *
     * @return {@link Text}
     */
    List<Text> getContentTypeList();

    /**
     * The supported content type(s) for an EntryPoint response.
     *
     * @return {@link Text}
     */
    Text getContentType();

    /**
     * The supported content type(s) for an EntryPoint response.
     *
     * @param contentType Text value to set.
     */
    void addContentType(Text contentType);

    /**
     * An application that can complete the request.
     *
     * @return {@link SoftwareApplication}
     */
    List<SoftwareApplication> getApplicationList();

    /**
     * An application that can complete the request.
     *
     * @return {@link SoftwareApplication}
     */
    SoftwareApplication getApplication();

    /**
     * An application that can complete the request.
     *
     * @param application SoftwareApplication value to set.
     */
    void addApplication(SoftwareApplication application);

    /**
     * An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
     *
     * @return {@link Text}
     */
    List<Text> getHttpMethodList();

    /**
     * An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
     *
     * @return {@link Text}
     */
    Text getHttpMethod();

    /**
     * An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
     *
     * @param httpMethod Text value to set.
     */
    void addHttpMethod(Text httpMethod);

    /**
     * An url template (RFC6570) that will be used to construct the target of the execution of the action.
     *
     * @return {@link Text}
     */
    List<Text> getUrlTemplateList();

    /**
     * An url template (RFC6570) that will be used to construct the target of the execution of the action.
     *
     * @return {@link Text}
     */
    Text getUrlTemplate();

    /**
     * An url template (RFC6570) that will be used to construct the target of the execution of the action.
     *
     * @param urlTemplate Text value to set.
     */
    void addUrlTemplate(Text urlTemplate);
}
