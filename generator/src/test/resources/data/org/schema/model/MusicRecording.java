/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.datatype.Text;
import org.schema.model.MusicPlaylist;
import org.schema.model.MusicAlbum;
import org.schema.model.MusicComposition;
import org.schema.model.Duration;
import org.schema.model.Person;
import org.schema.model.MusicGroup;

/**
 * A music recording (track), usually a single song.
 *
 * @see <a href="https://schema.org/MusicRecording">https://schema.org/MusicRecording</a>
 */
public interface MusicRecording extends CreativeWork {

    /**
     * The International Standard Recording Code for the recording.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Text getIsrcCode();

    /**
     * The International Standard Recording Code for the recording.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setIsrcCode(Text fIsrcCode);

    /**
     * The playlist to which this recording belongs.
     *
     * @return {@link MusicPlaylist}
     */
    MusicPlaylist getInPlaylist();

    /**
     * The playlist to which this recording belongs.
     *
     */
    void setInPlaylist(MusicPlaylist fInPlaylist);

    /**
     * The album to which this recording belongs.
     *
     * @return {@link MusicAlbum}
     */
    MusicAlbum getInAlbum();

    /**
     * The album to which this recording belongs.
     *
     */
    void setInAlbum(MusicAlbum fInAlbum);

    /**
     * The composition this track is a recording of.
     *
     * @return {@link MusicComposition}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    MusicComposition getRecordingOf();

    /**
     * The composition this track is a recording of.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setRecordingOf(MusicComposition fRecordingOf);

    /**
     * The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @return {@link Duration}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1457">https://github.com/schemaorg/schemaorg/issues/1457</a>
     */
    Duration getDuration();

    /**
     * The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1457">https://github.com/schemaorg/schemaorg/issues/1457</a>
     */
    void setDuration(Duration fDuration);

    /**
     * The artist that performed this album or recording.
     *
     * @return {@link Person} or {@link MusicGroup}
     */
    <T> T getByArtist();

    /**
     * The artist that performed this album or recording.
     *
     */
    void setByArtist(Object fByArtist);
}
