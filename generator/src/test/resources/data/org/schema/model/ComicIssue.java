/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Person;
import org.schema.model.datatype.Text;

/**
 * Individual comic issues are serially published as
 *     	part of a larger series. For the sake of consistency, even one-shot issues
 *     	belong to a series comprised of a single issue. All comic issues can be
 *     	uniquely identified by: the combination of the name and volume number of the
 *     	series to which the issue belongs; the issue number; and the variant
 *     	description of the issue (if any).
 *
 * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
 * @see <a href="https://schema.org/ComicIssue">https://schema.org/ComicIssue</a>
 */
public interface ComicIssue extends PublicationIssue {

    /**
     * The individual who adds lettering, including speech balloons and sound effects, to artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getLetterer();

    /**
     * The individual who adds lettering, including speech balloons and sound effects, to artwork.
     *
     * @param fLetterer Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setLetterer(Person fLetterer);

    /**
     * The individual who adds color to inked drawings.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getColorist();

    /**
     * The individual who adds color to inked drawings.
     *
     * @param fColorist Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setColorist(Person fColorist);

    /**
     * A description of the variant cover
     *     	for the issue, if the issue is a variant printing. For example, "Bryan Hitch
     *     	Variant Cover" or "2nd Printing Variant".
     *
     * @return {@link Text}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Text getVariantCover();

    /**
     * A description of the variant cover
     *     	for the issue, if the issue is a variant printing. For example, "Bryan Hitch
     *     	Variant Cover" or "2nd Printing Variant".
     *
     * @param fVariantCover Text value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setVariantCover(Text fVariantCover);
    /**
     * A description of the variant cover
     *     	for the issue, if the issue is a variant printing. For example, "Bryan Hitch
     *     	Variant Cover" or "2nd Printing Variant".
     *
     * @param fVariantCover java.lang.String value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setVariantCover(java.lang.String fVariantCover);

    /**
     * The individual who traces over the pencil drawings in ink after pencils are complete.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getInker();

    /**
     * The individual who traces over the pencil drawings in ink after pencils are complete.
     *
     * @param fInker Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setInker(Person fInker);

    /**
     * The individual who draws the primary narrative artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getPenciler();

    /**
     * The individual who draws the primary narrative artwork.
     *
     * @param fPenciler Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setPenciler(Person fPenciler);

    /**
     * The primary artist for a work
     *     	in a medium other than pencils or digital line art--for example, if the
     *     	primary artwork is done in watercolors or digital paints.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getArtist();

    /**
     * The primary artist for a work
     *     	in a medium other than pencils or digital line art--for example, if the
     *     	primary artwork is done in watercolors or digital paints.
     *
     * @param fArtist Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void setArtist(Person fArtist);
}
