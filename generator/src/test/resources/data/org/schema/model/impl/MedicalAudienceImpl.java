/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.datatype.Text;
import org.schema.model.AdministrativeArea;
import org.schema.model.CreativeWork;
import org.schema.model.datatype.URL;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.Event;
import org.schema.model.PropertyValue;
import org.schema.model.Thing;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import org.schema.model.Intangible;
import org.schema.model.Audience;
import org.schema.model.datatype.Integer;
import org.schema.model.datatype.Number;
import org.schema.model.MedicalCondition;
import org.schema.model.QuantitativeValue;
import org.schema.model.GenderType;
import org.schema.model.PeopleAudience;
import org.schema.model.MedicalAudience;

/**
 * Target audiences for medical web pages.
 *
 * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
 * @see <a href="https://schema.org/MedicalAudience">https://schema.org/MedicalAudience</a>
 */
@JsonLdTypeName("MedicalAudience")
public class MedicalAudienceImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements MedicalAudience {

    private Text audienceType;

    /**
     * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
     *
     * @return {@link Text}
     */
    @Override
    public Text getAudienceType() {
        return audienceType;
    }

    /**
     * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
     *
     * @param audienceType Text value to set.
     */
    @Override
    public void setAudienceType(Text audienceType) {
        this.audienceType = audienceType;
    }

    private AdministrativeArea geographicArea;

    /**
     * The geographic area associated with the audience.
     *
     * @return {@link AdministrativeArea}
     */
    @Override
    public AdministrativeArea getGeographicArea() {
        return geographicArea;
    }

    /**
     * The geographic area associated with the audience.
     *
     * @param geographicArea AdministrativeArea value to set.
     */
    @Override
    public void setGeographicArea(AdministrativeArea geographicArea) {
        this.geographicArea = geographicArea;
    }

    private Object mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }

    private Text alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text alternateName) {
        this.alternateName = alternateName;
    }

    private Text name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     */
    @Override
    public void setName(Text name) {
        this.name = name;
    }

    private Action potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action potentialAction) {
        this.potentialAction = potentialAction;
    }

    private Object image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void setImage(URL image) {
        this.image = image;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject image) {
        this.image = image;
    }

    private URL url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void setUrl(URL url) {
        this.url = url;
    }

    private Text description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void setDescription(Text description) {
        this.description = description;
    }

    private Object subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event subjectOf) {
        this.subjectOf = subjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = subjectOf;
    }

    private URL additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL additionalType) {
        this.additionalType = additionalType;
    }

    private Text disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = disambiguatingDescription;
    }

    private URL sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void setSameAs(URL sameAs) {
        this.sameAs = sameAs;
    }

    private Object identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void setIdentifier(URL identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void setIdentifier(Text identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue identifier) {
        this.identifier = identifier;
    }

    private Integer requiredMinAge;

    /**
     * Audiences defined by a person's minimum age.
     *
     * @return {@link Integer}
     */
    @Override
    public Integer getRequiredMinAge() {
        return requiredMinAge;
    }

    /**
     * Audiences defined by a person's minimum age.
     *
     * @param requiredMinAge Integer value to set.
     */
    @Override
    public void setRequiredMinAge(Integer requiredMinAge) {
        this.requiredMinAge = requiredMinAge;
    }

    private Number suggestedMaxAge;

    /**
     * Maximum recommended age in years for the audience or user.
     *
     * @return {@link Number}
     */
    @Override
    public Number getSuggestedMaxAge() {
        return suggestedMaxAge;
    }

    /**
     * Maximum recommended age in years for the audience or user.
     *
     * @param suggestedMaxAge Number value to set.
     */
    @Override
    public void setSuggestedMaxAge(Number suggestedMaxAge) {
        this.suggestedMaxAge = suggestedMaxAge;
    }

    private MedicalCondition healthCondition;

    /**
     * Specifying the health condition(s) of a patient, medical study, or other target audience.
     *
     * @return {@link MedicalCondition}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalCondition getHealthCondition() {
        return healthCondition;
    }

    /**
     * Specifying the health condition(s) of a patient, medical study, or other target audience.
     *
     * @param healthCondition MedicalCondition value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void setHealthCondition(MedicalCondition healthCondition) {
        this.healthCondition = healthCondition;
    }

    private QuantitativeValue suggestedMeasurement;

    /**
     * A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public QuantitativeValue getSuggestedMeasurement() {
        return suggestedMeasurement;
    }

    /**
     * A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
     *
     * @param suggestedMeasurement QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public void setSuggestedMeasurement(QuantitativeValue suggestedMeasurement) {
        this.suggestedMeasurement = suggestedMeasurement;
    }

    private QuantitativeValue suggestedAge;

    /**
     * The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public QuantitativeValue getSuggestedAge() {
        return suggestedAge;
    }

    /**
     * The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
     *
     * @param suggestedAge QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public void setSuggestedAge(QuantitativeValue suggestedAge) {
        this.suggestedAge = suggestedAge;
    }

    private Integer requiredMaxAge;

    /**
     * Audiences defined by a person's maximum age.
     *
     * @return {@link Integer}
     */
    @Override
    public Integer getRequiredMaxAge() {
        return requiredMaxAge;
    }

    /**
     * Audiences defined by a person's maximum age.
     *
     * @param requiredMaxAge Integer value to set.
     */
    @Override
    public void setRequiredMaxAge(Integer requiredMaxAge) {
        this.requiredMaxAge = requiredMaxAge;
    }

    private Number suggestedMinAge;

    /**
     * Minimum recommended age in years for the audience or user.
     *
     * @return {@link Number}
     */
    @Override
    public Number getSuggestedMinAge() {
        return suggestedMinAge;
    }

    /**
     * Minimum recommended age in years for the audience or user.
     *
     * @param suggestedMinAge Number value to set.
     */
    @Override
    public void setSuggestedMinAge(Number suggestedMinAge) {
        this.suggestedMinAge = suggestedMinAge;
    }

    private Text requiredGender;

    /**
     * Audiences defined by a person's gender.
     *
     * @return {@link Text}
     */
    @Override
    public Text getRequiredGender() {
        return requiredGender;
    }

    /**
     * Audiences defined by a person's gender.
     *
     * @param requiredGender Text value to set.
     */
    @Override
    public void setRequiredGender(Text requiredGender) {
        this.requiredGender = requiredGender;
    }

    private Object suggestedGender;

    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @return {@link GenderType} or {@link Text}
     */
    @Override
    public <T> T getSuggestedGender() {
        return (T) suggestedGender;
    }

    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @param suggestedGender GenderType value to set.
     */
    @Override
    public void setSuggestedGender(GenderType suggestedGender) {
        this.suggestedGender = suggestedGender;
    }
    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @param suggestedGender Text value to set.
     */
    @Override
    public void setSuggestedGender(Text suggestedGender) {
        this.suggestedGender = suggestedGender;
    }
}
