/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.datatype.Text;
import org.schema.model.DrugLegalStatus;
import org.schema.model.MedicalEnumeration;
import org.schema.model.datatype.Boolean;
import org.schema.model.MaximumDoseSchedule;
import org.schema.model.RecommendedDoseSchedule;
import org.schema.model.QuantitativeValue;
import org.schema.model.Distance;
import org.schema.model.Product;
import org.schema.model.PropertyValue;
import org.schema.model.ProductModel;
import org.schema.model.ProductGroup;
import org.schema.model.Organization;
import org.schema.model.datatype.URL;
import org.schema.model.DefinedTerm;
import org.schema.model.WebContent;
import org.schema.model.ListItem;
import org.schema.model.ItemList;
import org.schema.model.Review;
import org.schema.model.OfferItemCondition;
import org.schema.model.Service;
import org.schema.model.Grant;
import org.schema.model.EnergyConsumptionDetails;
import org.schema.model.MerchantReturnPolicy;
import org.schema.model.Country;
import org.schema.model.AdultOrientedEnumeration;
import org.schema.model.datatype.Date;
import org.schema.model.Audience;
import org.schema.model.ImageObject;
import org.schema.model.Brand;
import org.schema.model.SizeSpecification;
import org.schema.model.CategoryCode;
import org.schema.model.Thing;
import org.schema.model.PhysicalActivityCategory;
import org.schema.model.AggregateRating;
import org.schema.model.Demand;
import org.schema.model.Offer;
import org.schema.model.Action;
import org.schema.model.CreativeWork;
import org.schema.model.Event;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import com.weedow.schemaorg.commons.model.JsonLdFieldTypes;
import java.util.List;
import org.schema.model.MedicalSpecialty;
import org.schema.model.MedicineSystem;
import org.schema.model.MedicalStudy;
import org.schema.model.MedicalGuideline;
import org.schema.model.MedicalCode;
import org.schema.model.MedicalEntity;
import org.schema.model.Substance;
import org.schema.model.DietarySupplement;

/**
 * A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
 *
 * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
 * @see <a href="https://schema.org/DietarySupplement">https://schema.org/DietarySupplement</a>
 */
@JsonLdTypeName("DietarySupplement")
public class DietarySupplementImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements DietarySupplement {

    private List<Text> activeIngredient;

    /**
     * An active ingredient, typically chemical compounds and/or biologic substances.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getActiveIngredientList() {
        return activeIngredient;
    }

    /**
     * An active ingredient, typically chemical compounds and/or biologic substances.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getActiveIngredient() {
        return getFirst(activeIngredient);
    }

    /**
     * An active ingredient, typically chemical compounds and/or biologic substances.
     *
     * @param activeIngredient Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addActiveIngredient(Text activeIngredient) {
        this.activeIngredient = add(this.activeIngredient, activeIngredient);
    }

    private List<Text> nonProprietaryName;

    /**
     * The generic name of this drug or supplement.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getNonProprietaryNameList() {
        return nonProprietaryName;
    }

    /**
     * The generic name of this drug or supplement.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getNonProprietaryName() {
        return getFirst(nonProprietaryName);
    }

    /**
     * The generic name of this drug or supplement.
     *
     * @param nonProprietaryName Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addNonProprietaryName(Text nonProprietaryName) {
        this.nonProprietaryName = add(this.nonProprietaryName, nonProprietaryName);
    }

    private List<Text> safetyConsideration;

    /**
     * Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getSafetyConsiderationList() {
        return safetyConsideration;
    }

    /**
     * Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getSafetyConsideration() {
        return getFirst(safetyConsideration);
    }

    /**
     * Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
     *
     * @param safetyConsideration Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addSafetyConsideration(Text safetyConsideration) {
        this.safetyConsideration = add(this.safetyConsideration, safetyConsideration);
    }

    private List<Text> proprietaryName;

    /**
     * Proprietary name given to the diet plan, typically by its originator or creator.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getProprietaryNameList() {
        return proprietaryName;
    }

    /**
     * Proprietary name given to the diet plan, typically by its originator or creator.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getProprietaryName() {
        return getFirst(proprietaryName);
    }

    /**
     * Proprietary name given to the diet plan, typically by its originator or creator.
     *
     * @param proprietaryName Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addProprietaryName(Text proprietaryName) {
        this.proprietaryName = add(this.proprietaryName, proprietaryName);
    }

    @JsonLdFieldTypes({ Text.class, DrugLegalStatus.class, MedicalEnumeration.class })
    private List<Object> legalStatus;

    /**
     * The drug or supplement's legal status, including any controlled substance schedules that apply.
     *
     * @return {@link Text} or {@link DrugLegalStatus} or {@link MedicalEnumeration}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public <T> List<T> getLegalStatusList() {
        return (List<T>) legalStatus;
    }

    /**
     * The drug or supplement's legal status, including any controlled substance schedules that apply.
     *
     * @return {@link Text} or {@link DrugLegalStatus} or {@link MedicalEnumeration}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public <T> T getLegalStatus() {
        return (T) getFirst(legalStatus);
    }

    /**
     * The drug or supplement's legal status, including any controlled substance schedules that apply.
     *
     * @param legalStatus Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addLegalStatus(Text legalStatus) {
        this.legalStatus = add(this.legalStatus, legalStatus);
    }
    /**
     * The drug or supplement's legal status, including any controlled substance schedules that apply.
     *
     * @param legalStatus DrugLegalStatus value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addLegalStatus(DrugLegalStatus legalStatus) {
        this.legalStatus = add(this.legalStatus, legalStatus);
    }
    /**
     * The drug or supplement's legal status, including any controlled substance schedules that apply.
     *
     * @param legalStatus MedicalEnumeration value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addLegalStatus(MedicalEnumeration legalStatus) {
        this.legalStatus = add(this.legalStatus, legalStatus);
    }

    private List<Text> targetPopulation;

    /**
     * Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getTargetPopulationList() {
        return targetPopulation;
    }

    /**
     * Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getTargetPopulation() {
        return getFirst(targetPopulation);
    }

    /**
     * Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
     *
     * @param targetPopulation Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addTargetPopulation(Text targetPopulation) {
        this.targetPopulation = add(this.targetPopulation, targetPopulation);
    }

    private List<Boolean> isProprietary;

    /**
     * True if this item's name is a proprietary/brand name (vs. generic name).
     *
     * @return {@link Boolean}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Boolean> getIsProprietaryList() {
        return isProprietary;
    }

    /**
     * True if this item's name is a proprietary/brand name (vs. generic name).
     *
     * @return {@link Boolean}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Boolean getIsProprietary() {
        return getFirst(isProprietary);
    }

    /**
     * True if this item's name is a proprietary/brand name (vs. generic name).
     *
     * @param isProprietary Boolean value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addIsProprietary(Boolean isProprietary) {
        this.isProprietary = add(this.isProprietary, isProprietary);
    }

    private List<MaximumDoseSchedule> maximumIntake;

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @return {@link MaximumDoseSchedule}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MaximumDoseSchedule> getMaximumIntakeList() {
        return maximumIntake;
    }

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @return {@link MaximumDoseSchedule}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MaximumDoseSchedule getMaximumIntake() {
        return getFirst(maximumIntake);
    }

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @param maximumIntake MaximumDoseSchedule value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addMaximumIntake(MaximumDoseSchedule maximumIntake) {
        this.maximumIntake = add(this.maximumIntake, maximumIntake);
    }

    private List<RecommendedDoseSchedule> recommendedIntake;

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @return {@link RecommendedDoseSchedule}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<RecommendedDoseSchedule> getRecommendedIntakeList() {
        return recommendedIntake;
    }

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @return {@link RecommendedDoseSchedule}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public RecommendedDoseSchedule getRecommendedIntake() {
        return getFirst(recommendedIntake);
    }

    /**
     * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
     *
     * @param recommendedIntake RecommendedDoseSchedule value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addRecommendedIntake(RecommendedDoseSchedule recommendedIntake) {
        this.recommendedIntake = add(this.recommendedIntake, recommendedIntake);
    }

    private List<Text> mechanismOfAction;

    /**
     * The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Text> getMechanismOfActionList() {
        return mechanismOfAction;
    }

    /**
     * The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
     *
     * @return {@link Text}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Text getMechanismOfAction() {
        return getFirst(mechanismOfAction);
    }

    /**
     * The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
     *
     * @param mechanismOfAction Text value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addMechanismOfAction(Text mechanismOfAction) {
        this.mechanismOfAction = add(this.mechanismOfAction, mechanismOfAction);
    }

    private List<QuantitativeValue> hasMeasurement;

    /**
     * A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public List<QuantitativeValue> getHasMeasurementList() {
        return hasMeasurement;
    }

    /**
     * A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public QuantitativeValue getHasMeasurement() {
        return getFirst(hasMeasurement);
    }

    /**
     * A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
     *
     * @param hasMeasurement QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public void addHasMeasurement(QuantitativeValue hasMeasurement) {
        this.hasMeasurement = add(this.hasMeasurement, hasMeasurement);
    }

    private List<Text> countryOfAssembly;

    /**
     * The place where the product was assembled.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public List<Text> getCountryOfAssemblyList() {
        return countryOfAssembly;
    }

    /**
     * The place where the product was assembled.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public Text getCountryOfAssembly() {
        return getFirst(countryOfAssembly);
    }

    /**
     * The place where the product was assembled.
     *
     * @param countryOfAssembly Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public void addCountryOfAssembly(Text countryOfAssembly) {
        this.countryOfAssembly = add(this.countryOfAssembly, countryOfAssembly);
    }

    @JsonLdFieldTypes({ Distance.class, QuantitativeValue.class })
    private List<Object> width;

    /**
     * The width of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    @Override
    public <T> List<T> getWidthList() {
        return (List<T>) width;
    }

    /**
     * The width of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    @Override
    public <T> T getWidth() {
        return (T) getFirst(width);
    }

    /**
     * The width of the item.
     *
     * @param width Distance value to set.
     */
    @Override
    public void addWidth(Distance width) {
        this.width = add(this.width, width);
    }
    /**
     * The width of the item.
     *
     * @param width QuantitativeValue value to set.
     */
    @Override
    public void addWidth(QuantitativeValue width) {
        this.width = add(this.width, width);
    }

    private List<Product> isAccessoryOrSparePartFor;

    /**
     * A pointer to another product (or multiple products) for which this product is an accessory or spare part.
     *
     * @return {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Product> getIsAccessoryOrSparePartForList() {
        return isAccessoryOrSparePartFor;
    }

    /**
     * A pointer to another product (or multiple products) for which this product is an accessory or spare part.
     *
     * @return {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Product getIsAccessoryOrSparePartFor() {
        return getFirst(isAccessoryOrSparePartFor);
    }

    /**
     * A pointer to another product (or multiple products) for which this product is an accessory or spare part.
     *
     * @param isAccessoryOrSparePartFor Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsAccessoryOrSparePartFor(Product isAccessoryOrSparePartFor) {
        this.isAccessoryOrSparePartFor = add(this.isAccessoryOrSparePartFor, isAccessoryOrSparePartFor);
    }

    private List<Product> isConsumableFor;

    /**
     * A pointer to another product (or multiple products) for which this product is a consumable.
     *
     * @return {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Product> getIsConsumableForList() {
        return isConsumableFor;
    }

    /**
     * A pointer to another product (or multiple products) for which this product is a consumable.
     *
     * @return {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Product getIsConsumableFor() {
        return getFirst(isConsumableFor);
    }

    /**
     * A pointer to another product (or multiple products) for which this product is a consumable.
     *
     * @param isConsumableFor Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsConsumableFor(Product isConsumableFor) {
        this.isConsumableFor = add(this.isConsumableFor, isConsumableFor);
    }

    @JsonLdFieldTypes({ QuantitativeValue.class, Distance.class })
    private List<Object> depth;

    /**
     * The depth of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getDepthList() {
        return (List<T>) depth;
    }

    /**
     * The depth of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getDepth() {
        return (T) getFirst(depth);
    }

    /**
     * The depth of the item.
     *
     * @param depth QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addDepth(QuantitativeValue depth) {
        this.depth = add(this.depth, depth);
    }
    /**
     * The depth of the item.
     *
     * @param depth Distance value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addDepth(Distance depth) {
        this.depth = add(this.depth, depth);
    }

    private List<PropertyValue> additionalProperty;

    /**
     * A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
     *
     * @return {@link PropertyValue}
     */
    @Override
    public List<PropertyValue> getAdditionalPropertyList() {
        return additionalProperty;
    }

    /**
     * A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
     *
     * @return {@link PropertyValue}
     */
    @Override
    public PropertyValue getAdditionalProperty() {
        return getFirst(additionalProperty);
    }

    /**
     * A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
     *
     * @param additionalProperty PropertyValue value to set.
     */
    @Override
    public void addAdditionalProperty(PropertyValue additionalProperty) {
        this.additionalProperty = add(this.additionalProperty, additionalProperty);
    }

    @JsonLdFieldTypes({ ProductModel.class, ProductGroup.class })
    private List<Object> isVariantOf;

    /**
     * Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.
     *
     * @return {@link ProductModel} or {@link ProductGroup}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getIsVariantOfList() {
        return (List<T>) isVariantOf;
    }

    /**
     * Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.
     *
     * @return {@link ProductModel} or {@link ProductGroup}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getIsVariantOf() {
        return (T) getFirst(isVariantOf);
    }

    /**
     * Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.
     *
     * @param isVariantOf ProductModel value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsVariantOf(ProductModel isVariantOf) {
        this.isVariantOf = add(this.isVariantOf, isVariantOf);
    }
    /**
     * Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.
     *
     * @param isVariantOf ProductGroup value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsVariantOf(ProductGroup isVariantOf) {
        this.isVariantOf = add(this.isVariantOf, isVariantOf);
    }

    private List<Text> slogan;

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getSloganList() {
        return slogan;
    }

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getSlogan() {
        return getFirst(slogan);
    }

    /**
     * A slogan or motto associated with the item.
     *
     * @param slogan Text value to set.
     */
    @Override
    public void addSlogan(Text slogan) {
        this.slogan = add(this.slogan, slogan);
    }

    private List<Organization> manufacturer;

    /**
     * The manufacturer of the product.
     *
     * @return {@link Organization}
     */
    @Override
    public List<Organization> getManufacturerList() {
        return manufacturer;
    }

    /**
     * The manufacturer of the product.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getManufacturer() {
        return getFirst(manufacturer);
    }

    /**
     * The manufacturer of the product.
     *
     * @param manufacturer Organization value to set.
     */
    @Override
    public void addManufacturer(Organization manufacturer) {
        this.manufacturer = add(this.manufacturer, manufacturer);
    }

    private List<Text> gtin14;

    /**
     * The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin14</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin14</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGtin14List() {
        return gtin14;
    }

    /**
     * The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin14</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin14</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGtin14() {
        return getFirst(gtin14);
    }

    /**
     * The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @param gtin14 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin14</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin14</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin14(Text gtin14) {
        this.gtin14 = add(this.gtin14, gtin14);
    }

    @JsonLdFieldTypes({ URL.class, DefinedTerm.class, Text.class })
    private List<Object> keywords;

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text}
     */
    @Override
    public <T> List<T> getKeywordsList() {
        return (List<T>) keywords;
    }

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text}
     */
    @Override
    public <T> T getKeywords() {
        return (T) getFirst(keywords);
    }

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords URL value to set.
     */
    @Override
    public void addKeywords(URL keywords) {
        this.keywords = add(this.keywords, keywords);
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords DefinedTerm value to set.
     */
    @Override
    public void addKeywords(DefinedTerm keywords) {
        this.keywords = add(this.keywords, keywords);
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords Text value to set.
     */
    @Override
    public void addKeywords(Text keywords) {
        this.keywords = add(this.keywords, keywords);
    }

    @JsonLdFieldTypes({ Text.class, WebContent.class, ListItem.class, ItemList.class })
    private List<Object> positiveNotes;

    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @return {@link Text} or {@link WebContent} or {@link ListItem} or {@link ItemList}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public <T> List<T> getPositiveNotesList() {
        return (List<T>) positiveNotes;
    }

    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @return {@link Text} or {@link WebContent} or {@link ListItem} or {@link ItemList}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public <T> T getPositiveNotes() {
        return (T) getFirst(positiveNotes);
    }

    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @param positiveNotes Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addPositiveNotes(Text positiveNotes) {
        this.positiveNotes = add(this.positiveNotes, positiveNotes);
    }
    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @param positiveNotes WebContent value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addPositiveNotes(WebContent positiveNotes) {
        this.positiveNotes = add(this.positiveNotes, positiveNotes);
    }
    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @param positiveNotes ListItem value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addPositiveNotes(ListItem positiveNotes) {
        this.positiveNotes = add(this.positiveNotes, positiveNotes);
    }
    /**
     * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
     *
     * @param positiveNotes ItemList value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addPositiveNotes(ItemList positiveNotes) {
        this.positiveNotes = add(this.positiveNotes, positiveNotes);
    }

    private List<Review> reviews;

    /**
     * Review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public List<Review> getReviewsList() {
        return reviews;
    }

    /**
     * Review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReviews() {
        return getFirst(reviews);
    }

    /**
     * Review of the item.
     *
     * @param reviews Review value to set.
     */
    @Override
    public void addReviews(Review reviews) {
        this.reviews = add(this.reviews, reviews);
    }

    @JsonLdFieldTypes({ QuantitativeValue.class, Distance.class })
    private List<Object> height;

    /**
     * The height of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     */
    @Override
    public <T> List<T> getHeightList() {
        return (List<T>) height;
    }

    /**
     * The height of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     */
    @Override
    public <T> T getHeight() {
        return (T) getFirst(height);
    }

    /**
     * The height of the item.
     *
     * @param height QuantitativeValue value to set.
     */
    @Override
    public void addHeight(QuantitativeValue height) {
        this.height = add(this.height, height);
    }
    /**
     * The height of the item.
     *
     * @param height Distance value to set.
     */
    @Override
    public void addHeight(Distance height) {
        this.height = add(this.height, height);
    }

    @JsonLdFieldTypes({ ProductModel.class, Text.class })
    private List<Object> model;

    /**
     * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
     *
     * @return {@link ProductModel} or {@link Text}
     */
    @Override
    public <T> List<T> getModelList() {
        return (List<T>) model;
    }

    /**
     * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
     *
     * @return {@link ProductModel} or {@link Text}
     */
    @Override
    public <T> T getModel() {
        return (T) getFirst(model);
    }

    /**
     * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
     *
     * @param model ProductModel value to set.
     */
    @Override
    public void addModel(ProductModel model) {
        this.model = add(this.model, model);
    }
    /**
     * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
     *
     * @param model Text value to set.
     */
    @Override
    public void addModel(Text model) {
        this.model = add(this.model, model);
    }

    private List<OfferItemCondition> itemCondition;

    /**
     * A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
     *
     * @return {@link OfferItemCondition}
     */
    @Override
    public List<OfferItemCondition> getItemConditionList() {
        return itemCondition;
    }

    /**
     * A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
     *
     * @return {@link OfferItemCondition}
     */
    @Override
    public OfferItemCondition getItemCondition() {
        return getFirst(itemCondition);
    }

    /**
     * A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
     *
     * @param itemCondition OfferItemCondition value to set.
     */
    @Override
    public void addItemCondition(OfferItemCondition itemCondition) {
        this.itemCondition = add(this.itemCondition, itemCondition);
    }

    private List<Text> award;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardList() {
        return award;
    }

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return getFirst(award);
    }

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    @Override
    public void addAward(Text award) {
        this.award = add(this.award, award);
    }

    private List<Text> nsn;

    /**
     * Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2126">https://github.com/schemaorg/schemaorg/issues/2126</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>nsn</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getNsnList() {
        return nsn;
    }

    /**
     * Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2126">https://github.com/schemaorg/schemaorg/issues/2126</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>nsn</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getNsn() {
        return getFirst(nsn);
    }

    /**
     * Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. 
     *
     * @param nsn Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2126">https://github.com/schemaorg/schemaorg/issues/2126</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>nsn</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addNsn(Text nsn) {
        this.nsn = add(this.nsn, nsn);
    }

    private List<Text> awards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardsList() {
        return awards;
    }

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return getFirst(awards);
    }

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    @Override
    public void addAwards(Text awards) {
        this.awards = add(this.awards, awards);
    }

    private List<Review> review;

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public List<Review> getReviewList() {
        return review;
    }

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReview() {
        return getFirst(review);
    }

    /**
     * A review of the item.
     *
     * @param review Review value to set.
     */
    @Override
    public void addReview(Review review) {
        this.review = add(this.review, review);
    }

    @JsonLdFieldTypes({ Text.class, URL.class })
    private List<Object> gtin;

    /**
     * A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
     * 
     * The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.
     * 
     * Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public <T> List<T> getGtinList() {
        return (List<T>) gtin;
    }

    /**
     * A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
     * 
     * The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.
     * 
     * Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public <T> T getGtin() {
        return (T) getFirst(gtin);
    }

    /**
     * A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
     * 
     * The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.
     * 
     * Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
     *
     * @param gtin Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin(Text gtin) {
        this.gtin = add(this.gtin, gtin);
    }
    /**
     * A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
     * 
     * The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.
     * 
     * Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
     *
     * @param gtin URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin(URL gtin) {
        this.gtin = add(this.gtin, gtin);
    }

    @JsonLdFieldTypes({ Product.class, Service.class })
    private List<Object> isRelatedTo;

    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @return {@link Product} or {@link Service}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getIsRelatedToList() {
        return (List<T>) isRelatedTo;
    }

    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @return {@link Product} or {@link Service}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getIsRelatedTo() {
        return (T) getFirst(isRelatedTo);
    }

    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @param isRelatedTo Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsRelatedTo(Product isRelatedTo) {
        this.isRelatedTo = add(this.isRelatedTo, isRelatedTo);
    }
    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @param isRelatedTo Service value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsRelatedTo(Service isRelatedTo) {
        this.isRelatedTo = add(this.isRelatedTo, isRelatedTo);
    }

    @JsonLdFieldTypes({ ListItem.class, Text.class, ItemList.class, WebContent.class })
    private List<Object> negativeNotes;

    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @return {@link ListItem} or {@link Text} or {@link ItemList} or {@link WebContent}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public <T> List<T> getNegativeNotesList() {
        return (List<T>) negativeNotes;
    }

    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @return {@link ListItem} or {@link Text} or {@link ItemList} or {@link WebContent}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public <T> T getNegativeNotes() {
        return (T) getFirst(negativeNotes);
    }

    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @param negativeNotes ListItem value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addNegativeNotes(ListItem negativeNotes) {
        this.negativeNotes = add(this.negativeNotes, negativeNotes);
    }
    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @param negativeNotes Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addNegativeNotes(Text negativeNotes) {
        this.negativeNotes = add(this.negativeNotes, negativeNotes);
    }
    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @param negativeNotes ItemList value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addNegativeNotes(ItemList negativeNotes) {
        this.negativeNotes = add(this.negativeNotes, negativeNotes);
    }
    /**
     * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 
     * 
     * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
     * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
     * 
     * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
     *
     * @param negativeNotes WebContent value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2832">https://github.com/schemaorg/schemaorg/issues/2832</a>
     */
    @Override
    public void addNegativeNotes(WebContent negativeNotes) {
        this.negativeNotes = add(this.negativeNotes, negativeNotes);
    }

    private List<Grant> funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public List<Grant> getFundingList() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public Grant getFunding() {
        return getFirst(funding);
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public void addFunding(Grant funding) {
        this.funding = add(this.funding, funding);
    }

    private List<Text> mobileUrl;

    /**
     * The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
     * 
     * To discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
     *     
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/3134">https://github.com/schemaorg/schemaorg/issues/3134</a>
     */
    @Override
    public List<Text> getMobileUrlList() {
        return mobileUrl;
    }

    /**
     * The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
     * 
     * To discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
     *     
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/3134">https://github.com/schemaorg/schemaorg/issues/3134</a>
     */
    @Override
    public Text getMobileUrl() {
        return getFirst(mobileUrl);
    }

    /**
     * The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
     * 
     * To discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
     *     
     *
     * @param mobileUrl Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/3134">https://github.com/schemaorg/schemaorg/issues/3134</a>
     */
    @Override
    public void addMobileUrl(Text mobileUrl) {
        this.mobileUrl = add(this.mobileUrl, mobileUrl);
    }

    private List<EnergyConsumptionDetails> hasEnergyConsumptionDetails;

    /**
     * Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
     *
     * @return {@link EnergyConsumptionDetails}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2670">https://github.com/schemaorg/schemaorg/issues/2670</a>
     */
    @Override
    public List<EnergyConsumptionDetails> getHasEnergyConsumptionDetailsList() {
        return hasEnergyConsumptionDetails;
    }

    /**
     * Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
     *
     * @return {@link EnergyConsumptionDetails}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2670">https://github.com/schemaorg/schemaorg/issues/2670</a>
     */
    @Override
    public EnergyConsumptionDetails getHasEnergyConsumptionDetails() {
        return getFirst(hasEnergyConsumptionDetails);
    }

    /**
     * Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
     *
     * @param hasEnergyConsumptionDetails EnergyConsumptionDetails value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2670">https://github.com/schemaorg/schemaorg/issues/2670</a>
     */
    @Override
    public void addHasEnergyConsumptionDetails(EnergyConsumptionDetails hasEnergyConsumptionDetails) {
        this.hasEnergyConsumptionDetails = add(this.hasEnergyConsumptionDetails, hasEnergyConsumptionDetails);
    }

    private List<QuantitativeValue> weight;

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<QuantitativeValue> getWeightList() {
        return weight;
    }

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public QuantitativeValue getWeight() {
        return getFirst(weight);
    }

    /**
     * The weight of the product or person.
     *
     * @param weight QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addWeight(QuantitativeValue weight) {
        this.weight = add(this.weight, weight);
    }

    private List<MerchantReturnPolicy> hasMerchantReturnPolicy;

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @return {@link MerchantReturnPolicy}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public List<MerchantReturnPolicy> getHasMerchantReturnPolicyList() {
        return hasMerchantReturnPolicy;
    }

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @return {@link MerchantReturnPolicy}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public MerchantReturnPolicy getHasMerchantReturnPolicy() {
        return getFirst(hasMerchantReturnPolicy);
    }

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @param hasMerchantReturnPolicy MerchantReturnPolicy value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public void addHasMerchantReturnPolicy(MerchantReturnPolicy hasMerchantReturnPolicy) {
        this.hasMerchantReturnPolicy = add(this.hasMerchantReturnPolicy, hasMerchantReturnPolicy);
    }

    @JsonLdFieldTypes({ DefinedTerm.class, Text.class })
    private List<Object> pattern;

    /**
     * A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
     *
     * @return {@link DefinedTerm} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public <T> List<T> getPatternList() {
        return (List<T>) pattern;
    }

    /**
     * A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
     *
     * @return {@link DefinedTerm} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public <T> T getPattern() {
        return (T) getFirst(pattern);
    }

    /**
     * A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
     *
     * @param pattern DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addPattern(DefinedTerm pattern) {
        this.pattern = add(this.pattern, pattern);
    }
    /**
     * A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
     *
     * @param pattern Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addPattern(Text pattern) {
        this.pattern = add(this.pattern, pattern);
    }

    private List<Boolean> isFamilyFriendly;

    /**
     * Indicates whether this content is family friendly.
     *
     * @return {@link Boolean}
     */
    @Override
    public List<Boolean> getIsFamilyFriendlyList() {
        return isFamilyFriendly;
    }

    /**
     * Indicates whether this content is family friendly.
     *
     * @return {@link Boolean}
     */
    @Override
    public Boolean getIsFamilyFriendly() {
        return getFirst(isFamilyFriendly);
    }

    /**
     * Indicates whether this content is family friendly.
     *
     * @param isFamilyFriendly Boolean value to set.
     */
    @Override
    public void addIsFamilyFriendly(Boolean isFamilyFriendly) {
        this.isFamilyFriendly = add(this.isFamilyFriendly, isFamilyFriendly);
    }

    private List<Text> gtin12;

    /**
     * The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin12</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin12</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGtin12List() {
        return gtin12;
    }

    /**
     * The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin12</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin12</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGtin12() {
        return getFirst(gtin12);
    }

    /**
     * The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @param gtin12 Text value to set.
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin12</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin12</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin12(Text gtin12) {
        this.gtin12 = add(this.gtin12, gtin12);
    }

    @JsonLdFieldTypes({ Product.class, Service.class })
    private List<Object> isSimilarTo;

    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @return {@link Product} or {@link Service}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getIsSimilarToList() {
        return (List<T>) isSimilarTo;
    }

    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @return {@link Product} or {@link Service}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getIsSimilarTo() {
        return (T) getFirst(isSimilarTo);
    }

    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @param isSimilarTo Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsSimilarTo(Product isSimilarTo) {
        this.isSimilarTo = add(this.isSimilarTo, isSimilarTo);
    }
    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @param isSimilarTo Service value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsSimilarTo(Service isSimilarTo) {
        this.isSimilarTo = add(this.isSimilarTo, isSimilarTo);
    }

    private List<Text> productID;

    /**
     * The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>productID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getProductIDList() {
        return productID;
    }

    /**
     * The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>productID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getProductID() {
        return getFirst(productID);
    }

    /**
     * The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
     *
     * @param productID Text value to set.
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>productID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addProductID(Text productID) {
        this.productID = add(this.productID, productID);
    }

    private List<Country> countryOfOrigin;

    /**
     * The country of origin of something, including products as well as creative  works such as movie and TV content.
     * 
     * In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.
     * 
     * In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
     *
     * @return {@link Country}
     */
    @Override
    public List<Country> getCountryOfOriginList() {
        return countryOfOrigin;
    }

    /**
     * The country of origin of something, including products as well as creative  works such as movie and TV content.
     * 
     * In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.
     * 
     * In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
     *
     * @return {@link Country}
     */
    @Override
    public Country getCountryOfOrigin() {
        return getFirst(countryOfOrigin);
    }

    /**
     * The country of origin of something, including products as well as creative  works such as movie and TV content.
     * 
     * In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.
     * 
     * In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
     *
     * @param countryOfOrigin Country value to set.
     */
    @Override
    public void addCountryOfOrigin(Country countryOfOrigin) {
        this.countryOfOrigin = add(this.countryOfOrigin, countryOfOrigin);
    }

    private List<AdultOrientedEnumeration> hasAdultConsideration;

    /**
     * Used to tag an item to be intended or suitable for consumption or use by adults only.
     *
     * @return {@link AdultOrientedEnumeration}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2989">https://github.com/schemaorg/schemaorg/issues/2989</a>
     */
    @Override
    public List<AdultOrientedEnumeration> getHasAdultConsiderationList() {
        return hasAdultConsideration;
    }

    /**
     * Used to tag an item to be intended or suitable for consumption or use by adults only.
     *
     * @return {@link AdultOrientedEnumeration}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2989">https://github.com/schemaorg/schemaorg/issues/2989</a>
     */
    @Override
    public AdultOrientedEnumeration getHasAdultConsideration() {
        return getFirst(hasAdultConsideration);
    }

    /**
     * Used to tag an item to be intended or suitable for consumption or use by adults only.
     *
     * @param hasAdultConsideration AdultOrientedEnumeration value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2989">https://github.com/schemaorg/schemaorg/issues/2989</a>
     */
    @Override
    public void addHasAdultConsideration(AdultOrientedEnumeration hasAdultConsideration) {
        this.hasAdultConsideration = add(this.hasAdultConsideration, hasAdultConsideration);
    }

    private List<Date> purchaseDate;

    /**
     * The date the item, e.g. vehicle, was purchased by the current owner.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public List<Date> getPurchaseDateList() {
        return purchaseDate;
    }

    /**
     * The date the item, e.g. vehicle, was purchased by the current owner.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public Date getPurchaseDate() {
        return getFirst(purchaseDate);
    }

    /**
     * The date the item, e.g. vehicle, was purchased by the current owner.
     *
     * @param purchaseDate Date value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public void addPurchaseDate(Date purchaseDate) {
        this.purchaseDate = add(this.purchaseDate, purchaseDate);
    }

    private List<Audience> audience;

    /**
     * An intended audience, i.e. a group for whom something was created.
     *
     * @return {@link Audience}
     */
    @Override
    public List<Audience> getAudienceList() {
        return audience;
    }

    /**
     * An intended audience, i.e. a group for whom something was created.
     *
     * @return {@link Audience}
     */
    @Override
    public Audience getAudience() {
        return getFirst(audience);
    }

    /**
     * An intended audience, i.e. a group for whom something was created.
     *
     * @param audience Audience value to set.
     */
    @Override
    public void addAudience(Audience audience) {
        this.audience = add(this.audience, audience);
    }

    @JsonLdFieldTypes({ ImageObject.class, URL.class })
    private List<Object> logo;

    /**
     * An associated logo.
     *
     * @return {@link ImageObject} or {@link URL}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public <T> List<T> getLogoList() {
        return (List<T>) logo;
    }

    /**
     * An associated logo.
     *
     * @return {@link ImageObject} or {@link URL}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public <T> T getLogo() {
        return (T) getFirst(logo);
    }

    /**
     * An associated logo.
     *
     * @param logo ImageObject value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public void addLogo(ImageObject logo) {
        this.logo = add(this.logo, logo);
    }
    /**
     * An associated logo.
     *
     * @param logo URL value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public void addLogo(URL logo) {
        this.logo = add(this.logo, logo);
    }

    private List<Text> countryOfLastProcessing;

    /**
     * The place where the item (typically [[Product]]) was last processed and tested before importation.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public List<Text> getCountryOfLastProcessingList() {
        return countryOfLastProcessing;
    }

    /**
     * The place where the item (typically [[Product]]) was last processed and tested before importation.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public Text getCountryOfLastProcessing() {
        return getFirst(countryOfLastProcessing);
    }

    /**
     * The place where the item (typically [[Product]]) was last processed and tested before importation.
     *
     * @param countryOfLastProcessing Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/991">https://github.com/schemaorg/schemaorg/issues/991</a>
     */
    @Override
    public void addCountryOfLastProcessing(Text countryOfLastProcessing) {
        this.countryOfLastProcessing = add(this.countryOfLastProcessing, countryOfLastProcessing);
    }

    @JsonLdFieldTypes({ Text.class, URL.class })
    private List<Object> asin;

    /**
     * An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
     * 
     * Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
     * ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>asin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public <T> List<T> getAsinList() {
        return (List<T>) asin;
    }

    /**
     * An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
     * 
     * Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
     * ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>asin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public <T> T getAsin() {
        return (T) getFirst(asin);
    }

    /**
     * An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
     * 
     * Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
     * ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
     *
     * @param asin Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>asin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addAsin(Text asin) {
        this.asin = add(this.asin, asin);
    }
    /**
     * An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
     * 
     * Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
     * ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
     *
     * @param asin URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>asin</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addAsin(URL asin) {
        this.asin = add(this.asin, asin);
    }

    private List<Text> gtin8;

    /**
     * The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin8</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin8</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGtin8List() {
        return gtin8;
    }

    /**
     * The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin8</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin8</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGtin8() {
        return getFirst(gtin8);
    }

    /**
     * The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @param gtin8 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin8</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin8</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin8(Text gtin8) {
        this.gtin8 = add(this.gtin8, gtin8);
    }

    private List<Date> releaseDate;

    /**
     * The release date of a product or product model. This can be used to distinguish the exact variant of a product.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Date> getReleaseDateList() {
        return releaseDate;
    }

    /**
     * The release date of a product or product model. This can be used to distinguish the exact variant of a product.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Date getReleaseDate() {
        return getFirst(releaseDate);
    }

    /**
     * The release date of a product or product model. This can be used to distinguish the exact variant of a product.
     *
     * @param releaseDate Date value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addReleaseDate(Date releaseDate) {
        this.releaseDate = add(this.releaseDate, releaseDate);
    }

    @JsonLdFieldTypes({ Brand.class, Organization.class })
    private List<Object> brand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> List<T> getBrandList() {
        return (List<T>) brand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> T getBrand() {
        return (T) getFirst(brand);
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    @Override
    public void addBrand(Brand brand) {
        this.brand = add(this.brand, brand);
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    @Override
    public void addBrand(Organization brand) {
        this.brand = add(this.brand, brand);
    }

    private List<Date> productionDate;

    /**
     * The date of production of the item, e.g. vehicle.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public List<Date> getProductionDateList() {
        return productionDate;
    }

    /**
     * The date of production of the item, e.g. vehicle.
     *
     * @return {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public Date getProductionDate() {
        return getFirst(productionDate);
    }

    /**
     * The date of production of the item, e.g. vehicle.
     *
     * @param productionDate Date value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group</a>
     */
    @Override
    public void addProductionDate(Date productionDate) {
        this.productionDate = add(this.productionDate, productionDate);
    }

    private List<Text> inProductGroupWithID;

    /**
     * Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public List<Text> getInProductGroupWithIDList() {
        return inProductGroupWithID;
    }

    /**
     * Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public Text getInProductGroupWithID() {
        return getFirst(inProductGroupWithID);
    }

    /**
     * Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. 
     *
     * @param inProductGroupWithID Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addInProductGroupWithID(Text inProductGroupWithID) {
        this.inProductGroupWithID = add(this.inProductGroupWithID, inProductGroupWithID);
    }

    @JsonLdFieldTypes({ DefinedTerm.class, QuantitativeValue.class, Text.class, SizeSpecification.class })
    private List<Object> size;

    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @return {@link DefinedTerm} or {@link QuantitativeValue} or {@link Text} or {@link SizeSpecification}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public <T> List<T> getSizeList() {
        return (List<T>) size;
    }

    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @return {@link DefinedTerm} or {@link QuantitativeValue} or {@link Text} or {@link SizeSpecification}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public <T> T getSize() {
        return (T) getFirst(size);
    }

    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @param size DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addSize(DefinedTerm size) {
        this.size = add(this.size, size);
    }
    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @param size QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addSize(QuantitativeValue size) {
        this.size = add(this.size, size);
    }
    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @param size Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addSize(Text size) {
        this.size = add(this.size, size);
    }
    /**
     * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. 
     *
     * @param size SizeSpecification value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1797">https://github.com/schemaorg/schemaorg/issues/1797</a>
     */
    @Override
    public void addSize(SizeSpecification size) {
        this.size = add(this.size, size);
    }

    private List<Text> mpn;

    /**
     * The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getMpnList() {
        return mpn;
    }

    /**
     * The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getMpn() {
        return getFirst(mpn);
    }

    /**
     * The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
     *
     * @param mpn Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addMpn(Text mpn) {
        this.mpn = add(this.mpn, mpn);
    }

    @JsonLdFieldTypes({ URL.class, CategoryCode.class, Text.class, Thing.class, PhysicalActivityCategory.class })
    private List<Object> category;

    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @return {@link URL} or {@link CategoryCode} or {@link Text} or {@link Thing} or {@link PhysicalActivityCategory}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public <T> List<T> getCategoryList() {
        return (List<T>) category;
    }

    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @return {@link URL} or {@link CategoryCode} or {@link Text} or {@link Thing} or {@link PhysicalActivityCategory}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public <T> T getCategory() {
        return (T) getFirst(category);
    }

    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @param category URL value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void addCategory(URL category) {
        this.category = add(this.category, category);
    }
    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @param category CategoryCode value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void addCategory(CategoryCode category) {
        this.category = add(this.category, category);
    }
    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @param category Text value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void addCategory(Text category) {
        this.category = add(this.category, category);
    }
    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @param category Thing value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void addCategory(Thing category) {
        this.category = add(this.category, category);
    }
    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @param category PhysicalActivityCategory value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void addCategory(PhysicalActivityCategory category) {
        this.category = add(this.category, category);
    }

    private List<AggregateRating> aggregateRating;

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    @Override
    public List<AggregateRating> getAggregateRatingList() {
        return aggregateRating;
    }

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    @Override
    public AggregateRating getAggregateRating() {
        return getFirst(aggregateRating);
    }

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @param aggregateRating AggregateRating value to set.
     */
    @Override
    public void addAggregateRating(AggregateRating aggregateRating) {
        this.aggregateRating = add(this.aggregateRating, aggregateRating);
    }

    private List<Text> color;

    /**
     * The color of the product.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getColorList() {
        return color;
    }

    /**
     * The color of the product.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getColor() {
        return getFirst(color);
    }

    /**
     * The color of the product.
     *
     * @param color Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addColor(Text color) {
        this.color = add(this.color, color);
    }

    @JsonLdFieldTypes({ Product.class, URL.class, Text.class })
    private List<Object> material;

    /**
     * A material that something is made from, e.g. leather, wool, cotton, paper.
     *
     * @return {@link Product} or {@link URL} or {@link Text}
     */
    @Override
    public <T> List<T> getMaterialList() {
        return (List<T>) material;
    }

    /**
     * A material that something is made from, e.g. leather, wool, cotton, paper.
     *
     * @return {@link Product} or {@link URL} or {@link Text}
     */
    @Override
    public <T> T getMaterial() {
        return (T) getFirst(material);
    }

    /**
     * A material that something is made from, e.g. leather, wool, cotton, paper.
     *
     * @param material Product value to set.
     */
    @Override
    public void addMaterial(Product material) {
        this.material = add(this.material, material);
    }
    /**
     * A material that something is made from, e.g. leather, wool, cotton, paper.
     *
     * @param material URL value to set.
     */
    @Override
    public void addMaterial(URL material) {
        this.material = add(this.material, material);
    }
    /**
     * A material that something is made from, e.g. leather, wool, cotton, paper.
     *
     * @param material Text value to set.
     */
    @Override
    public void addMaterial(Text material) {
        this.material = add(this.material, material);
    }

    @JsonLdFieldTypes({ Demand.class, Offer.class })
    private List<Object> offers;

    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @return {@link Demand} or {@link Offer}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public <T> List<T> getOffersList() {
        return (List<T>) offers;
    }

    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @return {@link Demand} or {@link Offer}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public <T> T getOffers() {
        return (T) getFirst(offers);
    }

    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @param offers Demand value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void addOffers(Demand offers) {
        this.offers = add(this.offers, offers);
    }
    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @param offers Offer value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void addOffers(Offer offers) {
        this.offers = add(this.offers, offers);
    }

    private List<Text> gtin13;

    /**
     * The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin13</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin13</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGtin13List() {
        return gtin13;
    }

    /**
     * The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin13</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin13</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGtin13() {
        return getFirst(gtin13);
    }

    /**
     * The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
     *
     * @param gtin13 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/gtin">https://schema.org/gtin</a> <i>gtin13</i> is a sub property of <i>gtin</i>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>gtin13</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGtin13(Text gtin13) {
        this.gtin13 = add(this.gtin13, gtin13);
    }

    private List<Text> sku;

    /**
     * The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>sku</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getSkuList() {
        return sku;
    }

    /**
     * The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>sku</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getSku() {
        return getFirst(sku);
    }

    /**
     * The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
     *
     * @param sku Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>sku</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addSku(Text sku) {
        this.sku = add(this.sku, sku);
    }

    private List<Action> potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public List<Action> getPotentialActionList() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return getFirst(potentialAction);
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void addPotentialAction(Action potentialAction) {
        this.potentialAction = add(this.potentialAction, potentialAction);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> List<T> getMainEntityOfPageList() {
        return (List<T>) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) getFirst(mainEntityOfPage);
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void addMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void addMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }

    @JsonLdFieldTypes({ Event.class, CreativeWork.class })
    private List<Object> subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> List<T> getSubjectOfList() {
        return (List<T>) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) getFirst(subjectOf);
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(Event subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }

    private List<URL> url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getUrlList() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return getFirst(url);
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void addUrl(URL url) {
        this.url = add(this.url, url);
    }

    private List<Text> alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAlternateNameList() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return getFirst(alternateName);
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void addAlternateName(Text alternateName) {
        this.alternateName = add(this.alternateName, alternateName);
    }

    private List<URL> sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getSameAsList() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return getFirst(sameAs);
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void addSameAs(URL sameAs) {
        this.sameAs = add(this.sameAs, sameAs);
    }

    private List<Text> description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getDescriptionList() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return getFirst(description);
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void addDescription(Text description) {
        this.description = add(this.description, description);
    }

    private List<Text> disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public List<Text> getDisambiguatingDescriptionList() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public Text getDisambiguatingDescription() {
        return getFirst(disambiguatingDescription);
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public void addDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = add(this.disambiguatingDescription, disambiguatingDescription);
    }

    @JsonLdFieldTypes({ PropertyValue.class, URL.class, Text.class })
    private List<Object> identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> List<T> getIdentifierList() {
        return (List<T>) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) getFirst(identifier);
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void addIdentifier(PropertyValue identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void addIdentifier(URL identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void addIdentifier(Text identifier) {
        this.identifier = add(this.identifier, identifier);
    }

    @JsonLdFieldTypes({ URL.class, ImageObject.class })
    private List<Object> image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> List<T> getImageList() {
        return (List<T>) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) getFirst(image);
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void addImage(URL image) {
        this.image = add(this.image, image);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void addImage(ImageObject image) {
        this.image = add(this.image, image);
    }

    private List<Text> name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public List<Text> getNameList() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public Text getName() {
        return getFirst(name);
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public void addName(Text name) {
        this.name = add(this.name, name);
    }

    private List<URL> additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public List<URL> getAdditionalTypeList() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public URL getAdditionalType() {
        return getFirst(additionalType);
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public void addAdditionalType(URL additionalType) {
        this.additionalType = add(this.additionalType, additionalType);
    }

    private List<Organization> recognizingAuthority;

    /**
     * If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
     *
     * @return {@link Organization}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<Organization> getRecognizingAuthorityList() {
        return recognizingAuthority;
    }

    /**
     * If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
     *
     * @return {@link Organization}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Organization getRecognizingAuthority() {
        return getFirst(recognizingAuthority);
    }

    /**
     * If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
     *
     * @param recognizingAuthority Organization value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addRecognizingAuthority(Organization recognizingAuthority) {
        this.recognizingAuthority = add(this.recognizingAuthority, recognizingAuthority);
    }

    private List<MedicalSpecialty> relevantSpecialty;

    /**
     * If applicable, a medical specialty in which this entity is relevant.
     *
     * @return {@link MedicalSpecialty}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MedicalSpecialty> getRelevantSpecialtyList() {
        return relevantSpecialty;
    }

    /**
     * If applicable, a medical specialty in which this entity is relevant.
     *
     * @return {@link MedicalSpecialty}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalSpecialty getRelevantSpecialty() {
        return getFirst(relevantSpecialty);
    }

    /**
     * If applicable, a medical specialty in which this entity is relevant.
     *
     * @param relevantSpecialty MedicalSpecialty value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addRelevantSpecialty(MedicalSpecialty relevantSpecialty) {
        this.relevantSpecialty = add(this.relevantSpecialty, relevantSpecialty);
    }

    private List<MedicineSystem> medicineSystem;

    /**
     * The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
     *
     * @return {@link MedicineSystem}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MedicineSystem> getMedicineSystemList() {
        return medicineSystem;
    }

    /**
     * The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
     *
     * @return {@link MedicineSystem}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicineSystem getMedicineSystem() {
        return getFirst(medicineSystem);
    }

    /**
     * The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
     *
     * @param medicineSystem MedicineSystem value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addMedicineSystem(MedicineSystem medicineSystem) {
        this.medicineSystem = add(this.medicineSystem, medicineSystem);
    }

    private List<MedicalStudy> study;

    /**
     * A medical study or trial related to this entity.
     *
     * @return {@link MedicalStudy}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MedicalStudy> getStudyList() {
        return study;
    }

    /**
     * A medical study or trial related to this entity.
     *
     * @return {@link MedicalStudy}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalStudy getStudy() {
        return getFirst(study);
    }

    /**
     * A medical study or trial related to this entity.
     *
     * @param study MedicalStudy value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addStudy(MedicalStudy study) {
        this.study = add(this.study, study);
    }

    private List<MedicalGuideline> guideline;

    /**
     * A medical guideline related to this entity.
     *
     * @return {@link MedicalGuideline}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MedicalGuideline> getGuidelineList() {
        return guideline;
    }

    /**
     * A medical guideline related to this entity.
     *
     * @return {@link MedicalGuideline}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalGuideline getGuideline() {
        return getFirst(guideline);
    }

    /**
     * A medical guideline related to this entity.
     *
     * @param guideline MedicalGuideline value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addGuideline(MedicalGuideline guideline) {
        this.guideline = add(this.guideline, guideline);
    }

    private List<MedicalCode> code;

    /**
     * A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
     *
     * @return {@link MedicalCode}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public List<MedicalCode> getCodeList() {
        return code;
    }

    /**
     * A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
     *
     * @return {@link MedicalCode}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalCode getCode() {
        return getFirst(code);
    }

    /**
     * A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
     *
     * @param code MedicalCode value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void addCode(MedicalCode code) {
        this.code = add(this.code, code);
    }
}
