/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.Rating;
import org.schema.model.datatype.Text;
import org.schema.model.datatype.URL;
import org.schema.model.datatype.Boolean;
import org.schema.model.Menu;

/**
 * A food-related business.
 *
 * @see <a href="https://schema.org/FoodEstablishment">https://schema.org/FoodEstablishment</a>
 */
public interface FoodEstablishment extends LocalBusiness {

    /**
     * An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
     *
     * @return {@link Rating}
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    List<Rating> getStarRatingList();

    /**
     * An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
     *
     * @return {@link Rating}
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    Rating getStarRating();

    /**
     * An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
     *
     * @param starRating Rating value to set.
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    void addStarRating(Rating starRating);

    /**
     * The cuisine of the restaurant.
     *
     * @return {@link Text}
     */
    List<Text> getServesCuisineList();

    /**
     * The cuisine of the restaurant.
     *
     * @return {@link Text}
     */
    Text getServesCuisine();

    /**
     * The cuisine of the restaurant.
     *
     * @param servesCuisine Text value to set.
     */
    void addServesCuisine(Text servesCuisine);

    /**
     * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
     *
     * @return {@link URL} or {@link Text} or {@link Boolean}
     */
    <T> List<T> getAcceptsReservationsList();

    /**
     * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
     *
     * @return {@link URL} or {@link Text} or {@link Boolean}
     */
    <T> T getAcceptsReservations();

    /**
     * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
     *
     * @param acceptsReservations URL value to set.
     */
    void addAcceptsReservations(URL acceptsReservations);
    /**
     * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
     *
     * @param acceptsReservations Text value to set.
     */
    void addAcceptsReservations(Text acceptsReservations);
    /**
     * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
     *
     * @param acceptsReservations Boolean value to set.
     */
    void addAcceptsReservations(Boolean acceptsReservations);

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @return {@link Menu} or {@link Text} or {@link URL}
     */
    <T> List<T> getMenuList();

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @return {@link Menu} or {@link Text} or {@link URL}
     */
    <T> T getMenu();

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param menu Menu value to set.
     */
    void addMenu(Menu menu);
    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param menu Text value to set.
     */
    void addMenu(Text menu);
    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param menu URL value to set.
     */
    void addMenu(URL menu);

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @return {@link URL} or {@link Text} or {@link Menu}
     */
    <T> List<T> getHasMenuList();

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @return {@link URL} or {@link Text} or {@link Menu}
     */
    <T> T getHasMenu();

    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param hasMenu URL value to set.
     */
    void addHasMenu(URL hasMenu);
    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param hasMenu Text value to set.
     */
    void addHasMenu(Text hasMenu);
    /**
     * Either the actual menu as a structured representation, as text, or a URL of the menu.
     *
     * @param hasMenu Menu value to set.
     */
    void addHasMenu(Menu hasMenu);
}
