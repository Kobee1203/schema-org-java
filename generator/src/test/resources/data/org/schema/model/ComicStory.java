/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.Person;

/**
 * The term "story" is any indivisible, re-printable
 *     	unit of a comic, including the interior stories, covers, and backmatter. Most
 *     	comics have at least two stories: a cover (ComicCoverArt) and an interior story.
 *
 * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
 * @see <a href="https://schema.org/ComicStory">https://schema.org/ComicStory</a>
 */
public interface ComicStory extends CreativeWork {

    /**
     * The individual who adds lettering, including speech balloons and sound effects, to artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    List<Person> getLettererList();

    /**
     * The individual who adds lettering, including speech balloons and sound effects, to artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getLetterer();

    /**
     * The individual who adds lettering, including speech balloons and sound effects, to artwork.
     *
     * @param letterer Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void addLetterer(Person letterer);

    /**
     * The individual who adds color to inked drawings.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    List<Person> getColoristList();

    /**
     * The individual who adds color to inked drawings.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getColorist();

    /**
     * The individual who adds color to inked drawings.
     *
     * @param colorist Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void addColorist(Person colorist);

    /**
     * The individual who traces over the pencil drawings in ink after pencils are complete.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    List<Person> getInkerList();

    /**
     * The individual who traces over the pencil drawings in ink after pencils are complete.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getInker();

    /**
     * The individual who traces over the pencil drawings in ink after pencils are complete.
     *
     * @param inker Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void addInker(Person inker);

    /**
     * The individual who draws the primary narrative artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    List<Person> getPencilerList();

    /**
     * The individual who draws the primary narrative artwork.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getPenciler();

    /**
     * The individual who draws the primary narrative artwork.
     *
     * @param penciler Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void addPenciler(Person penciler);

    /**
     * The primary artist for a work
     *     	in a medium other than pencils or digital line art--for example, if the
     *     	primary artwork is done in watercolors or digital paints.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    List<Person> getArtistList();

    /**
     * The primary artist for a work
     *     	in a medium other than pencils or digital line art--for example, if the
     *     	primary artwork is done in watercolors or digital paints.
     *
     * @return {@link Person}
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    Person getArtist();

    /**
     * The primary artist for a work
     *     	in a medium other than pencils or digital line art--for example, if the
     *     	primary artwork is done in watercolors or digital paints.
     *
     * @param artist Person value to set.
     * @see <a href="https://bib.schema.org">https://bib.schema.org</a>
     */
    void addArtist(Person artist);
}
