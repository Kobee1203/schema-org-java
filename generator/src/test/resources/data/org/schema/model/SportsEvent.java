/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Person;
import org.schema.model.SportsTeam;
import org.schema.model.datatype.Text;
import org.schema.model.datatype.URL;

/**
 * Event type: Sports event.
 *
 * @see <a href="https://schema.org/SportsEvent">https://schema.org/SportsEvent</a>
 */
public interface SportsEvent extends Event {

    /**
     * The home team in a sports event.
     *
     * @return {@link Person} or {@link SportsTeam}
     */
    <T> T getHomeTeam();

    /**
     * The home team in a sports event.
     *
     * @param fHomeTeam Person value to set.
     */
    void setHomeTeam(Person fHomeTeam);
    /**
     * The home team in a sports event.
     *
     * @param fHomeTeam SportsTeam value to set.
     */
    void setHomeTeam(SportsTeam fHomeTeam);

    /**
     * The away team in a sports event.
     *
     * @return {@link SportsTeam} or {@link Person}
     */
    <T> T getAwayTeam();

    /**
     * The away team in a sports event.
     *
     * @param fAwayTeam SportsTeam value to set.
     */
    void setAwayTeam(SportsTeam fAwayTeam);
    /**
     * The away team in a sports event.
     *
     * @param fAwayTeam Person value to set.
     */
    void setAwayTeam(Person fAwayTeam);

    /**
     * A competitor in a sports event.
     *
     * @return {@link Person} or {@link SportsTeam}
     */
    <T> T getCompetitor();

    /**
     * A competitor in a sports event.
     *
     * @param fCompetitor Person value to set.
     */
    void setCompetitor(Person fCompetitor);
    /**
     * A competitor in a sports event.
     *
     * @param fCompetitor SportsTeam value to set.
     */
    void setCompetitor(SportsTeam fCompetitor);

    /**
     * A type of sport (e.g. Baseball).
     *
     * @return {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    <T> T getSport();

    /**
     * A type of sport (e.g. Baseball).
     *
     * @param fSport Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void setSport(Text fSport);
    /**
     * A type of sport (e.g. Baseball).
     *
     * @param fSport java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void setSport(java.lang.String fSport);
    /**
     * A type of sport (e.g. Baseball).
     *
     * @param fSport URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void setSport(URL fSport);
    /**
     * A type of sport (e.g. Baseball).
     *
     * @param fSport java.net.URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1951">https://github.com/schemaorg/schemaorg/issues/1951</a>
     */
    void setSport(java.net.URL fSport);
}
