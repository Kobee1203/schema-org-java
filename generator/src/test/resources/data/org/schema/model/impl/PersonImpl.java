/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.Person;
import org.schema.model.datatype.Text;
import org.schema.model.Place;
import org.schema.model.Thing;
import org.schema.model.datatype.URL;
import org.schema.model.Offer;
import org.schema.model.Country;
import org.schema.model.Organization;
import org.schema.model.ProgramMembership;
import org.schema.model.CreativeWork;
import org.schema.model.QuantitativeValue;
import org.schema.model.Distance;
import org.schema.model.ContactPoint;
import org.schema.model.DefinedTerm;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.Grant;
import org.schema.model.InteractionCounter;
import org.schema.model.Demand;
import org.schema.model.datatype.Date;
import org.schema.model.Event;
import org.schema.model.Language;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.PostalAddress;
import org.schema.model.Brand;
import org.schema.model.Occupation;
import org.schema.model.MonetaryAmount;
import org.schema.model.PriceSpecification;
import org.schema.model.GenderType;
import org.schema.model.OfferCatalog;
import org.schema.model.EducationalOrganization;
import org.schema.model.Action;
import org.schema.model.PropertyValue;
import org.schema.model.ImageObject;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import com.weedow.schemaorg.commons.model.JsonLdFieldTypes;
import java.util.List;

/**
 * A person (alive, dead, undead, or fictional).
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews</a>
 * @see <a href="https://schema.org/Person">https://schema.org/Person</a>
 */
@JsonLdTypeName("Person")
public class PersonImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements Person {

    private List<Person> sibling;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getSiblingList() {
        return sibling;
    }

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSibling() {
        return getFirst(sibling);
    }

    /**
     * A sibling of the person.
     *
     * @param sibling Person value to set.
     */
    @Override
    public void addSibling(Person sibling) {
        this.sibling = add(this.sibling, sibling);
    }

    private List<Text> isicV4;

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getIsicV4List() {
        return isicV4;
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getIsicV4() {
        return getFirst(isicV4);
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param isicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsicV4(Text isicV4) {
        this.isicV4 = add(this.isicV4, isicV4);
    }

    private List<Place> hasPOS;

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Place> getHasPOSList() {
        return hasPOS;
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Place getHasPOS() {
        return getFirst(hasPOS);
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param hasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addHasPOS(Place hasPOS) {
        this.hasPOS = add(this.hasPOS, hasPOS);
    }

    private List<Text> globalLocationNumber;

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGlobalLocationNumberList() {
        return globalLocationNumber;
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGlobalLocationNumber() {
        return getFirst(globalLocationNumber);
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param globalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGlobalLocationNumber(Text globalLocationNumber) {
        this.globalLocationNumber = add(this.globalLocationNumber, globalLocationNumber);
    }

    private List<Person> spouse;

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getSpouseList() {
        return spouse;
    }

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSpouse() {
        return getFirst(spouse);
    }

    /**
     * The person's spouse.
     *
     * @param spouse Person value to set.
     */
    @Override
    public void addSpouse(Person spouse) {
        this.spouse = add(this.spouse, spouse);
    }

    @JsonLdFieldTypes({ Thing.class, Text.class, URL.class })
    private List<Object> knowsAbout;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link Thing} or {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> List<T> getKnowsAboutList() {
        return (List<T>) knowsAbout;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link Thing} or {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> T getKnowsAbout() {
        return (T) getFirst(knowsAbout);
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(Thing knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(Text knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(URL knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }

    private List<Offer> makesOffer;

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Offer> getMakesOfferList() {
        return makesOffer;
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Offer getMakesOffer() {
        return getFirst(makesOffer);
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param makesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addMakesOffer(Offer makesOffer) {
        this.makesOffer = add(this.makesOffer, makesOffer);
    }

    @JsonLdFieldTypes({ Person.class, URL.class })
    private List<Object> colleague;

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    @Override
    public <T> List<T> getColleagueList() {
        return (List<T>) colleague;
    }

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    @Override
    public <T> T getColleague() {
        return (T) getFirst(colleague);
    }

    /**
     * A colleague of the person.
     *
     * @param colleague Person value to set.
     */
    @Override
    public void addColleague(Person colleague) {
        this.colleague = add(this.colleague, colleague);
    }
    /**
     * A colleague of the person.
     *
     * @param colleague URL value to set.
     */
    @Override
    public void addColleague(URL colleague) {
        this.colleague = add(this.colleague, colleague);
    }

    private List<Text> honorificSuffix;

    /**
     * An honorific suffix following a Person's name such as M.D./PhD/MSCSW.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getHonorificSuffixList() {
        return honorificSuffix;
    }

    /**
     * An honorific suffix following a Person's name such as M.D./PhD/MSCSW.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificSuffix() {
        return getFirst(honorificSuffix);
    }

    /**
     * An honorific suffix following a Person's name such as M.D./PhD/MSCSW.
     *
     * @param honorificSuffix Text value to set.
     */
    @Override
    public void addHonorificSuffix(Text honorificSuffix) {
        this.honorificSuffix = add(this.honorificSuffix, honorificSuffix);
    }

    private List<Country> nationality;

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    @Override
    public List<Country> getNationalityList() {
        return nationality;
    }

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    @Override
    public Country getNationality() {
        return getFirst(nationality);
    }

    /**
     * Nationality of the person.
     *
     * @param nationality Country value to set.
     */
    @Override
    public void addNationality(Country nationality) {
        this.nationality = add(this.nationality, nationality);
    }

    private List<Organization> affiliation;

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     * @see <a href="https://schema.org/memberOf">https://schema.org/memberOf</a> <i>affiliation</i> is a sub property of <i>memberOf</i>
     */
    @Override
    public List<Organization> getAffiliationList() {
        return affiliation;
    }

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     * @see <a href="https://schema.org/memberOf">https://schema.org/memberOf</a> <i>affiliation</i> is a sub property of <i>memberOf</i>
     */
    @Override
    public Organization getAffiliation() {
        return getFirst(affiliation);
    }

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @param affiliation Organization value to set.
     * @see <a href="https://schema.org/memberOf">https://schema.org/memberOf</a> <i>affiliation</i> is a sub property of <i>memberOf</i>
     */
    @Override
    public void addAffiliation(Organization affiliation) {
        this.affiliation = add(this.affiliation, affiliation);
    }

    @JsonLdFieldTypes({ Organization.class, ProgramMembership.class })
    private List<Object> memberOf;

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link Organization} or {@link ProgramMembership}
     */
    @Override
    public <T> List<T> getMemberOfList() {
        return (List<T>) memberOf;
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link Organization} or {@link ProgramMembership}
     */
    @Override
    public <T> T getMemberOf() {
        return (T) getFirst(memberOf);
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf Organization value to set.
     */
    @Override
    public void addMemberOf(Organization memberOf) {
        this.memberOf = add(this.memberOf, memberOf);
    }
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf ProgramMembership value to set.
     */
    @Override
    public void addMemberOf(ProgramMembership memberOf) {
        this.memberOf = add(this.memberOf, memberOf);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> publishingPrinciples;

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> List<T> getPublishingPrinciplesList() {
        return (List<T>) publishingPrinciples;
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getPublishingPrinciples() {
        return (T) getFirst(publishingPrinciples);
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples CreativeWork value to set.
     */
    @Override
    public void addPublishingPrinciples(CreativeWork publishingPrinciples) {
        this.publishingPrinciples = add(this.publishingPrinciples, publishingPrinciples);
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples URL value to set.
     */
    @Override
    public void addPublishingPrinciples(URL publishingPrinciples) {
        this.publishingPrinciples = add(this.publishingPrinciples, publishingPrinciples);
    }

    @JsonLdFieldTypes({ QuantitativeValue.class, Distance.class })
    private List<Object> height;

    /**
     * The height of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     */
    @Override
    public <T> List<T> getHeightList() {
        return (List<T>) height;
    }

    /**
     * The height of the item.
     *
     * @return {@link QuantitativeValue} or {@link Distance}
     */
    @Override
    public <T> T getHeight() {
        return (T) getFirst(height);
    }

    /**
     * The height of the item.
     *
     * @param height QuantitativeValue value to set.
     */
    @Override
    public void addHeight(QuantitativeValue height) {
        this.height = add(this.height, height);
    }
    /**
     * The height of the item.
     *
     * @param height Distance value to set.
     */
    @Override
    public void addHeight(Distance height) {
        this.height = add(this.height, height);
    }

    private List<Person> knows;

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getKnowsList() {
        return knows;
    }

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getKnows() {
        return getFirst(knows);
    }

    /**
     * The most generic bi-directional social/work relation.
     *
     * @param knows Person value to set.
     */
    @Override
    public void addKnows(Person knows) {
        this.knows = add(this.knows, knows);
    }

    private List<Person> relatedTo;

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getRelatedToList() {
        return relatedTo;
    }

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getRelatedTo() {
        return getFirst(relatedTo);
    }

    /**
     * The most generic familial relation.
     *
     * @param relatedTo Person value to set.
     */
    @Override
    public void addRelatedTo(Person relatedTo) {
        this.relatedTo = add(this.relatedTo, relatedTo);
    }

    private List<Organization> worksFor;

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    @Override
    public List<Organization> getWorksForList() {
        return worksFor;
    }

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getWorksFor() {
        return getFirst(worksFor);
    }

    /**
     * Organizations that the person works for.
     *
     * @param worksFor Organization value to set.
     */
    @Override
    public void addWorksFor(Organization worksFor) {
        this.worksFor = add(this.worksFor, worksFor);
    }

    private List<Text> award;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardList() {
        return award;
    }

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return getFirst(award);
    }

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    @Override
    public void addAward(Text award) {
        this.award = add(this.award, award);
    }

    private List<Text> email;

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getEmailList() {
        return email;
    }

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public Text getEmail() {
        return getFirst(email);
    }

    /**
     * Email address.
     *
     * @param email Text value to set.
     */
    @Override
    public void addEmail(Text email) {
        this.email = add(this.email, email);
    }

    private List<Text> givenName;

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getGivenNameList() {
        return givenName;
    }

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getGivenName() {
        return getFirst(givenName);
    }

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @param givenName Text value to set.
     */
    @Override
    public void addGivenName(Text givenName) {
        this.givenName = add(this.givenName, givenName);
    }

    @JsonLdFieldTypes({ ContactPoint.class, Place.class })
    private List<Object> workLocation;

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link ContactPoint} or {@link Place}
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>workLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public <T> List<T> getWorkLocationList() {
        return (List<T>) workLocation;
    }

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link ContactPoint} or {@link Place}
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>workLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public <T> T getWorkLocation() {
        return (T) getFirst(workLocation);
    }

    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation ContactPoint value to set.
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>workLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public void addWorkLocation(ContactPoint workLocation) {
        this.workLocation = add(this.workLocation, workLocation);
    }
    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation Place value to set.
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>workLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public void addWorkLocation(Place workLocation) {
        this.workLocation = add(this.workLocation, workLocation);
    }

    private List<ContactPoint> contactPoints;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public List<ContactPoint> getContactPointsList() {
        return contactPoints;
    }

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoints() {
        return getFirst(contactPoints);
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoints ContactPoint value to set.
     */
    @Override
    public void addContactPoints(ContactPoint contactPoints) {
        this.contactPoints = add(this.contactPoints, contactPoints);
    }

    @JsonLdFieldTypes({ DefinedTerm.class, Text.class })
    private List<Object> jobTitle;

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link DefinedTerm} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public <T> List<T> getJobTitleList() {
        return (List<T>) jobTitle;
    }

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link DefinedTerm} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public <T> T getJobTitle() {
        return (T) getFirst(jobTitle);
    }

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void addJobTitle(DefinedTerm jobTitle) {
        this.jobTitle = add(this.jobTitle, jobTitle);
    }
    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void addJobTitle(Text jobTitle) {
        this.jobTitle = add(this.jobTitle, jobTitle);
    }

    @JsonLdFieldTypes({ Product.class, OwnershipInfo.class })
    private List<Object> owns;

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getOwnsList() {
        return (List<T>) owns;
    }

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getOwns() {
        return (T) getFirst(owns);
    }

    /**
     * Products owned by the organization or person.
     *
     * @param owns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addOwns(Product owns) {
        this.owns = add(this.owns, owns);
    }
    /**
     * Products owned by the organization or person.
     *
     * @param owns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addOwns(OwnershipInfo owns) {
        this.owns = add(this.owns, owns);
    }

    private List<Text> awards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardsList() {
        return awards;
    }

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return getFirst(awards);
    }

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    @Override
    public void addAwards(Text awards) {
        this.awards = add(this.awards, awards);
    }

    private List<Person> children;

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getChildrenList() {
        return children;
    }

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getChildren() {
        return getFirst(children);
    }

    /**
     * A child of the person.
     *
     * @param children Person value to set.
     */
    @Override
    public void addChildren(Person children) {
        this.children = add(this.children, children);
    }

    private List<Person> parent;

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getParentList() {
        return parent;
    }

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParent() {
        return getFirst(parent);
    }

    /**
     * A parent of this person.
     *
     * @param parent Person value to set.
     */
    @Override
    public void addParent(Person parent) {
        this.parent = add(this.parent, parent);
    }

    private List<Grant> funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public List<Grant> getFundingList() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public Grant getFunding() {
        return getFirst(funding);
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public void addFunding(Grant funding) {
        this.funding = add(this.funding, funding);
    }

    private List<InteractionCounter> interactionStatistic;

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public List<InteractionCounter> getInteractionStatisticList() {
        return interactionStatistic;
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public InteractionCounter getInteractionStatistic() {
        return getFirst(interactionStatistic);
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param interactionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public void addInteractionStatistic(InteractionCounter interactionStatistic) {
        this.interactionStatistic = add(this.interactionStatistic, interactionStatistic);
    }

    private List<Demand> seeks;

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Demand> getSeeksList() {
        return seeks;
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Demand getSeeks() {
        return getFirst(seeks);
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param seeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addSeeks(Demand seeks) {
        this.seeks = add(this.seeks, seeks);
    }

    private List<QuantitativeValue> weight;

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<QuantitativeValue> getWeightList() {
        return weight;
    }

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public QuantitativeValue getWeight() {
        return getFirst(weight);
    }

    /**
     * The weight of the product or person.
     *
     * @param weight QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addWeight(QuantitativeValue weight) {
        this.weight = add(this.weight, weight);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> funder;

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public <T> List<T> getFunderList() {
        return (List<T>) funder;
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public <T> T getFunder() {
        return (T) getFirst(funder);
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Organization value to set.
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public void addFunder(Organization funder) {
        this.funder = add(this.funder, funder);
    }
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Person value to set.
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public void addFunder(Person funder) {
        this.funder = add(this.funder, funder);
    }

    private List<Date> birthDate;

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    @Override
    public List<Date> getBirthDateList() {
        return birthDate;
    }

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    @Override
    public Date getBirthDate() {
        return getFirst(birthDate);
    }

    /**
     * Date of birth.
     *
     * @param birthDate Date value to set.
     */
    @Override
    public void addBirthDate(Date birthDate) {
        this.birthDate = add(this.birthDate, birthDate);
    }

    private List<Date> deathDate;

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    @Override
    public List<Date> getDeathDateList() {
        return deathDate;
    }

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    @Override
    public Date getDeathDate() {
        return getFirst(deathDate);
    }

    /**
     * Date of death.
     *
     * @param deathDate Date value to set.
     */
    @Override
    public void addDeathDate(Date deathDate) {
        this.deathDate = add(this.deathDate, deathDate);
    }

    private List<Text> additionalName;

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/alternateName">https://schema.org/alternateName</a> <i>additionalName</i> is a sub property of <i>alternateName</i>
     */
    @Override
    public List<Text> getAdditionalNameList() {
        return additionalName;
    }

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/alternateName">https://schema.org/alternateName</a> <i>additionalName</i> is a sub property of <i>alternateName</i>
     */
    @Override
    public Text getAdditionalName() {
        return getFirst(additionalName);
    }

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @param additionalName Text value to set.
     * @see <a href="https://schema.org/alternateName">https://schema.org/alternateName</a> <i>additionalName</i> is a sub property of <i>alternateName</i>
     */
    @Override
    public void addAdditionalName(Text additionalName) {
        this.additionalName = add(this.additionalName, additionalName);
    }

    private List<Text> duns;

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getDunsList() {
        return duns;
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getDuns() {
        return getFirst(duns);
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param duns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addDuns(Text duns) {
        this.duns = add(this.duns, duns);
    }

    private List<Event> performerIn;

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    @Override
    public List<Event> getPerformerInList() {
        return performerIn;
    }

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    @Override
    public Event getPerformerIn() {
        return getFirst(performerIn);
    }

    /**
     * Event that this person is a performer or participant in.
     *
     * @param performerIn Event value to set.
     */
    @Override
    public void addPerformerIn(Event performerIn) {
        this.performerIn = add(this.performerIn, performerIn);
    }

    private List<Text> vatID;

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getVatIDList() {
        return vatID;
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getVatID() {
        return getFirst(vatID);
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param vatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addVatID(Text vatID) {
        this.vatID = add(this.vatID, vatID);
    }

    @JsonLdFieldTypes({ Text.class, Language.class })
    private List<Object> knowsLanguage;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Text} or {@link Language}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> List<T> getKnowsLanguageList() {
        return (List<T>) knowsLanguage;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Text} or {@link Language}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getKnowsLanguage() {
        return (T) getFirst(knowsLanguage);
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void addKnowsLanguage(Text knowsLanguage) {
        this.knowsLanguage = add(this.knowsLanguage, knowsLanguage);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void addKnowsLanguage(Language knowsLanguage) {
        this.knowsLanguage = add(this.knowsLanguage, knowsLanguage);
    }

    private List<Text> honorificPrefix;

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getHonorificPrefixList() {
        return honorificPrefix;
    }

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificPrefix() {
        return getFirst(honorificPrefix);
    }

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @param honorificPrefix Text value to set.
     */
    @Override
    public void addHonorificPrefix(Text honorificPrefix) {
        this.honorificPrefix = add(this.honorificPrefix, honorificPrefix);
    }

    private List<Person> parents;

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getParentsList() {
        return parents;
    }

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParents() {
        return getFirst(parents);
    }

    /**
     * A parents of the person.
     *
     * @param parents Person value to set.
     */
    @Override
    public void addParents(Person parents) {
        this.parents = add(this.parents, parents);
    }

    private List<Text> familyName;

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getFamilyNameList() {
        return familyName;
    }

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFamilyName() {
        return getFirst(familyName);
    }

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @param familyName Text value to set.
     */
    @Override
    public void addFamilyName(Text familyName) {
        this.familyName = add(this.familyName, familyName);
    }

    private List<Person> siblings;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getSiblingsList() {
        return siblings;
    }

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSiblings() {
        return getFirst(siblings);
    }

    /**
     * A sibling of the person.
     *
     * @param siblings Person value to set.
     */
    @Override
    public void addSiblings(Person siblings) {
        this.siblings = add(this.siblings, siblings);
    }

    private List<EducationalOccupationalCredential> hasCredential;

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public List<EducationalOccupationalCredential> getHasCredentialList() {
        return hasCredential;
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public EducationalOccupationalCredential getHasCredential() {
        return getFirst(hasCredential);
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param hasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void addHasCredential(EducationalOccupationalCredential hasCredential) {
        this.hasCredential = add(this.hasCredential, hasCredential);
    }

    @JsonLdFieldTypes({ Text.class, PostalAddress.class })
    private List<Object> address;

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> List<T> getAddressList() {
        return (List<T>) address;
    }

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> T getAddress() {
        return (T) getFirst(address);
    }

    /**
     * Physical address of the item.
     *
     * @param address Text value to set.
     */
    @Override
    public void addAddress(Text address) {
        this.address = add(this.address, address);
    }
    /**
     * Physical address of the item.
     *
     * @param address PostalAddress value to set.
     */
    @Override
    public void addAddress(PostalAddress address) {
        this.address = add(this.address, address);
    }

    @JsonLdFieldTypes({ Brand.class, Organization.class })
    private List<Object> brand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> List<T> getBrandList() {
        return (List<T>) brand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> T getBrand() {
        return (T) getFirst(brand);
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    @Override
    public void addBrand(Brand brand) {
        this.brand = add(this.brand, brand);
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    @Override
    public void addBrand(Organization brand) {
        this.brand = add(this.brand, brand);
    }

    private List<Occupation> hasOccupation;

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public List<Occupation> getHasOccupationList() {
        return hasOccupation;
    }

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public Occupation getHasOccupation() {
        return getFirst(hasOccupation);
    }

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @param hasOccupation Occupation value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public void addHasOccupation(Occupation hasOccupation) {
        this.hasOccupation = add(this.hasOccupation, hasOccupation);
    }

    @JsonLdFieldTypes({ MonetaryAmount.class, PriceSpecification.class })
    private List<Object> netWorth;

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    @Override
    public <T> List<T> getNetWorthList() {
        return (List<T>) netWorth;
    }

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    @Override
    public <T> T getNetWorth() {
        return (T) getFirst(netWorth);
    }

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth MonetaryAmount value to set.
     */
    @Override
    public void addNetWorth(MonetaryAmount netWorth) {
        this.netWorth = add(this.netWorth, netWorth);
    }
    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth PriceSpecification value to set.
     */
    @Override
    public void addNetWorth(PriceSpecification netWorth) {
        this.netWorth = add(this.netWorth, netWorth);
    }

    private List<ContactPoint> contactPoint;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public List<ContactPoint> getContactPointList() {
        return contactPoint;
    }

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoint() {
        return getFirst(contactPoint);
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoint ContactPoint value to set.
     */
    @Override
    public void addContactPoint(ContactPoint contactPoint) {
        this.contactPoint = add(this.contactPoint, contactPoint);
    }

    @JsonLdFieldTypes({ ContactPoint.class, Place.class })
    private List<Object> homeLocation;

    /**
     * A contact location for a person's residence.
     *
     * @return {@link ContactPoint} or {@link Place}
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>homeLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public <T> List<T> getHomeLocationList() {
        return (List<T>) homeLocation;
    }

    /**
     * A contact location for a person's residence.
     *
     * @return {@link ContactPoint} or {@link Place}
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>homeLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public <T> T getHomeLocation() {
        return (T) getFirst(homeLocation);
    }

    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation ContactPoint value to set.
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>homeLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public void addHomeLocation(ContactPoint homeLocation) {
        this.homeLocation = add(this.homeLocation, homeLocation);
    }
    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation Place value to set.
     * @see <a href="https://schema.org/location">https://schema.org/location</a> <i>homeLocation</i> is a sub property of <i>location</i>
     */
    @Override
    public void addHomeLocation(Place homeLocation) {
        this.homeLocation = add(this.homeLocation, homeLocation);
    }

    @JsonLdFieldTypes({ GenderType.class, Text.class })
    private List<Object> gender;

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public <T> List<T> getGenderList() {
        return (List<T>) gender;
    }

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public <T> T getGender() {
        return (T) getFirst(gender);
    }

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender GenderType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void addGender(GenderType gender) {
        this.gender = add(this.gender, gender);
    }
    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void addGender(Text gender) {
        this.gender = add(this.gender, gender);
    }

    private List<OfferCatalog> hasOfferCatalog;

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public List<OfferCatalog> getHasOfferCatalogList() {
        return hasOfferCatalog;
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public OfferCatalog getHasOfferCatalog() {
        return getFirst(hasOfferCatalog);
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param hasOfferCatalog OfferCatalog value to set.
     */
    @Override
    public void addHasOfferCatalog(OfferCatalog hasOfferCatalog) {
        this.hasOfferCatalog = add(this.hasOfferCatalog, hasOfferCatalog);
    }

    private List<Person> follows;

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getFollowsList() {
        return follows;
    }

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFollows() {
        return getFirst(follows);
    }

    /**
     * The most generic uni-directional social relation.
     *
     * @param follows Person value to set.
     */
    @Override
    public void addFollows(Person follows) {
        this.follows = add(this.follows, follows);
    }

    private List<Place> birthPlace;

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    @Override
    public List<Place> getBirthPlaceList() {
        return birthPlace;
    }

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    @Override
    public Place getBirthPlace() {
        return getFirst(birthPlace);
    }

    /**
     * The place where the person was born.
     *
     * @param birthPlace Place value to set.
     */
    @Override
    public void addBirthPlace(Place birthPlace) {
        this.birthPlace = add(this.birthPlace, birthPlace);
    }

    private List<Text> faxNumber;

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getFaxNumberList() {
        return faxNumber;
    }

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFaxNumber() {
        return getFirst(faxNumber);
    }

    /**
     * The fax number.
     *
     * @param faxNumber Text value to set.
     */
    @Override
    public void addFaxNumber(Text faxNumber) {
        this.faxNumber = add(this.faxNumber, faxNumber);
    }

    private List<Text> telephone;

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getTelephoneList() {
        return telephone;
    }

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTelephone() {
        return getFirst(telephone);
    }

    /**
     * The telephone number.
     *
     * @param telephone Text value to set.
     */
    @Override
    public void addTelephone(Text telephone) {
        this.telephone = add(this.telephone, telephone);
    }

    private List<Text> taxID;

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getTaxIDList() {
        return taxID;
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getTaxID() {
        return getFirst(taxID);
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param taxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addTaxID(Text taxID) {
        this.taxID = add(this.taxID, taxID);
    }

    private List<Text> callSign;

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>callSign</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getCallSignList() {
        return callSign;
    }

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>callSign</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getCallSign() {
        return getFirst(callSign);
    }

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @param callSign Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>callSign</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addCallSign(Text callSign) {
        this.callSign = add(this.callSign, callSign);
    }

    private List<Text> naics;

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getNaicsList() {
        return naics;
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getNaics() {
        return getFirst(naics);
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param naics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addNaics(Text naics) {
        this.naics = add(this.naics, naics);
    }

    private List<Place> deathPlace;

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    @Override
    public List<Place> getDeathPlaceList() {
        return deathPlace;
    }

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    @Override
    public Place getDeathPlace() {
        return getFirst(deathPlace);
    }

    /**
     * The place where the person died.
     *
     * @param deathPlace Place value to set.
     */
    @Override
    public void addDeathPlace(Place deathPlace) {
        this.deathPlace = add(this.deathPlace, deathPlace);
    }

    @JsonLdFieldTypes({ Organization.class, EducationalOrganization.class })
    private List<Object> alumniOf;

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link Organization} or {@link EducationalOrganization}
     */
    @Override
    public <T> List<T> getAlumniOfList() {
        return (List<T>) alumniOf;
    }

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link Organization} or {@link EducationalOrganization}
     */
    @Override
    public <T> T getAlumniOf() {
        return (T) getFirst(alumniOf);
    }

    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf Organization value to set.
     */
    @Override
    public void addAlumniOf(Organization alumniOf) {
        this.alumniOf = add(this.alumniOf, alumniOf);
    }
    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf EducationalOrganization value to set.
     */
    @Override
    public void addAlumniOf(EducationalOrganization alumniOf) {
        this.alumniOf = add(this.alumniOf, alumniOf);
    }

    private List<Person> colleagues;

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getColleaguesList() {
        return colleagues;
    }

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getColleagues() {
        return getFirst(colleagues);
    }

    /**
     * A colleague of the person.
     *
     * @param colleagues Person value to set.
     */
    @Override
    public void addColleagues(Person colleagues) {
        this.colleagues = add(this.colleagues, colleagues);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> sponsor;

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> List<T> getSponsorList() {
        return (List<T>) sponsor;
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSponsor() {
        return (T) getFirst(sponsor);
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Organization value to set.
     */
    @Override
    public void addSponsor(Organization sponsor) {
        this.sponsor = add(this.sponsor, sponsor);
    }
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Person value to set.
     */
    @Override
    public void addSponsor(Person sponsor) {
        this.sponsor = add(this.sponsor, sponsor);
    }

    private List<Action> potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public List<Action> getPotentialActionList() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return getFirst(potentialAction);
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void addPotentialAction(Action potentialAction) {
        this.potentialAction = add(this.potentialAction, potentialAction);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> List<T> getMainEntityOfPageList() {
        return (List<T>) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) getFirst(mainEntityOfPage);
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void addMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void addMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }

    @JsonLdFieldTypes({ Event.class, CreativeWork.class })
    private List<Object> subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> List<T> getSubjectOfList() {
        return (List<T>) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) getFirst(subjectOf);
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(Event subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }

    private List<URL> url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getUrlList() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return getFirst(url);
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void addUrl(URL url) {
        this.url = add(this.url, url);
    }

    private List<Text> alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAlternateNameList() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return getFirst(alternateName);
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void addAlternateName(Text alternateName) {
        this.alternateName = add(this.alternateName, alternateName);
    }

    private List<URL> sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getSameAsList() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return getFirst(sameAs);
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void addSameAs(URL sameAs) {
        this.sameAs = add(this.sameAs, sameAs);
    }

    private List<Text> description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getDescriptionList() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return getFirst(description);
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void addDescription(Text description) {
        this.description = add(this.description, description);
    }

    private List<Text> disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public List<Text> getDisambiguatingDescriptionList() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public Text getDisambiguatingDescription() {
        return getFirst(disambiguatingDescription);
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public void addDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = add(this.disambiguatingDescription, disambiguatingDescription);
    }

    @JsonLdFieldTypes({ PropertyValue.class, URL.class, Text.class })
    private List<Object> identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> List<T> getIdentifierList() {
        return (List<T>) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) getFirst(identifier);
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void addIdentifier(PropertyValue identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void addIdentifier(URL identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void addIdentifier(Text identifier) {
        this.identifier = add(this.identifier, identifier);
    }

    @JsonLdFieldTypes({ URL.class, ImageObject.class })
    private List<Object> image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> List<T> getImageList() {
        return (List<T>) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) getFirst(image);
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void addImage(URL image) {
        this.image = add(this.image, image);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void addImage(ImageObject image) {
        this.image = add(this.image, image);
    }

    private List<Text> name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public List<Text> getNameList() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public Text getName() {
        return getFirst(name);
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public void addName(Text name) {
        this.name = add(this.name, name);
    }

    private List<URL> additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public List<URL> getAdditionalTypeList() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public URL getAdditionalType() {
        return getFirst(additionalType);
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public void addAdditionalType(URL additionalType) {
        this.additionalType = add(this.additionalType, additionalType);
    }
}
