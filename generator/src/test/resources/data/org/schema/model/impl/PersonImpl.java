/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.Person;
import org.schema.model.datatype.Text;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.datatype.URL;
import org.schema.model.Thing;
import org.schema.model.Event;
import org.schema.model.MonetaryAmount;
import org.schema.model.PriceSpecification;
import org.schema.model.Place;
import org.schema.model.ContactPoint;
import org.schema.model.Grant;
import org.schema.model.Distance;
import org.schema.model.QuantitativeValue;
import org.schema.model.Occupation;
import org.schema.model.GenderType;
import org.schema.model.DefinedTerm;
import org.schema.model.datatype.Date;
import org.schema.model.Organization;
import org.schema.model.Offer;
import org.schema.model.InteractionCounter;
import org.schema.model.PostalAddress;
import org.schema.model.ProgramMembership;
import org.schema.model.CreativeWork;
import org.schema.model.Brand;
import org.schema.model.EducationalOrganization;
import org.schema.model.Language;
import org.schema.model.Demand;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.OfferCatalog;
import org.schema.model.Country;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.PropertyValue;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;

/**
 * A person (alive, dead, undead, or fictional).
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews</a>
 * @see <a href="https://schema.org/Person">https://schema.org/Person</a>
 */
@JsonLdTypeName("Person")
public class PersonImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements Person {

    private Person fSpouse;

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSpouse() {
        return fSpouse;
    }

    /**
     * The person's spouse.
     *
     * @param fSpouse Person value to set.
     */
    @Override
    public void setSpouse(Person fSpouse) {
        this.fSpouse = fSpouse;
    }

    private Text fAdditionalName;

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAdditionalName() {
        return fAdditionalName;
    }

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @param fAdditionalName Text value to set.
     */
    @Override
    public void setAdditionalName(Text fAdditionalName) {
        this.fAdditionalName = fAdditionalName;
    }
    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @param fAdditionalName java.lang.String value to set.
     */
    @Override
    public void setAdditionalName(java.lang.String fAdditionalName) {
        this.fAdditionalName = Text.of(fAdditionalName);
    }

    private EducationalOccupationalCredential fHasCredential;

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public EducationalOccupationalCredential getHasCredential() {
        return fHasCredential;
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param fHasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void setHasCredential(EducationalOccupationalCredential fHasCredential) {
        this.fHasCredential = fHasCredential;
    }

    private Text fTelephone;

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTelephone() {
        return fTelephone;
    }

    /**
     * The telephone number.
     *
     * @param fTelephone Text value to set.
     */
    @Override
    public void setTelephone(Text fTelephone) {
        this.fTelephone = fTelephone;
    }
    /**
     * The telephone number.
     *
     * @param fTelephone java.lang.String value to set.
     */
    @Override
    public void setTelephone(java.lang.String fTelephone) {
        this.fTelephone = Text.of(fTelephone);
    }

    private Text fHonorificPrefix;

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificPrefix() {
        return fHonorificPrefix;
    }

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @param fHonorificPrefix Text value to set.
     */
    @Override
    public void setHonorificPrefix(Text fHonorificPrefix) {
        this.fHonorificPrefix = fHonorificPrefix;
    }
    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @param fHonorificPrefix java.lang.String value to set.
     */
    @Override
    public void setHonorificPrefix(java.lang.String fHonorificPrefix) {
        this.fHonorificPrefix = Text.of(fHonorificPrefix);
    }

    private Person fParents;

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParents() {
        return fParents;
    }

    /**
     * A parents of the person.
     *
     * @param fParents Person value to set.
     */
    @Override
    public void setParents(Person fParents) {
        this.fParents = fParents;
    }

    private Text fFamilyName;

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFamilyName() {
        return fFamilyName;
    }

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @param fFamilyName Text value to set.
     */
    @Override
    public void setFamilyName(Text fFamilyName) {
        this.fFamilyName = fFamilyName;
    }
    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @param fFamilyName java.lang.String value to set.
     */
    @Override
    public void setFamilyName(java.lang.String fFamilyName) {
        this.fFamilyName = Text.of(fFamilyName);
    }

    private Text fGivenName;

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getGivenName() {
        return fGivenName;
    }

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @param fGivenName Text value to set.
     */
    @Override
    public void setGivenName(Text fGivenName) {
        this.fGivenName = fGivenName;
    }
    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @param fGivenName java.lang.String value to set.
     */
    @Override
    public void setGivenName(java.lang.String fGivenName) {
        this.fGivenName = Text.of(fGivenName);
    }

    private Object fKnowsAbout;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> T getKnowsAbout() {
        return (T) fKnowsAbout;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param fKnowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(URL fKnowsAbout) {
        this.fKnowsAbout = fKnowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param fKnowsAbout java.net.URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(java.net.URL fKnowsAbout) {
        this.fKnowsAbout = URL.of(fKnowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param fKnowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Text fKnowsAbout) {
        this.fKnowsAbout = fKnowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param fKnowsAbout java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(java.lang.String fKnowsAbout) {
        this.fKnowsAbout = Text.of(fKnowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param fKnowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Thing fKnowsAbout) {
        this.fKnowsAbout = fKnowsAbout;
    }

    private Event fPerformerIn;

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    @Override
    public Event getPerformerIn() {
        return fPerformerIn;
    }

    /**
     * Event that this person is a performer or participant in.
     *
     * @param fPerformerIn Event value to set.
     */
    @Override
    public void setPerformerIn(Event fPerformerIn) {
        this.fPerformerIn = fPerformerIn;
    }

    private Object fNetWorth;

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    @Override
    public <T> T getNetWorth() {
        return (T) fNetWorth;
    }

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param fNetWorth MonetaryAmount value to set.
     */
    @Override
    public void setNetWorth(MonetaryAmount fNetWorth) {
        this.fNetWorth = fNetWorth;
    }
    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param fNetWorth PriceSpecification value to set.
     */
    @Override
    public void setNetWorth(PriceSpecification fNetWorth) {
        this.fNetWorth = fNetWorth;
    }

    private Text fAward;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return fAward;
    }

    /**
     * An award won by or for this item.
     *
     * @param fAward Text value to set.
     */
    @Override
    public void setAward(Text fAward) {
        this.fAward = fAward;
    }
    /**
     * An award won by or for this item.
     *
     * @param fAward java.lang.String value to set.
     */
    @Override
    public void setAward(java.lang.String fAward) {
        this.fAward = Text.of(fAward);
    }

    private Object fWorkLocation;

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    @Override
    public <T> T getWorkLocation() {
        return (T) fWorkLocation;
    }

    /**
     * A contact location for a person's place of work.
     *
     * @param fWorkLocation Place value to set.
     */
    @Override
    public void setWorkLocation(Place fWorkLocation) {
        this.fWorkLocation = fWorkLocation;
    }
    /**
     * A contact location for a person's place of work.
     *
     * @param fWorkLocation ContactPoint value to set.
     */
    @Override
    public void setWorkLocation(ContactPoint fWorkLocation) {
        this.fWorkLocation = fWorkLocation;
    }

    private Text fHonorificSuffix;

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificSuffix() {
        return fHonorificSuffix;
    }

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @param fHonorificSuffix Text value to set.
     */
    @Override
    public void setHonorificSuffix(Text fHonorificSuffix) {
        this.fHonorificSuffix = fHonorificSuffix;
    }
    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @param fHonorificSuffix java.lang.String value to set.
     */
    @Override
    public void setHonorificSuffix(java.lang.String fHonorificSuffix) {
        this.fHonorificSuffix = Text.of(fHonorificSuffix);
    }

    private Place fDeathPlace;

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    @Override
    public Place getDeathPlace() {
        return fDeathPlace;
    }

    /**
     * The place where the person died.
     *
     * @param fDeathPlace Place value to set.
     */
    @Override
    public void setDeathPlace(Place fDeathPlace) {
        this.fDeathPlace = fDeathPlace;
    }

    private Object fHomeLocation;

    /**
     * A contact location for a person's residence.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    @Override
    public <T> T getHomeLocation() {
        return (T) fHomeLocation;
    }

    /**
     * A contact location for a person's residence.
     *
     * @param fHomeLocation Place value to set.
     */
    @Override
    public void setHomeLocation(Place fHomeLocation) {
        this.fHomeLocation = fHomeLocation;
    }
    /**
     * A contact location for a person's residence.
     *
     * @param fHomeLocation ContactPoint value to set.
     */
    @Override
    public void setHomeLocation(ContactPoint fHomeLocation) {
        this.fHomeLocation = fHomeLocation;
    }

    private Grant fFunding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public Grant getFunding() {
        return fFunding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param fFunding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setFunding(Grant fFunding) {
        this.fFunding = fFunding;
    }

    private Text fVatID;

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getVatID() {
        return fVatID;
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param fVatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setVatID(Text fVatID) {
        this.fVatID = fVatID;
    }
    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param fVatID java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setVatID(java.lang.String fVatID) {
        this.fVatID = Text.of(fVatID);
    }

    private Object fHeight;

    /**
     * The height of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    @Override
    public <T> T getHeight() {
        return (T) fHeight;
    }

    /**
     * The height of the item.
     *
     * @param fHeight Distance value to set.
     */
    @Override
    public void setHeight(Distance fHeight) {
        this.fHeight = fHeight;
    }
    /**
     * The height of the item.
     *
     * @param fHeight QuantitativeValue value to set.
     */
    @Override
    public void setHeight(QuantitativeValue fHeight) {
        this.fHeight = fHeight;
    }

    private Text fGlobalLocationNumber;

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getGlobalLocationNumber() {
        return fGlobalLocationNumber;
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param fGlobalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setGlobalLocationNumber(Text fGlobalLocationNumber) {
        this.fGlobalLocationNumber = fGlobalLocationNumber;
    }
    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param fGlobalLocationNumber java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setGlobalLocationNumber(java.lang.String fGlobalLocationNumber) {
        this.fGlobalLocationNumber = Text.of(fGlobalLocationNumber);
    }

    private ContactPoint fContactPoints;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoints() {
        return fContactPoints;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param fContactPoints ContactPoint value to set.
     */
    @Override
    public void setContactPoints(ContactPoint fContactPoints) {
        this.fContactPoints = fContactPoints;
    }

    private Occupation fHasOccupation;

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public Occupation getHasOccupation() {
        return fHasOccupation;
    }

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @param fHasOccupation Occupation value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public void setHasOccupation(Occupation fHasOccupation) {
        this.fHasOccupation = fHasOccupation;
    }

    private Object fGender;

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public <T> T getGender() {
        return (T) fGender;
    }

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param fGender GenderType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void setGender(GenderType fGender) {
        this.fGender = fGender;
    }
    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param fGender Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void setGender(Text fGender) {
        this.fGender = fGender;
    }
    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param fGender java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void setGender(java.lang.String fGender) {
        this.fGender = Text.of(fGender);
    }

    private Person fParent;

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParent() {
        return fParent;
    }

    /**
     * A parent of this person.
     *
     * @param fParent Person value to set.
     */
    @Override
    public void setParent(Person fParent) {
        this.fParent = fParent;
    }

    private Text fAwards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return fAwards;
    }

    /**
     * Awards won by or for this item.
     *
     * @param fAwards Text value to set.
     */
    @Override
    public void setAwards(Text fAwards) {
        this.fAwards = fAwards;
    }
    /**
     * Awards won by or for this item.
     *
     * @param fAwards java.lang.String value to set.
     */
    @Override
    public void setAwards(java.lang.String fAwards) {
        this.fAwards = Text.of(fAwards);
    }

    private Person fSibling;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSibling() {
        return fSibling;
    }

    /**
     * A sibling of the person.
     *
     * @param fSibling Person value to set.
     */
    @Override
    public void setSibling(Person fSibling) {
        this.fSibling = fSibling;
    }

    private Object fJobTitle;

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link Text} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public <T> T getJobTitle() {
        return (T) fJobTitle;
    }

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param fJobTitle Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void setJobTitle(Text fJobTitle) {
        this.fJobTitle = fJobTitle;
    }
    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param fJobTitle java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void setJobTitle(java.lang.String fJobTitle) {
        this.fJobTitle = Text.of(fJobTitle);
    }
    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param fJobTitle DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void setJobTitle(DefinedTerm fJobTitle) {
        this.fJobTitle = fJobTitle;
    }

    private Date fBirthDate;

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    @Override
    public Date getBirthDate() {
        return fBirthDate;
    }

    /**
     * Date of birth.
     *
     * @param fBirthDate Date value to set.
     */
    @Override
    public void setBirthDate(Date fBirthDate) {
        this.fBirthDate = fBirthDate;
    }
    /**
     * Date of birth.
     *
     * @param fBirthDate java.time.LocalDate value to set.
     */
    @Override
    public void setBirthDate(java.time.LocalDate fBirthDate) {
        this.fBirthDate = Date.of(fBirthDate);
    }

    private Object fFunder;

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getFunder() {
        return (T) fFunder;
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param fFunder Organization value to set.
     */
    @Override
    public void setFunder(Organization fFunder) {
        this.fFunder = fFunder;
    }
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param fFunder Person value to set.
     */
    @Override
    public void setFunder(Person fFunder) {
        this.fFunder = fFunder;
    }

    private Offer fMakesOffer;

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Offer getMakesOffer() {
        return fMakesOffer;
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param fMakesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setMakesOffer(Offer fMakesOffer) {
        this.fMakesOffer = fMakesOffer;
    }

    private Person fChildren;

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getChildren() {
        return fChildren;
    }

    /**
     * A child of the person.
     *
     * @param fChildren Person value to set.
     */
    @Override
    public void setChildren(Person fChildren) {
        this.fChildren = fChildren;
    }

    private Organization fWorksFor;

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getWorksFor() {
        return fWorksFor;
    }

    /**
     * Organizations that the person works for.
     *
     * @param fWorksFor Organization value to set.
     */
    @Override
    public void setWorksFor(Organization fWorksFor) {
        this.fWorksFor = fWorksFor;
    }

    private Person fKnows;

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getKnows() {
        return fKnows;
    }

    /**
     * The most generic bi-directional social/work relation.
     *
     * @param fKnows Person value to set.
     */
    @Override
    public void setKnows(Person fKnows) {
        this.fKnows = fKnows;
    }

    private InteractionCounter fInteractionStatistic;

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public InteractionCounter getInteractionStatistic() {
        return fInteractionStatistic;
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param fInteractionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public void setInteractionStatistic(InteractionCounter fInteractionStatistic) {
        this.fInteractionStatistic = fInteractionStatistic;
    }

    private Object fAddress;

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> T getAddress() {
        return (T) fAddress;
    }

    /**
     * Physical address of the item.
     *
     * @param fAddress Text value to set.
     */
    @Override
    public void setAddress(Text fAddress) {
        this.fAddress = fAddress;
    }
    /**
     * Physical address of the item.
     *
     * @param fAddress java.lang.String value to set.
     */
    @Override
    public void setAddress(java.lang.String fAddress) {
        this.fAddress = Text.of(fAddress);
    }
    /**
     * Physical address of the item.
     *
     * @param fAddress PostalAddress value to set.
     */
    @Override
    public void setAddress(PostalAddress fAddress) {
        this.fAddress = fAddress;
    }

    private Object fMemberOf;

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    @Override
    public <T> T getMemberOf() {
        return (T) fMemberOf;
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param fMemberOf ProgramMembership value to set.
     */
    @Override
    public void setMemberOf(ProgramMembership fMemberOf) {
        this.fMemberOf = fMemberOf;
    }
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param fMemberOf Organization value to set.
     */
    @Override
    public void setMemberOf(Organization fMemberOf) {
        this.fMemberOf = fMemberOf;
    }

    private Object fPublishingPrinciples;

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getPublishingPrinciples() {
        return (T) fPublishingPrinciples;
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param fPublishingPrinciples URL value to set.
     */
    @Override
    public void setPublishingPrinciples(URL fPublishingPrinciples) {
        this.fPublishingPrinciples = fPublishingPrinciples;
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param fPublishingPrinciples java.net.URL value to set.
     */
    @Override
    public void setPublishingPrinciples(java.net.URL fPublishingPrinciples) {
        this.fPublishingPrinciples = URL.of(fPublishingPrinciples);
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param fPublishingPrinciples CreativeWork value to set.
     */
    @Override
    public void setPublishingPrinciples(CreativeWork fPublishingPrinciples) {
        this.fPublishingPrinciples = fPublishingPrinciples;
    }

    private Person fColleagues;

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getColleagues() {
        return fColleagues;
    }

    /**
     * A colleague of the person.
     *
     * @param fColleagues Person value to set.
     */
    @Override
    public void setColleagues(Person fColleagues) {
        this.fColleagues = fColleagues;
    }

    private Date fDeathDate;

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    @Override
    public Date getDeathDate() {
        return fDeathDate;
    }

    /**
     * Date of death.
     *
     * @param fDeathDate Date value to set.
     */
    @Override
    public void setDeathDate(Date fDeathDate) {
        this.fDeathDate = fDeathDate;
    }
    /**
     * Date of death.
     *
     * @param fDeathDate java.time.LocalDate value to set.
     */
    @Override
    public void setDeathDate(java.time.LocalDate fDeathDate) {
        this.fDeathDate = Date.of(fDeathDate);
    }

    private Text fEmail;

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public Text getEmail() {
        return fEmail;
    }

    /**
     * Email address.
     *
     * @param fEmail Text value to set.
     */
    @Override
    public void setEmail(Text fEmail) {
        this.fEmail = fEmail;
    }
    /**
     * Email address.
     *
     * @param fEmail java.lang.String value to set.
     */
    @Override
    public void setEmail(java.lang.String fEmail) {
        this.fEmail = Text.of(fEmail);
    }

    private Organization fAffiliation;

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getAffiliation() {
        return fAffiliation;
    }

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @param fAffiliation Organization value to set.
     */
    @Override
    public void setAffiliation(Organization fAffiliation) {
        this.fAffiliation = fAffiliation;
    }

    private Person fSiblings;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSiblings() {
        return fSiblings;
    }

    /**
     * A sibling of the person.
     *
     * @param fSiblings Person value to set.
     */
    @Override
    public void setSiblings(Person fSiblings) {
        this.fSiblings = fSiblings;
    }

    private Place fBirthPlace;

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    @Override
    public Place getBirthPlace() {
        return fBirthPlace;
    }

    /**
     * The place where the person was born.
     *
     * @param fBirthPlace Place value to set.
     */
    @Override
    public void setBirthPlace(Place fBirthPlace) {
        this.fBirthPlace = fBirthPlace;
    }

    private Object fBrand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    @Override
    public <T> T getBrand() {
        return (T) fBrand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param fBrand Organization value to set.
     */
    @Override
    public void setBrand(Organization fBrand) {
        this.fBrand = fBrand;
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param fBrand Brand value to set.
     */
    @Override
    public void setBrand(Brand fBrand) {
        this.fBrand = fBrand;
    }

    private Object fSponsor;

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSponsor() {
        return (T) fSponsor;
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param fSponsor Organization value to set.
     */
    @Override
    public void setSponsor(Organization fSponsor) {
        this.fSponsor = fSponsor;
    }
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param fSponsor Person value to set.
     */
    @Override
    public void setSponsor(Person fSponsor) {
        this.fSponsor = fSponsor;
    }

    private Text fNaics;

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getNaics() {
        return fNaics;
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param fNaics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setNaics(Text fNaics) {
        this.fNaics = fNaics;
    }
    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param fNaics java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setNaics(java.lang.String fNaics) {
        this.fNaics = Text.of(fNaics);
    }

    private ContactPoint fContactPoint;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoint() {
        return fContactPoint;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param fContactPoint ContactPoint value to set.
     */
    @Override
    public void setContactPoint(ContactPoint fContactPoint) {
        this.fContactPoint = fContactPoint;
    }

    private Text fCallSign;

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    @Override
    public Text getCallSign() {
        return fCallSign;
    }

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @param fCallSign Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    @Override
    public void setCallSign(Text fCallSign) {
        this.fCallSign = fCallSign;
    }
    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @param fCallSign java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    @Override
    public void setCallSign(java.lang.String fCallSign) {
        this.fCallSign = Text.of(fCallSign);
    }

    private Text fIsicV4;

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getIsicV4() {
        return fIsicV4;
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param fIsicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setIsicV4(Text fIsicV4) {
        this.fIsicV4 = fIsicV4;
    }
    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param fIsicV4 java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setIsicV4(java.lang.String fIsicV4) {
        this.fIsicV4 = Text.of(fIsicV4);
    }

    private Place fHasPOS;

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Place getHasPOS() {
        return fHasPOS;
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param fHasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setHasPOS(Place fHasPOS) {
        this.fHasPOS = fHasPOS;
    }

    private Object fAlumniOf;

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link EducationalOrganization} or {@link Organization}
     */
    @Override
    public <T> T getAlumniOf() {
        return (T) fAlumniOf;
    }

    /**
     * An organization that the person is an alumni of.
     *
     * @param fAlumniOf EducationalOrganization value to set.
     */
    @Override
    public void setAlumniOf(EducationalOrganization fAlumniOf) {
        this.fAlumniOf = fAlumniOf;
    }
    /**
     * An organization that the person is an alumni of.
     *
     * @param fAlumniOf Organization value to set.
     */
    @Override
    public void setAlumniOf(Organization fAlumniOf) {
        this.fAlumniOf = fAlumniOf;
    }

    private Text fDuns;

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getDuns() {
        return fDuns;
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param fDuns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setDuns(Text fDuns) {
        this.fDuns = fDuns;
    }
    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param fDuns java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setDuns(java.lang.String fDuns) {
        this.fDuns = Text.of(fDuns);
    }

    private QuantitativeValue fWeight;

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public QuantitativeValue getWeight() {
        return fWeight;
    }

    /**
     * The weight of the product or person.
     *
     * @param fWeight QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setWeight(QuantitativeValue fWeight) {
        this.fWeight = fWeight;
    }

    private Object fKnowsLanguage;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getKnowsLanguage() {
        return (T) fKnowsLanguage;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param fKnowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Language fKnowsLanguage) {
        this.fKnowsLanguage = fKnowsLanguage;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param fKnowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Text fKnowsLanguage) {
        this.fKnowsLanguage = fKnowsLanguage;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param fKnowsLanguage java.lang.String value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(java.lang.String fKnowsLanguage) {
        this.fKnowsLanguage = Text.of(fKnowsLanguage);
    }

    private Person fRelatedTo;

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getRelatedTo() {
        return fRelatedTo;
    }

    /**
     * The most generic familial relation.
     *
     * @param fRelatedTo Person value to set.
     */
    @Override
    public void setRelatedTo(Person fRelatedTo) {
        this.fRelatedTo = fRelatedTo;
    }

    private Object fColleague;

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    @Override
    public <T> T getColleague() {
        return (T) fColleague;
    }

    /**
     * A colleague of the person.
     *
     * @param fColleague Person value to set.
     */
    @Override
    public void setColleague(Person fColleague) {
        this.fColleague = fColleague;
    }
    /**
     * A colleague of the person.
     *
     * @param fColleague URL value to set.
     */
    @Override
    public void setColleague(URL fColleague) {
        this.fColleague = fColleague;
    }
    /**
     * A colleague of the person.
     *
     * @param fColleague java.net.URL value to set.
     */
    @Override
    public void setColleague(java.net.URL fColleague) {
        this.fColleague = URL.of(fColleague);
    }

    private Demand fSeeks;

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Demand getSeeks() {
        return fSeeks;
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param fSeeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setSeeks(Demand fSeeks) {
        this.fSeeks = fSeeks;
    }

    private Text fTaxID;

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getTaxID() {
        return fTaxID;
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param fTaxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setTaxID(Text fTaxID) {
        this.fTaxID = fTaxID;
    }
    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param fTaxID java.lang.String value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setTaxID(java.lang.String fTaxID) {
        this.fTaxID = Text.of(fTaxID);
    }

    private Object fOwns;

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getOwns() {
        return (T) fOwns;
    }

    /**
     * Products owned by the organization or person.
     *
     * @param fOwns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(Product fOwns) {
        this.fOwns = fOwns;
    }
    /**
     * Products owned by the organization or person.
     *
     * @param fOwns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(OwnershipInfo fOwns) {
        this.fOwns = fOwns;
    }

    private OfferCatalog fHasOfferCatalog;

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public OfferCatalog getHasOfferCatalog() {
        return fHasOfferCatalog;
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param fHasOfferCatalog OfferCatalog value to set.
     */
    @Override
    public void setHasOfferCatalog(OfferCatalog fHasOfferCatalog) {
        this.fHasOfferCatalog = fHasOfferCatalog;
    }

    private Person fFollows;

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFollows() {
        return fFollows;
    }

    /**
     * The most generic uni-directional social relation.
     *
     * @param fFollows Person value to set.
     */
    @Override
    public void setFollows(Person fFollows) {
        this.fFollows = fFollows;
    }

    private Country fNationality;

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    @Override
    public Country getNationality() {
        return fNationality;
    }

    /**
     * Nationality of the person.
     *
     * @param fNationality Country value to set.
     */
    @Override
    public void setNationality(Country fNationality) {
        this.fNationality = fNationality;
    }

    private Text fFaxNumber;

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFaxNumber() {
        return fFaxNumber;
    }

    /**
     * The fax number.
     *
     * @param fFaxNumber Text value to set.
     */
    @Override
    public void setFaxNumber(Text fFaxNumber) {
        this.fFaxNumber = fFaxNumber;
    }
    /**
     * The fax number.
     *
     * @param fFaxNumber java.lang.String value to set.
     */
    @Override
    public void setFaxNumber(java.lang.String fFaxNumber) {
        this.fFaxNumber = Text.of(fFaxNumber);
    }

    private Object fMainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) fMainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork fMainEntityOfPage) {
        this.fMainEntityOfPage = fMainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL fMainEntityOfPage) {
        this.fMainEntityOfPage = fMainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage java.net.URL value to set.
     */
    @Override
    public void setMainEntityOfPage(java.net.URL fMainEntityOfPage) {
        this.fMainEntityOfPage = URL.of(fMainEntityOfPage);
    }

    private Text fAlternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return fAlternateName;
    }

    /**
     * An alias for the item.
     *
     * @param fAlternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text fAlternateName) {
        this.fAlternateName = fAlternateName;
    }
    /**
     * An alias for the item.
     *
     * @param fAlternateName java.lang.String value to set.
     */
    @Override
    public void setAlternateName(java.lang.String fAlternateName) {
        this.fAlternateName = Text.of(fAlternateName);
    }

    private Text fName;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return fName;
    }

    /**
     * The name of the item.
     *
     * @param fName Text value to set.
     */
    @Override
    public void setName(Text fName) {
        this.fName = fName;
    }
    /**
     * The name of the item.
     *
     * @param fName java.lang.String value to set.
     */
    @Override
    public void setName(java.lang.String fName) {
        this.fName = Text.of(fName);
    }

    private Action fPotentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return fPotentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param fPotentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action fPotentialAction) {
        this.fPotentialAction = fPotentialAction;
    }

    private Object fImage;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) fImage;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage URL value to set.
     */
    @Override
    public void setImage(URL fImage) {
        this.fImage = fImage;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage java.net.URL value to set.
     */
    @Override
    public void setImage(java.net.URL fImage) {
        this.fImage = URL.of(fImage);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject fImage) {
        this.fImage = fImage;
    }

    private URL fUrl;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return fUrl;
    }

    /**
     * URL of the item.
     *
     * @param fUrl URL value to set.
     */
    @Override
    public void setUrl(URL fUrl) {
        this.fUrl = fUrl;
    }
    /**
     * URL of the item.
     *
     * @param fUrl java.net.URL value to set.
     */
    @Override
    public void setUrl(java.net.URL fUrl) {
        this.fUrl = URL.of(fUrl);
    }

    private Text fDescription;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return fDescription;
    }

    /**
     * A description of the item.
     *
     * @param fDescription Text value to set.
     */
    @Override
    public void setDescription(Text fDescription) {
        this.fDescription = fDescription;
    }
    /**
     * A description of the item.
     *
     * @param fDescription java.lang.String value to set.
     */
    @Override
    public void setDescription(java.lang.String fDescription) {
        this.fDescription = Text.of(fDescription);
    }

    private Object fSubjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) fSubjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param fSubjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event fSubjectOf) {
        this.fSubjectOf = fSubjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param fSubjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork fSubjectOf) {
        this.fSubjectOf = fSubjectOf;
    }

    private URL fAdditionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return fAdditionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param fAdditionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL fAdditionalType) {
        this.fAdditionalType = fAdditionalType;
    }
    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param fAdditionalType java.net.URL value to set.
     */
    @Override
    public void setAdditionalType(java.net.URL fAdditionalType) {
        this.fAdditionalType = URL.of(fAdditionalType);
    }

    private Text fDisambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return fDisambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param fDisambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text fDisambiguatingDescription) {
        this.fDisambiguatingDescription = fDisambiguatingDescription;
    }
    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param fDisambiguatingDescription java.lang.String value to set.
     */
    @Override
    public void setDisambiguatingDescription(java.lang.String fDisambiguatingDescription) {
        this.fDisambiguatingDescription = Text.of(fDisambiguatingDescription);
    }

    private URL fSameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return fSameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param fSameAs URL value to set.
     */
    @Override
    public void setSameAs(URL fSameAs) {
        this.fSameAs = fSameAs;
    }
    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param fSameAs java.net.URL value to set.
     */
    @Override
    public void setSameAs(java.net.URL fSameAs) {
        this.fSameAs = URL.of(fSameAs);
    }

    private Object fIdentifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) fIdentifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier URL value to set.
     */
    @Override
    public void setIdentifier(URL fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier java.net.URL value to set.
     */
    @Override
    public void setIdentifier(java.net.URL fIdentifier) {
        this.fIdentifier = URL.of(fIdentifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier Text value to set.
     */
    @Override
    public void setIdentifier(Text fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier java.lang.String value to set.
     */
    @Override
    public void setIdentifier(java.lang.String fIdentifier) {
        this.fIdentifier = Text.of(fIdentifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
}
