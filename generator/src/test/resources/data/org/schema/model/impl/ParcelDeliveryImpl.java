/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.PostalAddress;
import org.schema.model.datatype.Text;
import org.schema.model.Product;
import org.schema.model.Organization;
import org.schema.model.Person;
import org.schema.model.datatype.URL;
import org.schema.model.datatype.Date;
import org.schema.model.datatype.DateTime;
import org.schema.model.DeliveryEvent;
import org.schema.model.DeliveryMethod;
import org.schema.model.Order;
import org.schema.model.CreativeWork;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.Event;
import org.schema.model.PropertyValue;
import org.schema.model.Thing;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import org.schema.model.Intangible;
import org.schema.model.ParcelDelivery;

/**
 * The delivery of a parcel either via the postal service or a commercial service.
 *
 * @see <a href="https://schema.org/ParcelDelivery">https://schema.org/ParcelDelivery</a>
 */
@JsonLdTypeName("ParcelDelivery")
public class ParcelDeliveryImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements ParcelDelivery {

    private PostalAddress originAddress;

    /**
     * Shipper's address.
     *
     * @return {@link PostalAddress}
     */
    @Override
    public PostalAddress getOriginAddress() {
        return originAddress;
    }

    /**
     * Shipper's address.
     *
     * @param originAddress PostalAddress value to set.
     */
    @Override
    public void setOriginAddress(PostalAddress originAddress) {
        this.originAddress = originAddress;
    }

    private Text trackingNumber;

    /**
     * Shipper tracking number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTrackingNumber() {
        return trackingNumber;
    }

    /**
     * Shipper tracking number.
     *
     * @param trackingNumber Text value to set.
     */
    @Override
    public void setTrackingNumber(Text trackingNumber) {
        this.trackingNumber = trackingNumber;
    }

    private Product itemShipped;

    /**
     * Item(s) being shipped.
     *
     * @return {@link Product}
     */
    @Override
    public Product getItemShipped() {
        return itemShipped;
    }

    /**
     * Item(s) being shipped.
     *
     * @param itemShipped Product value to set.
     */
    @Override
    public void setItemShipped(Product itemShipped) {
        this.itemShipped = itemShipped;
    }

    private Object provider;

    /**
     * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2927">https://github.com/schemaorg/schemaorg/issues/2927</a>
     */
    @Override
    public <T> T getProvider() {
        return (T) provider;
    }

    /**
     * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     *
     * @param provider Organization value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2927">https://github.com/schemaorg/schemaorg/issues/2927</a>
     */
    @Override
    public void setProvider(Organization provider) {
        this.provider = provider;
    }
    /**
     * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     *
     * @param provider Person value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2927">https://github.com/schemaorg/schemaorg/issues/2927</a>
     */
    @Override
    public void setProvider(Person provider) {
        this.provider = provider;
    }

    private URL trackingUrl;

    /**
     * Tracking url for the parcel delivery.
     *
     * @return {@link URL}
     */
    @Override
    public URL getTrackingUrl() {
        return trackingUrl;
    }

    /**
     * Tracking url for the parcel delivery.
     *
     * @param trackingUrl URL value to set.
     */
    @Override
    public void setTrackingUrl(URL trackingUrl) {
        this.trackingUrl = trackingUrl;
    }

    private PostalAddress deliveryAddress;

    /**
     * Destination address.
     *
     * @return {@link PostalAddress}
     */
    @Override
    public PostalAddress getDeliveryAddress() {
        return deliveryAddress;
    }

    /**
     * Destination address.
     *
     * @param deliveryAddress PostalAddress value to set.
     */
    @Override
    public void setDeliveryAddress(PostalAddress deliveryAddress) {
        this.deliveryAddress = deliveryAddress;
    }

    private Object expectedArrivalUntil;

    /**
     * The latest date the package may arrive.
     *
     * @return {@link Date} or {@link DateTime}
     */
    @Override
    public <T> T getExpectedArrivalUntil() {
        return (T) expectedArrivalUntil;
    }

    /**
     * The latest date the package may arrive.
     *
     * @param expectedArrivalUntil Date value to set.
     */
    @Override
    public void setExpectedArrivalUntil(Date expectedArrivalUntil) {
        this.expectedArrivalUntil = expectedArrivalUntil;
    }
    /**
     * The latest date the package may arrive.
     *
     * @param expectedArrivalUntil DateTime value to set.
     */
    @Override
    public void setExpectedArrivalUntil(DateTime expectedArrivalUntil) {
        this.expectedArrivalUntil = expectedArrivalUntil;
    }

    private DeliveryEvent deliveryStatus;

    /**
     * New entry added as the package passes through each leg of its journey (from shipment to final delivery).
     *
     * @return {@link DeliveryEvent}
     */
    @Override
    public DeliveryEvent getDeliveryStatus() {
        return deliveryStatus;
    }

    /**
     * New entry added as the package passes through each leg of its journey (from shipment to final delivery).
     *
     * @param deliveryStatus DeliveryEvent value to set.
     */
    @Override
    public void setDeliveryStatus(DeliveryEvent deliveryStatus) {
        this.deliveryStatus = deliveryStatus;
    }

    private Object expectedArrivalFrom;

    /**
     * The earliest date the package may arrive.
     *
     * @return {@link Date} or {@link DateTime}
     */
    @Override
    public <T> T getExpectedArrivalFrom() {
        return (T) expectedArrivalFrom;
    }

    /**
     * The earliest date the package may arrive.
     *
     * @param expectedArrivalFrom Date value to set.
     */
    @Override
    public void setExpectedArrivalFrom(Date expectedArrivalFrom) {
        this.expectedArrivalFrom = expectedArrivalFrom;
    }
    /**
     * The earliest date the package may arrive.
     *
     * @param expectedArrivalFrom DateTime value to set.
     */
    @Override
    public void setExpectedArrivalFrom(DateTime expectedArrivalFrom) {
        this.expectedArrivalFrom = expectedArrivalFrom;
    }

    private Organization carrier;

    /**
     * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getCarrier() {
        return carrier;
    }

    /**
     * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
     *
     * @param carrier Organization value to set.
     */
    @Override
    public void setCarrier(Organization carrier) {
        this.carrier = carrier;
    }

    private DeliveryMethod hasDeliveryMethod;

    /**
     * Method used for delivery or shipping.
     *
     * @return {@link DeliveryMethod}
     */
    @Override
    public DeliveryMethod getHasDeliveryMethod() {
        return hasDeliveryMethod;
    }

    /**
     * Method used for delivery or shipping.
     *
     * @param hasDeliveryMethod DeliveryMethod value to set.
     */
    @Override
    public void setHasDeliveryMethod(DeliveryMethod hasDeliveryMethod) {
        this.hasDeliveryMethod = hasDeliveryMethod;
    }

    private Order partOfOrder;

    /**
     * The overall order the items in this delivery were included in.
     *
     * @return {@link Order}
     */
    @Override
    public Order getPartOfOrder() {
        return partOfOrder;
    }

    /**
     * The overall order the items in this delivery were included in.
     *
     * @param partOfOrder Order value to set.
     */
    @Override
    public void setPartOfOrder(Order partOfOrder) {
        this.partOfOrder = partOfOrder;
    }

    private Object mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }

    private Text alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text alternateName) {
        this.alternateName = alternateName;
    }

    private Text name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     */
    @Override
    public void setName(Text name) {
        this.name = name;
    }

    private Action potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action potentialAction) {
        this.potentialAction = potentialAction;
    }

    private Object image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void setImage(URL image) {
        this.image = image;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject image) {
        this.image = image;
    }

    private URL url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void setUrl(URL url) {
        this.url = url;
    }

    private Text description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void setDescription(Text description) {
        this.description = description;
    }

    private Object subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event subjectOf) {
        this.subjectOf = subjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = subjectOf;
    }

    private URL additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL additionalType) {
        this.additionalType = additionalType;
    }

    private Text disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = disambiguatingDescription;
    }

    private URL sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void setSameAs(URL sameAs) {
        this.sameAs = sameAs;
    }

    private Object identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void setIdentifier(URL identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void setIdentifier(Text identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue identifier) {
        this.identifier = identifier;
    }
}
