/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.ParcelDelivery;
import org.schema.model.PostalAddress;
import org.schema.model.Offer;
import org.schema.model.Organization;
import org.schema.model.Person;
import org.schema.model.OrderStatus;
import org.schema.model.datatype.Text;
import org.schema.model.Invoice;
import org.schema.model.datatype.DateTime;
import org.schema.model.datatype.Date;
import org.schema.model.datatype.Number;
import org.schema.model.datatype.URL;
import org.schema.model.datatype.Boolean;
import org.schema.model.Service;
import org.schema.model.OrderItem;
import org.schema.model.Product;
import org.schema.model.PaymentMethod;
import org.schema.model.CreativeWork;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.Event;
import org.schema.model.PropertyValue;
import org.schema.model.Thing;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import org.schema.model.Intangible;
import org.schema.model.Order;

/**
 * An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
 *
 * @see <a href="https://schema.org/Order">https://schema.org/Order</a>
 */
@JsonLdTypeName("Order")
public class OrderImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements Order {

    private ParcelDelivery fOrderDelivery;

    /**
     * The delivery of the parcel related to this order or order item.
     *
     * @return {@link ParcelDelivery}
     */
    @Override
    public ParcelDelivery getOrderDelivery() {
        return fOrderDelivery;
    }

    /**
     * The delivery of the parcel related to this order or order item.
     *
     * @param fOrderDelivery ParcelDelivery value to set.
     */
    @Override
    public void setOrderDelivery(ParcelDelivery fOrderDelivery) {
        this.fOrderDelivery = fOrderDelivery;
    }

    private PostalAddress fBillingAddress;

    /**
     * The billing address for the order.
     *
     * @return {@link PostalAddress}
     */
    @Override
    public PostalAddress getBillingAddress() {
        return fBillingAddress;
    }

    /**
     * The billing address for the order.
     *
     * @param fBillingAddress PostalAddress value to set.
     */
    @Override
    public void setBillingAddress(PostalAddress fBillingAddress) {
        this.fBillingAddress = fBillingAddress;
    }

    private Offer fAcceptedOffer;

    /**
     * The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
     *
     * @return {@link Offer}
     */
    @Override
    public Offer getAcceptedOffer() {
        return fAcceptedOffer;
    }

    /**
     * The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
     *
     * @param fAcceptedOffer Offer value to set.
     */
    @Override
    public void setAcceptedOffer(Offer fAcceptedOffer) {
        this.fAcceptedOffer = fAcceptedOffer;
    }

    private Object fMerchant;

    /**
     * 'merchant' is an out-dated term for 'seller'.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getMerchant() {
        return (T) fMerchant;
    }

    /**
     * 'merchant' is an out-dated term for 'seller'.
     *
     * @param fMerchant Organization value to set.
     */
    @Override
    public void setMerchant(Organization fMerchant) {
        this.fMerchant = fMerchant;
    }
    /**
     * 'merchant' is an out-dated term for 'seller'.
     *
     * @param fMerchant Person value to set.
     */
    @Override
    public void setMerchant(Person fMerchant) {
        this.fMerchant = fMerchant;
    }

    private OrderStatus fOrderStatus;

    /**
     * The current status of the order.
     *
     * @return {@link OrderStatus}
     */
    @Override
    public OrderStatus getOrderStatus() {
        return fOrderStatus;
    }

    /**
     * The current status of the order.
     *
     * @param fOrderStatus OrderStatus value to set.
     */
    @Override
    public void setOrderStatus(OrderStatus fOrderStatus) {
        this.fOrderStatus = fOrderStatus;
    }

    private Text fConfirmationNumber;

    /**
     * A number that confirms the given order or payment has been received.
     *
     * @return {@link Text}
     */
    @Override
    public Text getConfirmationNumber() {
        return fConfirmationNumber;
    }

    /**
     * A number that confirms the given order or payment has been received.
     *
     * @param fConfirmationNumber Text value to set.
     */
    @Override
    public void setConfirmationNumber(Text fConfirmationNumber) {
        this.fConfirmationNumber = fConfirmationNumber;
    }
    /**
     * A number that confirms the given order or payment has been received.
     *
     * @param fConfirmationNumber java.lang.String value to set.
     */
    @Override
    public void setConfirmationNumber(java.lang.String fConfirmationNumber) {
        this.fConfirmationNumber = Text.of(fConfirmationNumber);
    }

    private Invoice fPartOfInvoice;

    /**
     * The order is being paid as part of the referenced Invoice.
     *
     * @return {@link Invoice}
     */
    @Override
    public Invoice getPartOfInvoice() {
        return fPartOfInvoice;
    }

    /**
     * The order is being paid as part of the referenced Invoice.
     *
     * @param fPartOfInvoice Invoice value to set.
     */
    @Override
    public void setPartOfInvoice(Invoice fPartOfInvoice) {
        this.fPartOfInvoice = fPartOfInvoice;
    }

    private Text fOrderNumber;

    /**
     * The identifier of the transaction.
     *
     * @return {@link Text}
     */
    @Override
    public Text getOrderNumber() {
        return fOrderNumber;
    }

    /**
     * The identifier of the transaction.
     *
     * @param fOrderNumber Text value to set.
     */
    @Override
    public void setOrderNumber(Text fOrderNumber) {
        this.fOrderNumber = fOrderNumber;
    }
    /**
     * The identifier of the transaction.
     *
     * @param fOrderNumber java.lang.String value to set.
     */
    @Override
    public void setOrderNumber(java.lang.String fOrderNumber) {
        this.fOrderNumber = Text.of(fOrderNumber);
    }

    private Object fSeller;

    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSeller() {
        return (T) fSeller;
    }

    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @param fSeller Organization value to set.
     */
    @Override
    public void setSeller(Organization fSeller) {
        this.fSeller = fSeller;
    }
    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @param fSeller Person value to set.
     */
    @Override
    public void setSeller(Person fSeller) {
        this.fSeller = fSeller;
    }

    private Object fCustomer;

    /**
     * Party placing the order or paying the invoice.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getCustomer() {
        return (T) fCustomer;
    }

    /**
     * Party placing the order or paying the invoice.
     *
     * @param fCustomer Organization value to set.
     */
    @Override
    public void setCustomer(Organization fCustomer) {
        this.fCustomer = fCustomer;
    }
    /**
     * Party placing the order or paying the invoice.
     *
     * @param fCustomer Person value to set.
     */
    @Override
    public void setCustomer(Person fCustomer) {
        this.fCustomer = fCustomer;
    }

    private Object fPaymentDueDate;

    /**
     * The date that payment is due.
     *
     * @return {@link DateTime} or {@link Date}
     */
    @Override
    public <T> T getPaymentDueDate() {
        return (T) fPaymentDueDate;
    }

    /**
     * The date that payment is due.
     *
     * @param fPaymentDueDate DateTime value to set.
     */
    @Override
    public void setPaymentDueDate(DateTime fPaymentDueDate) {
        this.fPaymentDueDate = fPaymentDueDate;
    }
    /**
     * The date that payment is due.
     *
     * @param fPaymentDueDate java.time.LocalDateTime value to set.
     */
    @Override
    public void setPaymentDueDate(java.time.LocalDateTime fPaymentDueDate) {
        this.fPaymentDueDate = DateTime.of(fPaymentDueDate);
    }
    /**
     * The date that payment is due.
     *
     * @param fPaymentDueDate Date value to set.
     */
    @Override
    public void setPaymentDueDate(Date fPaymentDueDate) {
        this.fPaymentDueDate = fPaymentDueDate;
    }
    /**
     * The date that payment is due.
     *
     * @param fPaymentDueDate java.time.LocalDate value to set.
     */
    @Override
    public void setPaymentDueDate(java.time.LocalDate fPaymentDueDate) {
        this.fPaymentDueDate = Date.of(fPaymentDueDate);
    }

    private Object fBroker;

    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     *
     * @return {@link Person} or {@link Organization}
     */
    @Override
    public <T> T getBroker() {
        return (T) fBroker;
    }

    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     *
     * @param fBroker Person value to set.
     */
    @Override
    public void setBroker(Person fBroker) {
        this.fBroker = fBroker;
    }
    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     *
     * @param fBroker Organization value to set.
     */
    @Override
    public void setBroker(Organization fBroker) {
        this.fBroker = fBroker;
    }

    private Text fDiscountCode;

    /**
     * Code used to redeem a discount.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDiscountCode() {
        return fDiscountCode;
    }

    /**
     * Code used to redeem a discount.
     *
     * @param fDiscountCode Text value to set.
     */
    @Override
    public void setDiscountCode(Text fDiscountCode) {
        this.fDiscountCode = fDiscountCode;
    }
    /**
     * Code used to redeem a discount.
     *
     * @param fDiscountCode java.lang.String value to set.
     */
    @Override
    public void setDiscountCode(java.lang.String fDiscountCode) {
        this.fDiscountCode = Text.of(fDiscountCode);
    }

    private Object fDiscount;

    /**
     * Any discount applied (to an Order).
     *
     * @return {@link Text} or {@link Number}
     */
    @Override
    public <T> T getDiscount() {
        return (T) fDiscount;
    }

    /**
     * Any discount applied (to an Order).
     *
     * @param fDiscount Text value to set.
     */
    @Override
    public void setDiscount(Text fDiscount) {
        this.fDiscount = fDiscount;
    }
    /**
     * Any discount applied (to an Order).
     *
     * @param fDiscount java.lang.String value to set.
     */
    @Override
    public void setDiscount(java.lang.String fDiscount) {
        this.fDiscount = Text.of(fDiscount);
    }
    /**
     * Any discount applied (to an Order).
     *
     * @param fDiscount Number value to set.
     */
    @Override
    public void setDiscount(Number fDiscount) {
        this.fDiscount = fDiscount;
    }
    /**
     * Any discount applied (to an Order).
     *
     * @param fDiscount java.lang.Number value to set.
     */
    @Override
    public void setDiscount(java.lang.Number fDiscount) {
        this.fDiscount = Number.of(fDiscount);
    }

    private Text fPaymentMethodId;

    /**
     * An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
     *
     * @return {@link Text}
     */
    @Override
    public Text getPaymentMethodId() {
        return fPaymentMethodId;
    }

    /**
     * An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
     *
     * @param fPaymentMethodId Text value to set.
     */
    @Override
    public void setPaymentMethodId(Text fPaymentMethodId) {
        this.fPaymentMethodId = fPaymentMethodId;
    }
    /**
     * An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
     *
     * @param fPaymentMethodId java.lang.String value to set.
     */
    @Override
    public void setPaymentMethodId(java.lang.String fPaymentMethodId) {
        this.fPaymentMethodId = Text.of(fPaymentMethodId);
    }

    private URL fPaymentUrl;

    /**
     * The URL for sending a payment.
     *
     * @return {@link URL}
     */
    @Override
    public URL getPaymentUrl() {
        return fPaymentUrl;
    }

    /**
     * The URL for sending a payment.
     *
     * @param fPaymentUrl URL value to set.
     */
    @Override
    public void setPaymentUrl(URL fPaymentUrl) {
        this.fPaymentUrl = fPaymentUrl;
    }
    /**
     * The URL for sending a payment.
     *
     * @param fPaymentUrl java.net.URL value to set.
     */
    @Override
    public void setPaymentUrl(java.net.URL fPaymentUrl) {
        this.fPaymentUrl = URL.of(fPaymentUrl);
    }

    private Text fDiscountCurrency;

    /**
     * The currency of the discount.<br/><br/>Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. "BTC"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. "Ithaca HOUR".
     *
     * @return {@link Text}
     */
    @Override
    public Text getDiscountCurrency() {
        return fDiscountCurrency;
    }

    /**
     * The currency of the discount.<br/><br/>Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. "BTC"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. "Ithaca HOUR".
     *
     * @param fDiscountCurrency Text value to set.
     */
    @Override
    public void setDiscountCurrency(Text fDiscountCurrency) {
        this.fDiscountCurrency = fDiscountCurrency;
    }
    /**
     * The currency of the discount.<br/><br/>Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. "BTC"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. "Ithaca HOUR".
     *
     * @param fDiscountCurrency java.lang.String value to set.
     */
    @Override
    public void setDiscountCurrency(java.lang.String fDiscountCurrency) {
        this.fDiscountCurrency = Text.of(fDiscountCurrency);
    }

    private DateTime fPaymentDue;

    /**
     * The date that payment is due.
     *
     * @return {@link DateTime}
     */
    @Override
    public DateTime getPaymentDue() {
        return fPaymentDue;
    }

    /**
     * The date that payment is due.
     *
     * @param fPaymentDue DateTime value to set.
     */
    @Override
    public void setPaymentDue(DateTime fPaymentDue) {
        this.fPaymentDue = fPaymentDue;
    }
    /**
     * The date that payment is due.
     *
     * @param fPaymentDue java.time.LocalDateTime value to set.
     */
    @Override
    public void setPaymentDue(java.time.LocalDateTime fPaymentDue) {
        this.fPaymentDue = DateTime.of(fPaymentDue);
    }

    private Object fOrderDate;

    /**
     * Date order was placed.
     *
     * @return {@link Date} or {@link DateTime}
     */
    @Override
    public <T> T getOrderDate() {
        return (T) fOrderDate;
    }

    /**
     * Date order was placed.
     *
     * @param fOrderDate Date value to set.
     */
    @Override
    public void setOrderDate(Date fOrderDate) {
        this.fOrderDate = fOrderDate;
    }
    /**
     * Date order was placed.
     *
     * @param fOrderDate java.time.LocalDate value to set.
     */
    @Override
    public void setOrderDate(java.time.LocalDate fOrderDate) {
        this.fOrderDate = Date.of(fOrderDate);
    }
    /**
     * Date order was placed.
     *
     * @param fOrderDate DateTime value to set.
     */
    @Override
    public void setOrderDate(DateTime fOrderDate) {
        this.fOrderDate = fOrderDate;
    }
    /**
     * Date order was placed.
     *
     * @param fOrderDate java.time.LocalDateTime value to set.
     */
    @Override
    public void setOrderDate(java.time.LocalDateTime fOrderDate) {
        this.fOrderDate = DateTime.of(fOrderDate);
    }

    private Boolean fIsGift;

    /**
     * Was the offer accepted as a gift for someone other than the buyer.
     *
     * @return {@link Boolean}
     */
    @Override
    public Boolean getIsGift() {
        return fIsGift;
    }

    /**
     * Was the offer accepted as a gift for someone other than the buyer.
     *
     * @param fIsGift Boolean value to set.
     */
    @Override
    public void setIsGift(Boolean fIsGift) {
        this.fIsGift = fIsGift;
    }
    /**
     * Was the offer accepted as a gift for someone other than the buyer.
     *
     * @param fIsGift java.lang.Boolean value to set.
     */
    @Override
    public void setIsGift(java.lang.Boolean fIsGift) {
        this.fIsGift = Boolean.of(fIsGift);
    }

    private Object fOrderedItem;

    /**
     * The item ordered.
     *
     * @return {@link Service} or {@link OrderItem} or {@link Product}
     */
    @Override
    public <T> T getOrderedItem() {
        return (T) fOrderedItem;
    }

    /**
     * The item ordered.
     *
     * @param fOrderedItem Service value to set.
     */
    @Override
    public void setOrderedItem(Service fOrderedItem) {
        this.fOrderedItem = fOrderedItem;
    }
    /**
     * The item ordered.
     *
     * @param fOrderedItem OrderItem value to set.
     */
    @Override
    public void setOrderedItem(OrderItem fOrderedItem) {
        this.fOrderedItem = fOrderedItem;
    }
    /**
     * The item ordered.
     *
     * @param fOrderedItem Product value to set.
     */
    @Override
    public void setOrderedItem(Product fOrderedItem) {
        this.fOrderedItem = fOrderedItem;
    }

    private PaymentMethod fPaymentMethod;

    /**
     * The name of the credit card or other method of payment for the order.
     *
     * @return {@link PaymentMethod}
     */
    @Override
    public PaymentMethod getPaymentMethod() {
        return fPaymentMethod;
    }

    /**
     * The name of the credit card or other method of payment for the order.
     *
     * @param fPaymentMethod PaymentMethod value to set.
     */
    @Override
    public void setPaymentMethod(PaymentMethod fPaymentMethod) {
        this.fPaymentMethod = fPaymentMethod;
    }

    private Object fMainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) fMainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork fMainEntityOfPage) {
        this.fMainEntityOfPage = fMainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL fMainEntityOfPage) {
        this.fMainEntityOfPage = fMainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param fMainEntityOfPage java.net.URL value to set.
     */
    @Override
    public void setMainEntityOfPage(java.net.URL fMainEntityOfPage) {
        this.fMainEntityOfPage = URL.of(fMainEntityOfPage);
    }

    private Text fAlternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return fAlternateName;
    }

    /**
     * An alias for the item.
     *
     * @param fAlternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text fAlternateName) {
        this.fAlternateName = fAlternateName;
    }
    /**
     * An alias for the item.
     *
     * @param fAlternateName java.lang.String value to set.
     */
    @Override
    public void setAlternateName(java.lang.String fAlternateName) {
        this.fAlternateName = Text.of(fAlternateName);
    }

    private Text fName;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return fName;
    }

    /**
     * The name of the item.
     *
     * @param fName Text value to set.
     */
    @Override
    public void setName(Text fName) {
        this.fName = fName;
    }
    /**
     * The name of the item.
     *
     * @param fName java.lang.String value to set.
     */
    @Override
    public void setName(java.lang.String fName) {
        this.fName = Text.of(fName);
    }

    private Action fPotentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return fPotentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param fPotentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action fPotentialAction) {
        this.fPotentialAction = fPotentialAction;
    }

    private Object fImage;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) fImage;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage URL value to set.
     */
    @Override
    public void setImage(URL fImage) {
        this.fImage = fImage;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage java.net.URL value to set.
     */
    @Override
    public void setImage(java.net.URL fImage) {
        this.fImage = URL.of(fImage);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param fImage ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject fImage) {
        this.fImage = fImage;
    }

    private URL fUrl;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return fUrl;
    }

    /**
     * URL of the item.
     *
     * @param fUrl URL value to set.
     */
    @Override
    public void setUrl(URL fUrl) {
        this.fUrl = fUrl;
    }
    /**
     * URL of the item.
     *
     * @param fUrl java.net.URL value to set.
     */
    @Override
    public void setUrl(java.net.URL fUrl) {
        this.fUrl = URL.of(fUrl);
    }

    private Text fDescription;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return fDescription;
    }

    /**
     * A description of the item.
     *
     * @param fDescription Text value to set.
     */
    @Override
    public void setDescription(Text fDescription) {
        this.fDescription = fDescription;
    }
    /**
     * A description of the item.
     *
     * @param fDescription java.lang.String value to set.
     */
    @Override
    public void setDescription(java.lang.String fDescription) {
        this.fDescription = Text.of(fDescription);
    }

    private Object fSubjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) fSubjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param fSubjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event fSubjectOf) {
        this.fSubjectOf = fSubjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param fSubjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork fSubjectOf) {
        this.fSubjectOf = fSubjectOf;
    }

    private URL fAdditionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return fAdditionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param fAdditionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL fAdditionalType) {
        this.fAdditionalType = fAdditionalType;
    }
    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param fAdditionalType java.net.URL value to set.
     */
    @Override
    public void setAdditionalType(java.net.URL fAdditionalType) {
        this.fAdditionalType = URL.of(fAdditionalType);
    }

    private Text fDisambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return fDisambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param fDisambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text fDisambiguatingDescription) {
        this.fDisambiguatingDescription = fDisambiguatingDescription;
    }
    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param fDisambiguatingDescription java.lang.String value to set.
     */
    @Override
    public void setDisambiguatingDescription(java.lang.String fDisambiguatingDescription) {
        this.fDisambiguatingDescription = Text.of(fDisambiguatingDescription);
    }

    private URL fSameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return fSameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param fSameAs URL value to set.
     */
    @Override
    public void setSameAs(URL fSameAs) {
        this.fSameAs = fSameAs;
    }
    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param fSameAs java.net.URL value to set.
     */
    @Override
    public void setSameAs(java.net.URL fSameAs) {
        this.fSameAs = URL.of(fSameAs);
    }

    private Object fIdentifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) fIdentifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier URL value to set.
     */
    @Override
    public void setIdentifier(URL fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier java.net.URL value to set.
     */
    @Override
    public void setIdentifier(java.net.URL fIdentifier) {
        this.fIdentifier = URL.of(fIdentifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier Text value to set.
     */
    @Override
    public void setIdentifier(Text fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier java.lang.String value to set.
     */
    @Override
    public void setIdentifier(java.lang.String fIdentifier) {
        this.fIdentifier = Text.of(fIdentifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param fIdentifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue fIdentifier) {
        this.fIdentifier = fIdentifier;
    }
}
