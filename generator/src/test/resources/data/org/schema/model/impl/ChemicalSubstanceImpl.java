/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.datatype.Text;
import org.schema.model.DefinedTerm;
import org.schema.model.Grant;
import org.schema.model.Gene;
import org.schema.model.BioChemEntity;
import org.schema.model.datatype.URL;
import org.schema.model.Taxon;
import org.schema.model.PropertyValue;
import org.schema.model.MedicalCondition;
import org.schema.model.CreativeWork;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.Event;
import org.schema.model.Thing;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import com.weedow.schemaorg.commons.model.JsonLdFieldTypes;
import java.util.List;
import org.schema.model.ChemicalSubstance;

/**
 * A chemical substance is 'a portion of matter of constant composition, composed of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).
 *
 * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
 * @see <a href="https://schema.org/ChemicalSubstance">https://schema.org/ChemicalSubstance</a>
 */
@JsonLdTypeName("ChemicalSubstance")
public class ChemicalSubstanceImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements ChemicalSubstance {

    private List<Text> chemicalComposition;

    /**
     * The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<Text> getChemicalCompositionList() {
        return chemicalComposition;
    }

    /**
     * The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public Text getChemicalComposition() {
        return getFirst(chemicalComposition);
    }

    /**
     * The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.
     *
     * @param chemicalComposition Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addChemicalComposition(Text chemicalComposition) {
        this.chemicalComposition = add(this.chemicalComposition, chemicalComposition);
    }

    private List<DefinedTerm> potentialUse;

    /**
     * Intended use of the BioChemEntity by humans.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<DefinedTerm> getPotentialUseList() {
        return potentialUse;
    }

    /**
     * Intended use of the BioChemEntity by humans.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public DefinedTerm getPotentialUse() {
        return getFirst(potentialUse);
    }

    /**
     * Intended use of the BioChemEntity by humans.
     *
     * @param potentialUse DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addPotentialUse(DefinedTerm potentialUse) {
        this.potentialUse = add(this.potentialUse, potentialUse);
    }

    private List<DefinedTerm> chemicalRole;

    /**
     * A role played by the BioChemEntity within a chemical context.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<DefinedTerm> getChemicalRoleList() {
        return chemicalRole;
    }

    /**
     * A role played by the BioChemEntity within a chemical context.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public DefinedTerm getChemicalRole() {
        return getFirst(chemicalRole);
    }

    /**
     * A role played by the BioChemEntity within a chemical context.
     *
     * @param chemicalRole DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addChemicalRole(DefinedTerm chemicalRole) {
        this.chemicalRole = add(this.chemicalRole, chemicalRole);
    }

    private List<Grant> funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public List<Grant> getFundingList() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public Grant getFunding() {
        return getFirst(funding);
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void addFunding(Grant funding) {
        this.funding = add(this.funding, funding);
    }

    private List<Gene> isEncodedByBioChemEntity;

    /**
     * Another BioChemEntity encoding by this one.
     *
     * @return {@link Gene}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<Gene> getIsEncodedByBioChemEntityList() {
        return isEncodedByBioChemEntity;
    }

    /**
     * Another BioChemEntity encoding by this one.
     *
     * @return {@link Gene}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public Gene getIsEncodedByBioChemEntity() {
        return getFirst(isEncodedByBioChemEntity);
    }

    /**
     * Another BioChemEntity encoding by this one.
     *
     * @param isEncodedByBioChemEntity Gene value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsEncodedByBioChemEntity(Gene isEncodedByBioChemEntity) {
        this.isEncodedByBioChemEntity = add(this.isEncodedByBioChemEntity, isEncodedByBioChemEntity);
    }

    private List<BioChemEntity> isPartOfBioChemEntity;

    /**
     * Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. 
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<BioChemEntity> getIsPartOfBioChemEntityList() {
        return isPartOfBioChemEntity;
    }

    /**
     * Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. 
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public BioChemEntity getIsPartOfBioChemEntity() {
        return getFirst(isPartOfBioChemEntity);
    }

    /**
     * Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. 
     *
     * @param isPartOfBioChemEntity BioChemEntity value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsPartOfBioChemEntity(BioChemEntity isPartOfBioChemEntity) {
        this.isPartOfBioChemEntity = add(this.isPartOfBioChemEntity, isPartOfBioChemEntity);
    }

    @JsonLdFieldTypes({ URL.class, DefinedTerm.class, Text.class, Taxon.class })
    private List<Object> taxonomicRange;

    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text} or {@link Taxon}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getTaxonomicRangeList() {
        return (List<T>) taxonomicRange;
    }

    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text} or {@link Taxon}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getTaxonomicRange() {
        return (T) getFirst(taxonomicRange);
    }

    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @param taxonomicRange URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addTaxonomicRange(URL taxonomicRange) {
        this.taxonomicRange = add(this.taxonomicRange, taxonomicRange);
    }
    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @param taxonomicRange DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addTaxonomicRange(DefinedTerm taxonomicRange) {
        this.taxonomicRange = add(this.taxonomicRange, taxonomicRange);
    }
    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @param taxonomicRange Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addTaxonomicRange(Text taxonomicRange) {
        this.taxonomicRange = add(this.taxonomicRange, taxonomicRange);
    }
    /**
     * The taxonomic grouping of the organism that expresses, encodes, or in someway related to the BioChemEntity.
     *
     * @param taxonomicRange Taxon value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addTaxonomicRange(Taxon taxonomicRange) {
        this.taxonomicRange = add(this.taxonomicRange, taxonomicRange);
    }

    @JsonLdFieldTypes({ PropertyValue.class, URL.class, DefinedTerm.class })
    private List<Object> isInvolvedInBiologicalProcess;

    /**
     * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link URL} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getIsInvolvedInBiologicalProcessList() {
        return (List<T>) isInvolvedInBiologicalProcess;
    }

    /**
     * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link URL} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getIsInvolvedInBiologicalProcess() {
        return (T) getFirst(isInvolvedInBiologicalProcess);
    }

    /**
     * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
     *
     * @param isInvolvedInBiologicalProcess PropertyValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsInvolvedInBiologicalProcess(PropertyValue isInvolvedInBiologicalProcess) {
        this.isInvolvedInBiologicalProcess = add(this.isInvolvedInBiologicalProcess, isInvolvedInBiologicalProcess);
    }
    /**
     * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
     *
     * @param isInvolvedInBiologicalProcess URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsInvolvedInBiologicalProcess(URL isInvolvedInBiologicalProcess) {
        this.isInvolvedInBiologicalProcess = add(this.isInvolvedInBiologicalProcess, isInvolvedInBiologicalProcess);
    }
    /**
     * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
     *
     * @param isInvolvedInBiologicalProcess DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsInvolvedInBiologicalProcess(DefinedTerm isInvolvedInBiologicalProcess) {
        this.isInvolvedInBiologicalProcess = add(this.isInvolvedInBiologicalProcess, isInvolvedInBiologicalProcess);
    }

    @JsonLdFieldTypes({ PropertyValue.class, DefinedTerm.class, URL.class })
    private List<Object> isLocatedInSubcellularLocation;

    /**
     * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link DefinedTerm} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getIsLocatedInSubcellularLocationList() {
        return (List<T>) isLocatedInSubcellularLocation;
    }

    /**
     * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link DefinedTerm} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getIsLocatedInSubcellularLocation() {
        return (T) getFirst(isLocatedInSubcellularLocation);
    }

    /**
     * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
     *
     * @param isLocatedInSubcellularLocation PropertyValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsLocatedInSubcellularLocation(PropertyValue isLocatedInSubcellularLocation) {
        this.isLocatedInSubcellularLocation = add(this.isLocatedInSubcellularLocation, isLocatedInSubcellularLocation);
    }
    /**
     * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
     *
     * @param isLocatedInSubcellularLocation DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsLocatedInSubcellularLocation(DefinedTerm isLocatedInSubcellularLocation) {
        this.isLocatedInSubcellularLocation = add(this.isLocatedInSubcellularLocation, isLocatedInSubcellularLocation);
    }
    /**
     * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
     *
     * @param isLocatedInSubcellularLocation URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addIsLocatedInSubcellularLocation(URL isLocatedInSubcellularLocation) {
        this.isLocatedInSubcellularLocation = add(this.isLocatedInSubcellularLocation, isLocatedInSubcellularLocation);
    }

    @JsonLdFieldTypes({ URL.class, PropertyValue.class, MedicalCondition.class })
    private List<Object> associatedDisease;

    /**
     * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
     *
     * @return {@link URL} or {@link PropertyValue} or {@link MedicalCondition}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getAssociatedDiseaseList() {
        return (List<T>) associatedDisease;
    }

    /**
     * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
     *
     * @return {@link URL} or {@link PropertyValue} or {@link MedicalCondition}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getAssociatedDisease() {
        return (T) getFirst(associatedDisease);
    }

    /**
     * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
     *
     * @param associatedDisease URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addAssociatedDisease(URL associatedDisease) {
        this.associatedDisease = add(this.associatedDisease, associatedDisease);
    }
    /**
     * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
     *
     * @param associatedDisease PropertyValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addAssociatedDisease(PropertyValue associatedDisease) {
        this.associatedDisease = add(this.associatedDisease, associatedDisease);
    }
    /**
     * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
     *
     * @param associatedDisease MedicalCondition value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addAssociatedDisease(MedicalCondition associatedDisease) {
        this.associatedDisease = add(this.associatedDisease, associatedDisease);
    }

    @JsonLdFieldTypes({ PropertyValue.class, DefinedTerm.class, URL.class })
    private List<Object> hasMolecularFunction;

    /**
     * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link DefinedTerm} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getHasMolecularFunctionList() {
        return (List<T>) hasMolecularFunction;
    }

    /**
     * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
     *
     * @return {@link PropertyValue} or {@link DefinedTerm} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getHasMolecularFunction() {
        return (T) getFirst(hasMolecularFunction);
    }

    /**
     * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
     *
     * @param hasMolecularFunction PropertyValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasMolecularFunction(PropertyValue hasMolecularFunction) {
        this.hasMolecularFunction = add(this.hasMolecularFunction, hasMolecularFunction);
    }
    /**
     * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
     *
     * @param hasMolecularFunction DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasMolecularFunction(DefinedTerm hasMolecularFunction) {
        this.hasMolecularFunction = add(this.hasMolecularFunction, hasMolecularFunction);
    }
    /**
     * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
     *
     * @param hasMolecularFunction URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasMolecularFunction(URL hasMolecularFunction) {
        this.hasMolecularFunction = add(this.hasMolecularFunction, hasMolecularFunction);
    }

    private List<BioChemEntity> hasBioChemEntityPart;

    /**
     * Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. 
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<BioChemEntity> getHasBioChemEntityPartList() {
        return hasBioChemEntityPart;
    }

    /**
     * Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. 
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public BioChemEntity getHasBioChemEntityPart() {
        return getFirst(hasBioChemEntityPart);
    }

    /**
     * Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. 
     *
     * @param hasBioChemEntityPart BioChemEntity value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasBioChemEntityPart(BioChemEntity hasBioChemEntityPart) {
        this.hasBioChemEntityPart = add(this.hasBioChemEntityPart, hasBioChemEntityPart);
    }

    private List<BioChemEntity> bioChemInteraction;

    /**
     * A BioChemEntity that is known to interact with this item.
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<BioChemEntity> getBioChemInteractionList() {
        return bioChemInteraction;
    }

    /**
     * A BioChemEntity that is known to interact with this item.
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public BioChemEntity getBioChemInteraction() {
        return getFirst(bioChemInteraction);
    }

    /**
     * A BioChemEntity that is known to interact with this item.
     *
     * @param bioChemInteraction BioChemEntity value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addBioChemInteraction(BioChemEntity bioChemInteraction) {
        this.bioChemInteraction = add(this.bioChemInteraction, bioChemInteraction);
    }

    @JsonLdFieldTypes({ Text.class, PropertyValue.class, URL.class })
    private List<Object> hasRepresentation;

    /**
     * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
     *
     * @return {@link Text} or {@link PropertyValue} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> List<T> getHasRepresentationList() {
        return (List<T>) hasRepresentation;
    }

    /**
     * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
     *
     * @return {@link Text} or {@link PropertyValue} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public <T> T getHasRepresentation() {
        return (T) getFirst(hasRepresentation);
    }

    /**
     * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
     *
     * @param hasRepresentation Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasRepresentation(Text hasRepresentation) {
        this.hasRepresentation = add(this.hasRepresentation, hasRepresentation);
    }
    /**
     * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
     *
     * @param hasRepresentation PropertyValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasRepresentation(PropertyValue hasRepresentation) {
        this.hasRepresentation = add(this.hasRepresentation, hasRepresentation);
    }
    /**
     * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
     *
     * @param hasRepresentation URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addHasRepresentation(URL hasRepresentation) {
        this.hasRepresentation = add(this.hasRepresentation, hasRepresentation);
    }

    private List<BioChemEntity> bioChemSimilarity;

    /**
     * A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<BioChemEntity> getBioChemSimilarityList() {
        return bioChemSimilarity;
    }

    /**
     * A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
     *
     * @return {@link BioChemEntity}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public BioChemEntity getBioChemSimilarity() {
        return getFirst(bioChemSimilarity);
    }

    /**
     * A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
     *
     * @param bioChemSimilarity BioChemEntity value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addBioChemSimilarity(BioChemEntity bioChemSimilarity) {
        this.bioChemSimilarity = add(this.bioChemSimilarity, bioChemSimilarity);
    }

    private List<DefinedTerm> biologicalRole;

    /**
     * A role played by the BioChemEntity within a biological context.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public List<DefinedTerm> getBiologicalRoleList() {
        return biologicalRole;
    }

    /**
     * A role played by the BioChemEntity within a biological context.
     *
     * @return {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public DefinedTerm getBiologicalRole() {
        return getFirst(biologicalRole);
    }

    /**
     * A role played by the BioChemEntity within a biological context.
     *
     * @param biologicalRole DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     */
    @Override
    public void addBiologicalRole(DefinedTerm biologicalRole) {
        this.biologicalRole = add(this.biologicalRole, biologicalRole);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> List<T> getMainEntityOfPageList() {
        return (List<T>) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) getFirst(mainEntityOfPage);
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void addMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void addMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }

    private List<Text> alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAlternateNameList() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return getFirst(alternateName);
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void addAlternateName(Text alternateName) {
        this.alternateName = add(this.alternateName, alternateName);
    }

    private List<Text> name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getNameList() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return getFirst(name);
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     */
    @Override
    public void addName(Text name) {
        this.name = add(this.name, name);
    }

    private List<Action> potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public List<Action> getPotentialActionList() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return getFirst(potentialAction);
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void addPotentialAction(Action potentialAction) {
        this.potentialAction = add(this.potentialAction, potentialAction);
    }

    @JsonLdFieldTypes({ URL.class, ImageObject.class })
    private List<Object> image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> List<T> getImageList() {
        return (List<T>) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) getFirst(image);
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void addImage(URL image) {
        this.image = add(this.image, image);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void addImage(ImageObject image) {
        this.image = add(this.image, image);
    }

    private List<URL> url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getUrlList() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return getFirst(url);
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void addUrl(URL url) {
        this.url = add(this.url, url);
    }

    private List<Text> description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getDescriptionList() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return getFirst(description);
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void addDescription(Text description) {
        this.description = add(this.description, description);
    }

    @JsonLdFieldTypes({ Event.class, CreativeWork.class })
    private List<Object> subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> List<T> getSubjectOfList() {
        return (List<T>) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) getFirst(subjectOf);
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(Event subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }

    private List<URL> additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getAdditionalTypeList() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return getFirst(additionalType);
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     */
    @Override
    public void addAdditionalType(URL additionalType) {
        this.additionalType = add(this.additionalType, additionalType);
    }

    private List<Text> disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getDisambiguatingDescriptionList() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return getFirst(disambiguatingDescription);
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     */
    @Override
    public void addDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = add(this.disambiguatingDescription, disambiguatingDescription);
    }

    private List<URL> sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getSameAsList() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return getFirst(sameAs);
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void addSameAs(URL sameAs) {
        this.sameAs = add(this.sameAs, sameAs);
    }

    @JsonLdFieldTypes({ URL.class, Text.class, PropertyValue.class })
    private List<Object> identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> List<T> getIdentifierList() {
        return (List<T>) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) getFirst(identifier);
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void addIdentifier(URL identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void addIdentifier(Text identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void addIdentifier(PropertyValue identifier) {
        this.identifier = add(this.identifier, identifier);
    }
}
