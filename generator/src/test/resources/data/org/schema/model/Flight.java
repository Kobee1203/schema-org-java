/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Distance;
import org.schema.model.datatype.Text;
import org.schema.model.datatype.DateTime;
import org.schema.model.Vehicle;
import org.schema.model.Organization;
import org.schema.model.Person;
import org.schema.model.Airport;
import org.schema.model.Duration;
import org.schema.model.BoardingPolicyType;

/**
 * An airline flight.
 *
 * @see <a href="https://schema.org/Flight">https://schema.org/Flight</a>
 */
public interface Flight extends Trip {

    /**
     * The distance of the flight.
     *
     * @return {@link Distance} or {@link Text}
     */
    <T> T getFlightDistance();

    /**
     * The distance of the flight.
     *
     * @param fFlightDistance Distance value to set.
     */
    void setFlightDistance(Distance fFlightDistance);
    /**
     * The distance of the flight.
     *
     * @param fFlightDistance Text value to set.
     */
    void setFlightDistance(Text fFlightDistance);
    /**
     * The distance of the flight.
     *
     * @param fFlightDistance java.lang.String value to set.
     */
    void setFlightDistance(java.lang.String fFlightDistance);

    /**
     * The time when a passenger can check into the flight online.
     *
     * @return {@link DateTime}
     */
    DateTime getWebCheckinTime();

    /**
     * The time when a passenger can check into the flight online.
     *
     * @param fWebCheckinTime DateTime value to set.
     */
    void setWebCheckinTime(DateTime fWebCheckinTime);
    /**
     * The time when a passenger can check into the flight online.
     *
     * @param fWebCheckinTime java.time.LocalDateTime value to set.
     */
    void setWebCheckinTime(java.time.LocalDateTime fWebCheckinTime);

    /**
     * The kind of aircraft (e.g., "Boeing 747").
     *
     * @return {@link Vehicle} or {@link Text}
     */
    <T> T getAircraft();

    /**
     * The kind of aircraft (e.g., "Boeing 747").
     *
     * @param fAircraft Vehicle value to set.
     */
    void setAircraft(Vehicle fAircraft);
    /**
     * The kind of aircraft (e.g., "Boeing 747").
     *
     * @param fAircraft Text value to set.
     */
    void setAircraft(Text fAircraft);
    /**
     * The kind of aircraft (e.g., "Boeing 747").
     *
     * @param fAircraft java.lang.String value to set.
     */
    void setAircraft(java.lang.String fAircraft);

    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> T getSeller();

    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @param fSeller Organization value to set.
     */
    void setSeller(Organization fSeller);
    /**
     * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
     *
     * @param fSeller Person value to set.
     */
    void setSeller(Person fSeller);

    /**
     * The airport where the flight terminates.
     *
     * @return {@link Airport}
     */
    Airport getArrivalAirport();

    /**
     * The airport where the flight terminates.
     *
     * @param fArrivalAirport Airport value to set.
     */
    void setArrivalAirport(Airport fArrivalAirport);

    /**
     * Identifier of the flight's arrival terminal.
     *
     * @return {@link Text}
     */
    Text getArrivalTerminal();

    /**
     * Identifier of the flight's arrival terminal.
     *
     * @param fArrivalTerminal Text value to set.
     */
    void setArrivalTerminal(Text fArrivalTerminal);
    /**
     * Identifier of the flight's arrival terminal.
     *
     * @param fArrivalTerminal java.lang.String value to set.
     */
    void setArrivalTerminal(java.lang.String fArrivalTerminal);

    /**
     * The airport where the flight originates.
     *
     * @return {@link Airport}
     */
    Airport getDepartureAirport();

    /**
     * The airport where the flight originates.
     *
     * @param fDepartureAirport Airport value to set.
     */
    void setDepartureAirport(Airport fDepartureAirport);

    /**
     * Identifier of the flight's arrival gate.
     *
     * @return {@link Text}
     */
    Text getArrivalGate();

    /**
     * Identifier of the flight's arrival gate.
     *
     * @param fArrivalGate Text value to set.
     */
    void setArrivalGate(Text fArrivalGate);
    /**
     * Identifier of the flight's arrival gate.
     *
     * @param fArrivalGate java.lang.String value to set.
     */
    void setArrivalGate(java.lang.String fArrivalGate);

    /**
     * Identifier of the flight's departure terminal.
     *
     * @return {@link Text}
     */
    Text getDepartureTerminal();

    /**
     * Identifier of the flight's departure terminal.
     *
     * @param fDepartureTerminal Text value to set.
     */
    void setDepartureTerminal(Text fDepartureTerminal);
    /**
     * Identifier of the flight's departure terminal.
     *
     * @param fDepartureTerminal java.lang.String value to set.
     */
    void setDepartureTerminal(java.lang.String fDepartureTerminal);

    /**
     * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
     *
     * @return {@link Organization}
     */
    Organization getCarrier();

    /**
     * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
     *
     * @param fCarrier Organization value to set.
     */
    void setCarrier(Organization fCarrier);

    /**
     * The estimated time the flight will take.
     *
     * @return {@link Text} or {@link Duration}
     */
    <T> T getEstimatedFlightDuration();

    /**
     * The estimated time the flight will take.
     *
     * @param fEstimatedFlightDuration Text value to set.
     */
    void setEstimatedFlightDuration(Text fEstimatedFlightDuration);
    /**
     * The estimated time the flight will take.
     *
     * @param fEstimatedFlightDuration java.lang.String value to set.
     */
    void setEstimatedFlightDuration(java.lang.String fEstimatedFlightDuration);
    /**
     * The estimated time the flight will take.
     *
     * @param fEstimatedFlightDuration Duration value to set.
     */
    void setEstimatedFlightDuration(Duration fEstimatedFlightDuration);

    /**
     * Identifier of the flight's departure gate.
     *
     * @return {@link Text}
     */
    Text getDepartureGate();

    /**
     * Identifier of the flight's departure gate.
     *
     * @param fDepartureGate Text value to set.
     */
    void setDepartureGate(Text fDepartureGate);
    /**
     * Identifier of the flight's departure gate.
     *
     * @param fDepartureGate java.lang.String value to set.
     */
    void setDepartureGate(java.lang.String fDepartureGate);

    /**
     * The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
     *
     * @return {@link Text}
     */
    Text getFlightNumber();

    /**
     * The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
     *
     * @param fFlightNumber Text value to set.
     */
    void setFlightNumber(Text fFlightNumber);
    /**
     * The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
     *
     * @param fFlightNumber java.lang.String value to set.
     */
    void setFlightNumber(java.lang.String fFlightNumber);

    /**
     * Description of the meals that will be provided or available for purchase.
     *
     * @return {@link Text}
     */
    Text getMealService();

    /**
     * Description of the meals that will be provided or available for purchase.
     *
     * @param fMealService Text value to set.
     */
    void setMealService(Text fMealService);
    /**
     * Description of the meals that will be provided or available for purchase.
     *
     * @param fMealService java.lang.String value to set.
     */
    void setMealService(java.lang.String fMealService);

    /**
     * The type of boarding policy used by the airline (e.g. zone-based or group-based).
     *
     * @return {@link BoardingPolicyType}
     */
    BoardingPolicyType getBoardingPolicy();

    /**
     * The type of boarding policy used by the airline (e.g. zone-based or group-based).
     *
     * @param fBoardingPolicy BoardingPolicyType value to set.
     */
    void setBoardingPolicy(BoardingPolicyType fBoardingPolicy);
}
