/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Person;
import org.schema.model.datatype.Text;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.datatype.URL;
import org.schema.model.Thing;
import org.schema.model.Event;
import org.schema.model.MonetaryAmount;
import org.schema.model.PriceSpecification;
import org.schema.model.Place;
import org.schema.model.ContactPoint;
import org.schema.model.Grant;
import org.schema.model.Distance;
import org.schema.model.QuantitativeValue;
import org.schema.model.Occupation;
import org.schema.model.GenderType;
import org.schema.model.DefinedTerm;
import org.schema.model.datatype.Date;
import org.schema.model.Organization;
import org.schema.model.Offer;
import org.schema.model.InteractionCounter;
import org.schema.model.PostalAddress;
import org.schema.model.ProgramMembership;
import org.schema.model.CreativeWork;
import org.schema.model.Brand;
import org.schema.model.EducationalOrganization;
import org.schema.model.Language;
import org.schema.model.Demand;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.OfferCatalog;
import org.schema.model.Country;

/**
 * A person (alive, dead, undead, or fictional).
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews</a>
 * @see <a href="https://schema.org/Person">https://schema.org/Person</a>
 */
public interface Person extends Thing {

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    Person getSpouse();

    /**
     * The person's spouse.
     *
     */
    void setSpouse(Person fSpouse);

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     */
    Text getAdditionalName();

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     */
    void setAdditionalName(Text fAdditionalName);

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    EducationalOccupationalCredential getHasCredential();

    /**
     * A credential awarded to the Person or Organization.
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    void setHasCredential(EducationalOccupationalCredential fHasCredential);

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    Text getTelephone();

    /**
     * The telephone number.
     *
     */
    void setTelephone(Text fTelephone);

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    Text getHonorificPrefix();

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     */
    void setHonorificPrefix(Text fHonorificPrefix);

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    Person getParents();

    /**
     * A parents of the person.
     *
     */
    void setParents(Person fParents);

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    Text getFamilyName();

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     */
    void setFamilyName(Text fFamilyName);

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    Text getGivenName();

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     */
    void setGivenName(Text fGivenName);

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    <T> T getKnowsAbout();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    void setKnowsAbout(Object fKnowsAbout);

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    Event getPerformerIn();

    /**
     * Event that this person is a performer or participant in.
     *
     */
    void setPerformerIn(Event fPerformerIn);

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    <T> T getNetWorth();

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     */
    void setNetWorth(Object fNetWorth);

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    Text getAward();

    /**
     * An award won by or for this item.
     *
     */
    void setAward(Text fAward);

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> T getWorkLocation();

    /**
     * A contact location for a person's place of work.
     *
     */
    void setWorkLocation(Object fWorkLocation);

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @return {@link Text}
     */
    Text getHonorificSuffix();

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     */
    void setHonorificSuffix(Text fHonorificSuffix);

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    Place getDeathPlace();

    /**
     * The place where the person died.
     *
     */
    void setDeathPlace(Place fDeathPlace);

    /**
     * A contact location for a person's residence.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> T getHomeLocation();

    /**
     * A contact location for a person's residence.
     *
     */
    void setHomeLocation(Object fHomeLocation);

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    Grant getFunding();

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    void setFunding(Grant fFunding);

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getVatID();

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setVatID(Text fVatID);

    /**
     * The height of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    <T> T getHeight();

    /**
     * The height of the item.
     *
     */
    void setHeight(Object fHeight);

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getGlobalLocationNumber();

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setGlobalLocationNumber(Text fGlobalLocationNumber);

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    ContactPoint getContactPoints();

    /**
     * A contact point for a person or organization.
     *
     */
    void setContactPoints(ContactPoint fContactPoints);

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    Occupation getHasOccupation();

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    void setHasOccupation(Occupation fHasOccupation);

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    <T> T getGender();

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    void setGender(Object fGender);

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    Person getParent();

    /**
     * A parent of this person.
     *
     */
    void setParent(Person fParent);

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    Text getAwards();

    /**
     * Awards won by or for this item.
     *
     */
    void setAwards(Text fAwards);

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    Person getSibling();

    /**
     * A sibling of the person.
     *
     */
    void setSibling(Person fSibling);

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link Text} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    <T> T getJobTitle();

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    void setJobTitle(Object fJobTitle);

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    Date getBirthDate();

    /**
     * Date of birth.
     *
     */
    void setBirthDate(Date fBirthDate);

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> T getFunder();

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     */
    void setFunder(Object fFunder);

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Offer getMakesOffer();

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setMakesOffer(Offer fMakesOffer);

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    Person getChildren();

    /**
     * A child of the person.
     *
     */
    void setChildren(Person fChildren);

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    Organization getWorksFor();

    /**
     * Organizations that the person works for.
     *
     */
    void setWorksFor(Organization fWorksFor);

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    Person getKnows();

    /**
     * The most generic bi-directional social/work relation.
     *
     */
    void setKnows(Person fKnows);

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    InteractionCounter getInteractionStatistic();

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    void setInteractionStatistic(InteractionCounter fInteractionStatistic);

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    <T> T getAddress();

    /**
     * Physical address of the item.
     *
     */
    void setAddress(Object fAddress);

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    <T> T getMemberOf();

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     */
    void setMemberOf(Object fMemberOf);

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    <T> T getPublishingPrinciples();

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     */
    void setPublishingPrinciples(Object fPublishingPrinciples);

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    Person getColleagues();

    /**
     * A colleague of the person.
     *
     */
    void setColleagues(Person fColleagues);

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    Date getDeathDate();

    /**
     * Date of death.
     *
     */
    void setDeathDate(Date fDeathDate);

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    Text getEmail();

    /**
     * Email address.
     *
     */
    void setEmail(Text fEmail);

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     */
    Organization getAffiliation();

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     */
    void setAffiliation(Organization fAffiliation);

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    Person getSiblings();

    /**
     * A sibling of the person.
     *
     */
    void setSiblings(Person fSiblings);

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    Place getBirthPlace();

    /**
     * The place where the person was born.
     *
     */
    void setBirthPlace(Place fBirthPlace);

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    <T> T getBrand();

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     */
    void setBrand(Object fBrand);

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> T getSponsor();

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     */
    void setSponsor(Object fSponsor);

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getNaics();

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setNaics(Text fNaics);

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    ContactPoint getContactPoint();

    /**
     * A contact point for a person or organization.
     *
     */
    void setContactPoint(ContactPoint fContactPoint);

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    Text getCallSign();

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    void setCallSign(Text fCallSign);

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getIsicV4();

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setIsicV4(Text fIsicV4);

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Place getHasPOS();

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setHasPOS(Place fHasPOS);

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link EducationalOrganization} or {@link Organization}
     */
    <T> T getAlumniOf();

    /**
     * An organization that the person is an alumni of.
     *
     */
    void setAlumniOf(Object fAlumniOf);

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getDuns();

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setDuns(Text fDuns);

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    QuantitativeValue getWeight();

    /**
     * The weight of the product or person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setWeight(QuantitativeValue fWeight);

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    <T> T getKnowsLanguage();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    void setKnowsLanguage(Object fKnowsLanguage);

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    Person getRelatedTo();

    /**
     * The most generic familial relation.
     *
     */
    void setRelatedTo(Person fRelatedTo);

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    <T> T getColleague();

    /**
     * A colleague of the person.
     *
     */
    void setColleague(Object fColleague);

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Demand getSeeks();

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setSeeks(Demand fSeeks);

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getTaxID();

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setTaxID(Text fTaxID);

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getOwns();

    /**
     * Products owned by the organization or person.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setOwns(Object fOwns);

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    OfferCatalog getHasOfferCatalog();

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     */
    void setHasOfferCatalog(OfferCatalog fHasOfferCatalog);

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    Person getFollows();

    /**
     * The most generic uni-directional social relation.
     *
     */
    void setFollows(Person fFollows);

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    Country getNationality();

    /**
     * Nationality of the person.
     *
     */
    void setNationality(Country fNationality);

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    Text getFaxNumber();

    /**
     * The fax number.
     *
     */
    void setFaxNumber(Text fFaxNumber);
}
