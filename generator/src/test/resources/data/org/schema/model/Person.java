/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.Person;
import org.schema.model.datatype.Text;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.datatype.URL;
import org.schema.model.Thing;
import org.schema.model.Event;
import org.schema.model.MonetaryAmount;
import org.schema.model.PriceSpecification;
import org.schema.model.Place;
import org.schema.model.ContactPoint;
import org.schema.model.Grant;
import org.schema.model.Distance;
import org.schema.model.QuantitativeValue;
import org.schema.model.Occupation;
import org.schema.model.GenderType;
import org.schema.model.DefinedTerm;
import org.schema.model.datatype.Date;
import org.schema.model.Organization;
import org.schema.model.Offer;
import org.schema.model.InteractionCounter;
import org.schema.model.PostalAddress;
import org.schema.model.ProgramMembership;
import org.schema.model.CreativeWork;
import org.schema.model.Brand;
import org.schema.model.EducationalOrganization;
import org.schema.model.Language;
import org.schema.model.Demand;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.OfferCatalog;
import org.schema.model.Country;

/**
 * A person (alive, dead, undead, or fictional).
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews</a>
 * @see <a href="https://schema.org/Person">https://schema.org/Person</a>
 */
public interface Person extends Thing {

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    List<Person> getSpouseList();

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    Person getSpouse();

    /**
     * The person's spouse.
     *
     * @param spouse Person value to set.
     */
    void addSpouse(Person spouse);

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     */
    List<Text> getAdditionalNameList();

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     */
    Text getAdditionalName();

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @param additionalName Text value to set.
     */
    void addAdditionalName(Text additionalName);

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    List<EducationalOccupationalCredential> getHasCredentialList();

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    EducationalOccupationalCredential getHasCredential();

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param hasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    void addHasCredential(EducationalOccupationalCredential hasCredential);

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    List<Text> getTelephoneList();

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    Text getTelephone();

    /**
     * The telephone number.
     *
     * @param telephone Text value to set.
     */
    void addTelephone(Text telephone);

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    List<Text> getHonorificPrefixList();

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    Text getHonorificPrefix();

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @param honorificPrefix Text value to set.
     */
    void addHonorificPrefix(Text honorificPrefix);

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    List<Person> getParentsList();

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    Person getParents();

    /**
     * A parents of the person.
     *
     * @param parents Person value to set.
     */
    void addParents(Person parents);

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    List<Text> getFamilyNameList();

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    Text getFamilyName();

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @param familyName Text value to set.
     */
    void addFamilyName(Text familyName);

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    List<Text> getGivenNameList();

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    Text getGivenName();

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @param givenName Text value to set.
     */
    void addGivenName(Text givenName);

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    <T> List<T> getKnowsAboutList();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    <T> T getKnowsAbout();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    void addKnowsAbout(URL knowsAbout);
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    void addKnowsAbout(Text knowsAbout);
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    void addKnowsAbout(Thing knowsAbout);

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    List<Event> getPerformerInList();

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    Event getPerformerIn();

    /**
     * Event that this person is a performer or participant in.
     *
     * @param performerIn Event value to set.
     */
    void addPerformerIn(Event performerIn);

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    <T> List<T> getNetWorthList();

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    <T> T getNetWorth();

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth MonetaryAmount value to set.
     */
    void addNetWorth(MonetaryAmount netWorth);
    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth PriceSpecification value to set.
     */
    void addNetWorth(PriceSpecification netWorth);

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    List<Text> getAwardList();

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    Text getAward();

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    void addAward(Text award);

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> List<T> getWorkLocationList();

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> T getWorkLocation();

    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation Place value to set.
     */
    void addWorkLocation(Place workLocation);
    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation ContactPoint value to set.
     */
    void addWorkLocation(ContactPoint workLocation);

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @return {@link Text}
     */
    List<Text> getHonorificSuffixList();

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @return {@link Text}
     */
    Text getHonorificSuffix();

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @param honorificSuffix Text value to set.
     */
    void addHonorificSuffix(Text honorificSuffix);

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    List<Place> getDeathPlaceList();

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    Place getDeathPlace();

    /**
     * The place where the person died.
     *
     * @param deathPlace Place value to set.
     */
    void addDeathPlace(Place deathPlace);

    /**
     * A contact location for a person's residence.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> List<T> getHomeLocationList();

    /**
     * A contact location for a person's residence.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    <T> T getHomeLocation();

    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation Place value to set.
     */
    void addHomeLocation(Place homeLocation);
    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation ContactPoint value to set.
     */
    void addHomeLocation(ContactPoint homeLocation);

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    List<Grant> getFundingList();

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    Grant getFunding();

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    void addFunding(Grant funding);

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getVatIDList();

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getVatID();

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param vatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addVatID(Text vatID);

    /**
     * The height of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    <T> List<T> getHeightList();

    /**
     * The height of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    <T> T getHeight();

    /**
     * The height of the item.
     *
     * @param height Distance value to set.
     */
    void addHeight(Distance height);
    /**
     * The height of the item.
     *
     * @param height QuantitativeValue value to set.
     */
    void addHeight(QuantitativeValue height);

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getGlobalLocationNumberList();

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getGlobalLocationNumber();

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param globalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addGlobalLocationNumber(Text globalLocationNumber);

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    List<ContactPoint> getContactPointsList();

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    ContactPoint getContactPoints();

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoints ContactPoint value to set.
     */
    void addContactPoints(ContactPoint contactPoints);

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    List<Occupation> getHasOccupationList();

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    Occupation getHasOccupation();

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @param hasOccupation Occupation value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    void addHasOccupation(Occupation hasOccupation);

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    <T> List<T> getGenderList();

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    <T> T getGender();

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender GenderType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    void addGender(GenderType gender);
    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    void addGender(Text gender);

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    List<Person> getParentList();

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    Person getParent();

    /**
     * A parent of this person.
     *
     * @param parent Person value to set.
     */
    void addParent(Person parent);

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    List<Text> getAwardsList();

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    Text getAwards();

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    void addAwards(Text awards);

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    List<Person> getSiblingList();

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    Person getSibling();

    /**
     * A sibling of the person.
     *
     * @param sibling Person value to set.
     */
    void addSibling(Person sibling);

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link Text} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    <T> List<T> getJobTitleList();

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link Text} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    <T> T getJobTitle();

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    void addJobTitle(Text jobTitle);
    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    void addJobTitle(DefinedTerm jobTitle);

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    List<Date> getBirthDateList();

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    Date getBirthDate();

    /**
     * Date of birth.
     *
     * @param birthDate Date value to set.
     */
    void addBirthDate(Date birthDate);

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> List<T> getFunderList();

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> T getFunder();

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Organization value to set.
     */
    void addFunder(Organization funder);
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Person value to set.
     */
    void addFunder(Person funder);

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Offer> getMakesOfferList();

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Offer getMakesOffer();

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param makesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addMakesOffer(Offer makesOffer);

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    List<Person> getChildrenList();

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    Person getChildren();

    /**
     * A child of the person.
     *
     * @param children Person value to set.
     */
    void addChildren(Person children);

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    List<Organization> getWorksForList();

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    Organization getWorksFor();

    /**
     * Organizations that the person works for.
     *
     * @param worksFor Organization value to set.
     */
    void addWorksFor(Organization worksFor);

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    List<Person> getKnowsList();

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    Person getKnows();

    /**
     * The most generic bi-directional social/work relation.
     *
     * @param knows Person value to set.
     */
    void addKnows(Person knows);

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    List<InteractionCounter> getInteractionStatisticList();

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    InteractionCounter getInteractionStatistic();

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param interactionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    void addInteractionStatistic(InteractionCounter interactionStatistic);

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    <T> List<T> getAddressList();

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    <T> T getAddress();

    /**
     * Physical address of the item.
     *
     * @param address Text value to set.
     */
    void addAddress(Text address);
    /**
     * Physical address of the item.
     *
     * @param address PostalAddress value to set.
     */
    void addAddress(PostalAddress address);

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    <T> List<T> getMemberOfList();

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    <T> T getMemberOf();

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf ProgramMembership value to set.
     */
    void addMemberOf(ProgramMembership memberOf);
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf Organization value to set.
     */
    void addMemberOf(Organization memberOf);

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    <T> List<T> getPublishingPrinciplesList();

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    <T> T getPublishingPrinciples();

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples URL value to set.
     */
    void addPublishingPrinciples(URL publishingPrinciples);
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples CreativeWork value to set.
     */
    void addPublishingPrinciples(CreativeWork publishingPrinciples);

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    List<Person> getColleaguesList();

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    Person getColleagues();

    /**
     * A colleague of the person.
     *
     * @param colleagues Person value to set.
     */
    void addColleagues(Person colleagues);

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    List<Date> getDeathDateList();

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    Date getDeathDate();

    /**
     * Date of death.
     *
     * @param deathDate Date value to set.
     */
    void addDeathDate(Date deathDate);

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    List<Text> getEmailList();

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    Text getEmail();

    /**
     * Email address.
     *
     * @param email Text value to set.
     */
    void addEmail(Text email);

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     */
    List<Organization> getAffiliationList();

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     */
    Organization getAffiliation();

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @param affiliation Organization value to set.
     */
    void addAffiliation(Organization affiliation);

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    List<Person> getSiblingsList();

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    Person getSiblings();

    /**
     * A sibling of the person.
     *
     * @param siblings Person value to set.
     */
    void addSiblings(Person siblings);

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    List<Place> getBirthPlaceList();

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    Place getBirthPlace();

    /**
     * The place where the person was born.
     *
     * @param birthPlace Place value to set.
     */
    void addBirthPlace(Place birthPlace);

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    <T> List<T> getBrandList();

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    <T> T getBrand();

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    void addBrand(Organization brand);
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    void addBrand(Brand brand);

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> List<T> getSponsorList();

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    <T> T getSponsor();

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Organization value to set.
     */
    void addSponsor(Organization sponsor);
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Person value to set.
     */
    void addSponsor(Person sponsor);

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getNaicsList();

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getNaics();

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param naics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addNaics(Text naics);

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    List<ContactPoint> getContactPointList();

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    ContactPoint getContactPoint();

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoint ContactPoint value to set.
     */
    void addContactPoint(ContactPoint contactPoint);

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    List<Text> getCallSignList();

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    Text getCallSign();

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @param callSign Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    void addCallSign(Text callSign);

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getIsicV4List();

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getIsicV4();

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param isicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addIsicV4(Text isicV4);

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Place> getHasPOSList();

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Place getHasPOS();

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param hasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addHasPOS(Place hasPOS);

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link EducationalOrganization} or {@link Organization}
     */
    <T> List<T> getAlumniOfList();

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link EducationalOrganization} or {@link Organization}
     */
    <T> T getAlumniOf();

    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf EducationalOrganization value to set.
     */
    void addAlumniOf(EducationalOrganization alumniOf);
    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf Organization value to set.
     */
    void addAlumniOf(Organization alumniOf);

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getDunsList();

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getDuns();

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param duns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addDuns(Text duns);

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<QuantitativeValue> getWeightList();

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    QuantitativeValue getWeight();

    /**
     * The weight of the product or person.
     *
     * @param weight QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addWeight(QuantitativeValue weight);

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    <T> List<T> getKnowsLanguageList();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    <T> T getKnowsLanguage();

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    void addKnowsLanguage(Language knowsLanguage);
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    void addKnowsLanguage(Text knowsLanguage);

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    List<Person> getRelatedToList();

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    Person getRelatedTo();

    /**
     * The most generic familial relation.
     *
     * @param relatedTo Person value to set.
     */
    void addRelatedTo(Person relatedTo);

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    <T> List<T> getColleagueList();

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    <T> T getColleague();

    /**
     * A colleague of the person.
     *
     * @param colleague Person value to set.
     */
    void addColleague(Person colleague);
    /**
     * A colleague of the person.
     *
     * @param colleague URL value to set.
     */
    void addColleague(URL colleague);

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Demand> getSeeksList();

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Demand getSeeks();

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param seeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addSeeks(Demand seeks);

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Text> getTaxIDList();

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Text getTaxID();

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param taxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addTaxID(Text taxID);

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> List<T> getOwnsList();

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getOwns();

    /**
     * Products owned by the organization or person.
     *
     * @param owns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addOwns(Product owns);
    /**
     * Products owned by the organization or person.
     *
     * @param owns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addOwns(OwnershipInfo owns);

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    List<OfferCatalog> getHasOfferCatalogList();

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    OfferCatalog getHasOfferCatalog();

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param hasOfferCatalog OfferCatalog value to set.
     */
    void addHasOfferCatalog(OfferCatalog hasOfferCatalog);

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    List<Person> getFollowsList();

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    Person getFollows();

    /**
     * The most generic uni-directional social relation.
     *
     * @param follows Person value to set.
     */
    void addFollows(Person follows);

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    List<Country> getNationalityList();

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    Country getNationality();

    /**
     * Nationality of the person.
     *
     * @param nationality Country value to set.
     */
    void addNationality(Country nationality);

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    List<Text> getFaxNumberList();

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    Text getFaxNumber();

    /**
     * The fax number.
     *
     * @param faxNumber Text value to set.
     */
    void addFaxNumber(Text faxNumber);
}
