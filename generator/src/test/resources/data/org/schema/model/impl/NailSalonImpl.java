/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.Organization;
import org.schema.model.datatype.Text;
import org.schema.model.datatype.URL;
import org.schema.model.AboutPage;
import org.schema.model.CreativeWork;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.Person;
import org.schema.model.Review;
import org.schema.model.Thing;
import org.schema.model.datatype.Date;
import org.schema.model.Grant;
import org.schema.model.DefinedTerm;
import org.schema.model.ContactPoint;
import org.schema.model.QuantitativeValue;
import org.schema.model.Offer;
import org.schema.model.AggregateRating;
import org.schema.model.InteractionCounter;
import org.schema.model.PostalAddress;
import org.schema.model.Place;
import org.schema.model.VirtualLocation;
import org.schema.model.ProgramMembership;
import org.schema.model.Article;
import org.schema.model.NonprofitType;
import org.schema.model.Brand;
import org.schema.model.ImageObject;
import org.schema.model.GeoShape;
import org.schema.model.AdministrativeArea;
import org.schema.model.MerchantReturnPolicy;
import org.schema.model.Language;
import org.schema.model.Demand;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.OfferCatalog;
import org.schema.model.Event;
import org.schema.model.Action;
import org.schema.model.PropertyValue;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import org.schema.model.GeospatialGeometry;
import org.schema.model.datatype.Integer;
import org.schema.model.datatype.Boolean;
import org.schema.model.datatype.Number;
import org.schema.model.LocationFeatureSpecification;
import org.schema.model.Photograph;
import org.schema.model.OpeningHoursSpecification;
import org.schema.model.Map;
import org.schema.model.GeoCoordinates;
import org.schema.model.LocalBusiness;
import org.schema.model.HealthAndBeautyBusiness;
import org.schema.model.NailSalon;

/**
 * A nail salon.
 *
 * @see <a href="https://schema.org/NailSalon">https://schema.org/NailSalon</a>
 */
@JsonLdTypeName("NailSalon")
public class NailSalonImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements NailSalon {

    private Organization branchOf;

    /**
     * The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)[[branch]].
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getBranchOf() {
        return branchOf;
    }

    /**
     * The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)[[branch]].
     *
     * @param branchOf Organization value to set.
     */
    @Override
    public void setBranchOf(Organization branchOf) {
        this.branchOf = branchOf;
    }

    private Text openingHours;

    /**
     * The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.<br/>* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. <br/>* Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.<br/>* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
     *
     * @return {@link Text}
     */
    @Override
    public Text getOpeningHours() {
        return openingHours;
    }

    /**
     * The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.<br/>* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. <br/>* Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.<br/>* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
     *
     * @param openingHours Text value to set.
     */
    @Override
    public void setOpeningHours(Text openingHours) {
        this.openingHours = openingHours;
    }

    private Text priceRange;

    /**
     * The price range of the business, for example ```$$$```.
     *
     * @return {@link Text}
     */
    @Override
    public Text getPriceRange() {
        return priceRange;
    }

    /**
     * The price range of the business, for example ```$$$```.
     *
     * @param priceRange Text value to set.
     */
    @Override
    public void setPriceRange(Text priceRange) {
        this.priceRange = priceRange;
    }

    private Text paymentAccepted;

    /**
     * Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
     *
     * @return {@link Text}
     */
    @Override
    public Text getPaymentAccepted() {
        return paymentAccepted;
    }

    /**
     * Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
     *
     * @param paymentAccepted Text value to set.
     */
    @Override
    public void setPaymentAccepted(Text paymentAccepted) {
        this.paymentAccepted = paymentAccepted;
    }

    private Text currenciesAccepted;

    /**
     * The currency accepted.<br/><br/>Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. "BTC"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. "Ithaca HOUR".
     *
     * @return {@link Text}
     */
    @Override
    public Text getCurrenciesAccepted() {
        return currenciesAccepted;
    }

    /**
     * The currency accepted.<br/><br/>Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. "BTC"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. "Ithaca HOUR".
     *
     * @param currenciesAccepted Text value to set.
     */
    @Override
    public void setCurrenciesAccepted(Text currenciesAccepted) {
        this.currenciesAccepted = currenciesAccepted;
    }

    private Object ownershipFundingInfo;

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @return {@link URL} or {@link AboutPage} or {@link Text} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getOwnershipFundingInfo() {
        return (T) ownershipFundingInfo;
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setOwnershipFundingInfo(URL ownershipFundingInfo) {
        this.ownershipFundingInfo = ownershipFundingInfo;
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo AboutPage value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setOwnershipFundingInfo(AboutPage ownershipFundingInfo) {
        this.ownershipFundingInfo = ownershipFundingInfo;
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setOwnershipFundingInfo(Text ownershipFundingInfo) {
        this.ownershipFundingInfo = ownershipFundingInfo;
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setOwnershipFundingInfo(CreativeWork ownershipFundingInfo) {
        this.ownershipFundingInfo = ownershipFundingInfo;
    }

    private EducationalOccupationalCredential hasCredential;

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public EducationalOccupationalCredential getHasCredential() {
        return hasCredential;
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param hasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void setHasCredential(EducationalOccupationalCredential hasCredential) {
        this.hasCredential = hasCredential;
    }

    private Person founders;

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFounders() {
        return founders;
    }

    /**
     * A person who founded this organization.
     *
     * @param founders Person value to set.
     */
    @Override
    public void setFounders(Person founders) {
        this.founders = founders;
    }

    private Text telephone;

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTelephone() {
        return telephone;
    }

    /**
     * The telephone number.
     *
     * @param telephone Text value to set.
     */
    @Override
    public void setTelephone(Text telephone) {
        this.telephone = telephone;
    }

    private Review review;

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReview() {
        return review;
    }

    /**
     * A review of the item.
     *
     * @param review Review value to set.
     */
    @Override
    public void setReview(Review review) {
        this.review = review;
    }

    private Object knowsAbout;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> T getKnowsAbout() {
        return (T) knowsAbout;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(URL knowsAbout) {
        this.knowsAbout = knowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Text knowsAbout) {
        this.knowsAbout = knowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Thing knowsAbout) {
        this.knowsAbout = knowsAbout;
    }

    private Text award;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return award;
    }

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    @Override
    public void setAward(Text award) {
        this.award = award;
    }

    private Object member;

    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getMember() {
        return (T) member;
    }

    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @param member Organization value to set.
     */
    @Override
    public void setMember(Organization member) {
        this.member = member;
    }
    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @param member Person value to set.
     */
    @Override
    public void setMember(Person member) {
        this.member = member;
    }

    private Person employee;

    /**
     * Someone working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getEmployee() {
        return employee;
    }

    /**
     * Someone working for this organization.
     *
     * @param employee Person value to set.
     */
    @Override
    public void setEmployee(Person employee) {
        this.employee = employee;
    }

    private Date dissolutionDate;

    /**
     * The date that this organization was dissolved.
     *
     * @return {@link Date}
     */
    @Override
    public Date getDissolutionDate() {
        return dissolutionDate;
    }

    /**
     * The date that this organization was dissolved.
     *
     * @param dissolutionDate Date value to set.
     */
    @Override
    public void setDissolutionDate(Date dissolutionDate) {
        this.dissolutionDate = dissolutionDate;
    }

    private Grant funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public Grant getFunding() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setFunding(Grant funding) {
        this.funding = funding;
    }

    private Text vatID;

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getVatID() {
        return vatID;
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param vatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setVatID(Text vatID) {
        this.vatID = vatID;
    }

    private Text globalLocationNumber;

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getGlobalLocationNumber() {
        return globalLocationNumber;
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param globalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setGlobalLocationNumber(Text globalLocationNumber) {
        this.globalLocationNumber = globalLocationNumber;
    }

    private Object keywords;

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @return {@link DefinedTerm} or {@link Text} or {@link URL}
     */
    @Override
    public <T> T getKeywords() {
        return (T) keywords;
    }

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords DefinedTerm value to set.
     */
    @Override
    public void setKeywords(DefinedTerm keywords) {
        this.keywords = keywords;
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords Text value to set.
     */
    @Override
    public void setKeywords(Text keywords) {
        this.keywords = keywords;
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords URL value to set.
     */
    @Override
    public void setKeywords(URL keywords) {
        this.keywords = keywords;
    }

    private ContactPoint contactPoints;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoints() {
        return contactPoints;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoints ContactPoint value to set.
     */
    @Override
    public void setContactPoints(ContactPoint contactPoints) {
        this.contactPoints = contactPoints;
    }

    private Organization subOrganization;

    /**
     * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getSubOrganization() {
        return subOrganization;
    }

    /**
     * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
     *
     * @param subOrganization Organization value to set.
     */
    @Override
    public void setSubOrganization(Organization subOrganization) {
        this.subOrganization = subOrganization;
    }

    private Text awards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return awards;
    }

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    @Override
    public void setAwards(Text awards) {
        this.awards = awards;
    }

    private QuantitativeValue numberOfEmployees;

    /**
     * The number of employees in an organization e.g. business.
     *
     * @return {@link QuantitativeValue}
     */
    @Override
    public QuantitativeValue getNumberOfEmployees() {
        return numberOfEmployees;
    }

    /**
     * The number of employees in an organization e.g. business.
     *
     * @param numberOfEmployees QuantitativeValue value to set.
     */
    @Override
    public void setNumberOfEmployees(QuantitativeValue numberOfEmployees) {
        this.numberOfEmployees = numberOfEmployees;
    }

    private Object funder;

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getFunder() {
        return (T) funder;
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Organization value to set.
     */
    @Override
    public void setFunder(Organization funder) {
        this.funder = funder;
    }
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Person value to set.
     */
    @Override
    public void setFunder(Person funder) {
        this.funder = funder;
    }

    private Offer makesOffer;

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Offer getMakesOffer() {
        return makesOffer;
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param makesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setMakesOffer(Offer makesOffer) {
        this.makesOffer = makesOffer;
    }

    private Text legalName;

    /**
     * The official name of the organization, e.g. the registered company name.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getLegalName() {
        return legalName;
    }

    /**
     * The official name of the organization, e.g. the registered company name.
     *
     * @param legalName Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setLegalName(Text legalName) {
        this.legalName = legalName;
    }

    private Object correctionsPolicy;

    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getCorrectionsPolicy() {
        return (T) correctionsPolicy;
    }

    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @param correctionsPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setCorrectionsPolicy(URL correctionsPolicy) {
        this.correctionsPolicy = correctionsPolicy;
    }
    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @param correctionsPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setCorrectionsPolicy(CreativeWork correctionsPolicy) {
        this.correctionsPolicy = correctionsPolicy;
    }

    private AggregateRating aggregateRating;

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    @Override
    public AggregateRating getAggregateRating() {
        return aggregateRating;
    }

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @param aggregateRating AggregateRating value to set.
     */
    @Override
    public void setAggregateRating(AggregateRating aggregateRating) {
        this.aggregateRating = aggregateRating;
    }

    private InteractionCounter interactionStatistic;

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public InteractionCounter getInteractionStatistic() {
        return interactionStatistic;
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param interactionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public void setInteractionStatistic(InteractionCounter interactionStatistic) {
        this.interactionStatistic = interactionStatistic;
    }

    private Object location;

    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @return {@link PostalAddress} or {@link Text} or {@link Place} or {@link VirtualLocation}
     */
    @Override
    public <T> T getLocation() {
        return (T) location;
    }

    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location PostalAddress value to set.
     */
    @Override
    public void setLocation(PostalAddress location) {
        this.location = location;
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location Text value to set.
     */
    @Override
    public void setLocation(Text location) {
        this.location = location;
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location Place value to set.
     */
    @Override
    public void setLocation(Place location) {
        this.location = location;
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location VirtualLocation value to set.
     */
    @Override
    public void setLocation(VirtualLocation location) {
        this.location = location;
    }

    private Object address;

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> T getAddress() {
        return (T) address;
    }

    /**
     * Physical address of the item.
     *
     * @param address Text value to set.
     */
    @Override
    public void setAddress(Text address) {
        this.address = address;
    }
    /**
     * Physical address of the item.
     *
     * @param address PostalAddress value to set.
     */
    @Override
    public void setAddress(PostalAddress address) {
        this.address = address;
    }

    private Object memberOf;

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    @Override
    public <T> T getMemberOf() {
        return (T) memberOf;
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf ProgramMembership value to set.
     */
    @Override
    public void setMemberOf(ProgramMembership memberOf) {
        this.memberOf = memberOf;
    }
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf Organization value to set.
     */
    @Override
    public void setMemberOf(Organization memberOf) {
        this.memberOf = memberOf;
    }

    private Object publishingPrinciples;

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getPublishingPrinciples() {
        return (T) publishingPrinciples;
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples URL value to set.
     */
    @Override
    public void setPublishingPrinciples(URL publishingPrinciples) {
        this.publishingPrinciples = publishingPrinciples;
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples CreativeWork value to set.
     */
    @Override
    public void setPublishingPrinciples(CreativeWork publishingPrinciples) {
        this.publishingPrinciples = publishingPrinciples;
    }

    private Object diversityStaffingReport;

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @return {@link URL} or {@link Article}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getDiversityStaffingReport() {
        return (T) diversityStaffingReport;
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @param diversityStaffingReport URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setDiversityStaffingReport(URL diversityStaffingReport) {
        this.diversityStaffingReport = diversityStaffingReport;
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @param diversityStaffingReport Article value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setDiversityStaffingReport(Article diversityStaffingReport) {
        this.diversityStaffingReport = diversityStaffingReport;
    }

    private Object diversityPolicy;

    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getDiversityPolicy() {
        return (T) diversityPolicy;
    }

    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @param diversityPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setDiversityPolicy(CreativeWork diversityPolicy) {
        this.diversityPolicy = diversityPolicy;
    }
    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @param diversityPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setDiversityPolicy(URL diversityPolicy) {
        this.diversityPolicy = diversityPolicy;
    }

    private Text email;

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public Text getEmail() {
        return email;
    }

    /**
     * Email address.
     *
     * @param email Text value to set.
     */
    @Override
    public void setEmail(Text email) {
        this.email = email;
    }

    private Person employees;

    /**
     * People working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getEmployees() {
        return employees;
    }

    /**
     * People working for this organization.
     *
     * @param employees Person value to set.
     */
    @Override
    public void setEmployees(Person employees) {
        this.employees = employees;
    }

    private NonprofitType nonprofitStatus;

    /**
     * nonprofit Status indicates the legal status of a non-profit organization in its primary place of business.
     *
     * @return {@link NonprofitType}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2543">https://github.com/schemaorg/schemaorg/issues/2543</a>
     */
    @Override
    public NonprofitType getNonprofitStatus() {
        return nonprofitStatus;
    }

    /**
     * nonprofit Status indicates the legal status of a non-profit organization in its primary place of business.
     *
     * @param nonprofitStatus NonprofitType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2543">https://github.com/schemaorg/schemaorg/issues/2543</a>
     */
    @Override
    public void setNonprofitStatus(NonprofitType nonprofitStatus) {
        this.nonprofitStatus = nonprofitStatus;
    }

    private Text slogan;

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getSlogan() {
        return slogan;
    }

    /**
     * A slogan or motto associated with the item.
     *
     * @param slogan Text value to set.
     */
    @Override
    public void setSlogan(Text slogan) {
        this.slogan = slogan;
    }

    private Object ethicsPolicy;

    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> T getEthicsPolicy() {
        return (T) ethicsPolicy;
    }

    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @param ethicsPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setEthicsPolicy(URL ethicsPolicy) {
        this.ethicsPolicy = ethicsPolicy;
    }
    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @param ethicsPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setEthicsPolicy(CreativeWork ethicsPolicy) {
        this.ethicsPolicy = ethicsPolicy;
    }

    private Object brand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    @Override
    public <T> T getBrand() {
        return (T) brand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    @Override
    public void setBrand(Organization brand) {
        this.brand = brand;
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    @Override
    public void setBrand(Brand brand) {
        this.brand = brand;
    }

    private Object sponsor;

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSponsor() {
        return (T) sponsor;
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Organization value to set.
     */
    @Override
    public void setSponsor(Organization sponsor) {
        this.sponsor = sponsor;
    }
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Person value to set.
     */
    @Override
    public void setSponsor(Person sponsor) {
        this.sponsor = sponsor;
    }

    private Object logo;

    /**
     * An associated logo.
     *
     * @return {@link URL} or {@link ImageObject}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getLogo() {
        return (T) logo;
    }

    /**
     * An associated logo.
     *
     * @param logo URL value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setLogo(URL logo) {
        this.logo = logo;
    }
    /**
     * An associated logo.
     *
     * @param logo ImageObject value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setLogo(ImageObject logo) {
        this.logo = logo;
    }

    private Object actionableFeedbackPolicy;

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> T getActionableFeedbackPolicy() {
        return (T) actionableFeedbackPolicy;
    }

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @param actionableFeedbackPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setActionableFeedbackPolicy(URL actionableFeedbackPolicy) {
        this.actionableFeedbackPolicy = actionableFeedbackPolicy;
    }
    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @param actionableFeedbackPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setActionableFeedbackPolicy(CreativeWork actionableFeedbackPolicy) {
        this.actionableFeedbackPolicy = actionableFeedbackPolicy;
    }

    private Text naics;

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getNaics() {
        return naics;
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param naics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setNaics(Text naics) {
        this.naics = naics;
    }

    private ContactPoint contactPoint;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoint() {
        return contactPoint;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoint ContactPoint value to set.
     */
    @Override
    public void setContactPoint(ContactPoint contactPoint) {
        this.contactPoint = contactPoint;
    }

    private Object serviceArea;

    /**
     * The geographic area where the service is provided.
     *
     * @return {@link GeoShape} or {@link AdministrativeArea} or {@link Place}
     */
    @Override
    public <T> T getServiceArea() {
        return (T) serviceArea;
    }

    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea GeoShape value to set.
     */
    @Override
    public void setServiceArea(GeoShape serviceArea) {
        this.serviceArea = serviceArea;
    }
    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea AdministrativeArea value to set.
     */
    @Override
    public void setServiceArea(AdministrativeArea serviceArea) {
        this.serviceArea = serviceArea;
    }
    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea Place value to set.
     */
    @Override
    public void setServiceArea(Place serviceArea) {
        this.serviceArea = serviceArea;
    }

    private Text isicV4;

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getIsicV4() {
        return isicV4;
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param isicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setIsicV4(Text isicV4) {
        this.isicV4 = isicV4;
    }

    private MerchantReturnPolicy hasMerchantReturnPolicy;

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @return {@link MerchantReturnPolicy}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public MerchantReturnPolicy getHasMerchantReturnPolicy() {
        return hasMerchantReturnPolicy;
    }

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @param hasMerchantReturnPolicy MerchantReturnPolicy value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public void setHasMerchantReturnPolicy(MerchantReturnPolicy hasMerchantReturnPolicy) {
        this.hasMerchantReturnPolicy = hasMerchantReturnPolicy;
    }

    private Place hasPOS;

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Place getHasPOS() {
        return hasPOS;
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param hasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setHasPOS(Place hasPOS) {
        this.hasPOS = hasPOS;
    }

    private Person founder;

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFounder() {
        return founder;
    }

    /**
     * A person who founded this organization.
     *
     * @param founder Person value to set.
     */
    @Override
    public void setFounder(Person founder) {
        this.founder = founder;
    }

    private Object unnamedSourcesPolicy;

    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> T getUnnamedSourcesPolicy() {
        return (T) unnamedSourcesPolicy;
    }

    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @param unnamedSourcesPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setUnnamedSourcesPolicy(CreativeWork unnamedSourcesPolicy) {
        this.unnamedSourcesPolicy = unnamedSourcesPolicy;
    }
    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @param unnamedSourcesPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void setUnnamedSourcesPolicy(URL unnamedSourcesPolicy) {
        this.unnamedSourcesPolicy = unnamedSourcesPolicy;
    }

    private Place foundingLocation;

    /**
     * The place where the Organization was founded.
     *
     * @return {@link Place}
     */
    @Override
    public Place getFoundingLocation() {
        return foundingLocation;
    }

    /**
     * The place where the Organization was founded.
     *
     * @param foundingLocation Place value to set.
     */
    @Override
    public void setFoundingLocation(Place foundingLocation) {
        this.foundingLocation = foundingLocation;
    }

    private Text duns;

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getDuns() {
        return duns;
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param duns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setDuns(Text duns) {
        this.duns = duns;
    }

    private Organization parentOrganization;

    /**
     * The larger organization that this organization is a [[subOrganization]] of, if any.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getParentOrganization() {
        return parentOrganization;
    }

    /**
     * The larger organization that this organization is a [[subOrganization]] of, if any.
     *
     * @param parentOrganization Organization value to set.
     */
    @Override
    public void setParentOrganization(Organization parentOrganization) {
        this.parentOrganization = parentOrganization;
    }

    private Person alumni;

    /**
     * Alumni of an organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getAlumni() {
        return alumni;
    }

    /**
     * Alumni of an organization.
     *
     * @param alumni Person value to set.
     */
    @Override
    public void setAlumni(Person alumni) {
        this.alumni = alumni;
    }

    private Text leiCode;

    /**
     * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO</a>
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF</a>
     */
    @Override
    public Text getLeiCode() {
        return leiCode;
    }

    /**
     * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
     *
     * @param leiCode Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO</a>
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF</a>
     */
    @Override
    public void setLeiCode(Text leiCode) {
        this.leiCode = leiCode;
    }

    private Object areaServed;

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @return {@link AdministrativeArea} or {@link GeoShape} or {@link Text} or {@link Place}
     */
    @Override
    public <T> T getAreaServed() {
        return (T) areaServed;
    }

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed AdministrativeArea value to set.
     */
    @Override
    public void setAreaServed(AdministrativeArea areaServed) {
        this.areaServed = areaServed;
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed GeoShape value to set.
     */
    @Override
    public void setAreaServed(GeoShape areaServed) {
        this.areaServed = areaServed;
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed Text value to set.
     */
    @Override
    public void setAreaServed(Text areaServed) {
        this.areaServed = areaServed;
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed Place value to set.
     */
    @Override
    public void setAreaServed(Place areaServed) {
        this.areaServed = areaServed;
    }

    private Date foundingDate;

    /**
     * The date that this organization was founded.
     *
     * @return {@link Date}
     */
    @Override
    public Date getFoundingDate() {
        return foundingDate;
    }

    /**
     * The date that this organization was founded.
     *
     * @param foundingDate Date value to set.
     */
    @Override
    public void setFoundingDate(Date foundingDate) {
        this.foundingDate = foundingDate;
    }

    private Object knowsLanguage;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getKnowsLanguage() {
        return (T) knowsLanguage;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Language knowsLanguage) {
        this.knowsLanguage = knowsLanguage;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Text knowsLanguage) {
        this.knowsLanguage = knowsLanguage;
    }

    private Review reviews;

    /**
     * Review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReviews() {
        return reviews;
    }

    /**
     * Review of the item.
     *
     * @param reviews Review value to set.
     */
    @Override
    public void setReviews(Review reviews) {
        this.reviews = reviews;
    }

    private Demand seeks;

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Demand getSeeks() {
        return seeks;
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param seeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setSeeks(Demand seeks) {
        this.seeks = seeks;
    }

    private Text taxID;

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getTaxID() {
        return taxID;
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param taxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setTaxID(Text taxID) {
        this.taxID = taxID;
    }

    private Object owns;

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getOwns() {
        return (T) owns;
    }

    /**
     * Products owned by the organization or person.
     *
     * @param owns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(Product owns) {
        this.owns = owns;
    }
    /**
     * Products owned by the organization or person.
     *
     * @param owns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(OwnershipInfo owns) {
        this.owns = owns;
    }

    private OfferCatalog hasOfferCatalog;

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public OfferCatalog getHasOfferCatalog() {
        return hasOfferCatalog;
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param hasOfferCatalog OfferCatalog value to set.
     */
    @Override
    public void setHasOfferCatalog(OfferCatalog hasOfferCatalog) {
        this.hasOfferCatalog = hasOfferCatalog;
    }

    private Object members;

    /**
     * A member of this organization.
     *
     * @return {@link Person} or {@link Organization}
     */
    @Override
    public <T> T getMembers() {
        return (T) members;
    }

    /**
     * A member of this organization.
     *
     * @param members Person value to set.
     */
    @Override
    public void setMembers(Person members) {
        this.members = members;
    }
    /**
     * A member of this organization.
     *
     * @param members Organization value to set.
     */
    @Override
    public void setMembers(Organization members) {
        this.members = members;
    }

    private Event events;

    /**
     * Upcoming or past events associated with this place or organization.
     *
     * @return {@link Event}
     */
    @Override
    public Event getEvents() {
        return events;
    }

    /**
     * Upcoming or past events associated with this place or organization.
     *
     * @param events Event value to set.
     */
    @Override
    public void setEvents(Event events) {
        this.events = events;
    }

    private Text iso6523Code;

    /**
     * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](https://schema.org/leiCode), [duns](https://schema.org/duns) and [vatID](https://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2915">https://github.com/schemaorg/schemaorg/issues/2915</a>
     */
    @Override
    public Text getIso6523Code() {
        return iso6523Code;
    }

    /**
     * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](https://schema.org/leiCode), [duns](https://schema.org/duns) and [vatID](https://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. 
     *
     * @param iso6523Code Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2915">https://github.com/schemaorg/schemaorg/issues/2915</a>
     */
    @Override
    public void setIso6523Code(Text iso6523Code) {
        this.iso6523Code = iso6523Code;
    }

    private Organization department;

    /**
     * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getDepartment() {
        return department;
    }

    /**
     * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
     *
     * @param department Organization value to set.
     */
    @Override
    public void setDepartment(Organization department) {
        this.department = department;
    }

    private Text faxNumber;

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFaxNumber() {
        return faxNumber;
    }

    /**
     * The fax number.
     *
     * @param faxNumber Text value to set.
     */
    @Override
    public void setFaxNumber(Text faxNumber) {
        this.faxNumber = faxNumber;
    }

    private Event event;

    /**
     * Upcoming or past event associated with this place, organization, or action.
     *
     * @return {@link Event}
     */
    @Override
    public Event getEvent() {
        return event;
    }

    /**
     * Upcoming or past event associated with this place, organization, or action.
     *
     * @param event Event value to set.
     */
    @Override
    public void setEvent(Event event) {
        this.event = event;
    }

    private Object mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }

    private Text alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text alternateName) {
        this.alternateName = alternateName;
    }

    private Text name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     */
    @Override
    public void setName(Text name) {
        this.name = name;
    }

    private Action potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action potentialAction) {
        this.potentialAction = potentialAction;
    }

    private Object image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void setImage(URL image) {
        this.image = image;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject image) {
        this.image = image;
    }

    private URL url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void setUrl(URL url) {
        this.url = url;
    }

    private Text description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void setDescription(Text description) {
        this.description = description;
    }

    private Object subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event subjectOf) {
        this.subjectOf = subjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = subjectOf;
    }

    private URL additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL additionalType) {
        this.additionalType = additionalType;
    }

    private Text disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = disambiguatingDescription;
    }

    private URL sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void setSameAs(URL sameAs) {
        this.sameAs = sameAs;
    }

    private Object identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void setIdentifier(URL identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void setIdentifier(Text identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue identifier) {
        this.identifier = identifier;
    }

    private URL maps;

    /**
     * A URL to a map of the place.
     *
     * @return {@link URL}
     */
    @Override
    public URL getMaps() {
        return maps;
    }

    /**
     * A URL to a map of the place.
     *
     * @param maps URL value to set.
     */
    @Override
    public void setMaps(URL maps) {
        this.maps = maps;
    }

    private Object geoContains;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link Place} or {@link GeospatialGeometry}
     */
    @Override
    public <T> T getGeoContains() {
        return (T) geoContains;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoContains Place value to set.
     */
    @Override
    public void setGeoContains(Place geoContains) {
        this.geoContains = geoContains;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoContains GeospatialGeometry value to set.
     */
    @Override
    public void setGeoContains(GeospatialGeometry geoContains) {
        this.geoContains = geoContains;
    }

    private Integer maximumAttendeeCapacity;

    /**
     * The total number of individuals that may attend an event or venue.
     *
     * @return {@link Integer}
     */
    @Override
    public Integer getMaximumAttendeeCapacity() {
        return maximumAttendeeCapacity;
    }

    /**
     * The total number of individuals that may attend an event or venue.
     *
     * @param maximumAttendeeCapacity Integer value to set.
     */
    @Override
    public void setMaximumAttendeeCapacity(Integer maximumAttendeeCapacity) {
        this.maximumAttendeeCapacity = maximumAttendeeCapacity;
    }

    private Place containsPlace;

    /**
     * The basic containment relation between a place and another that it contains.
     *
     * @return {@link Place}
     */
    @Override
    public Place getContainsPlace() {
        return containsPlace;
    }

    /**
     * The basic containment relation between a place and another that it contains.
     *
     * @param containsPlace Place value to set.
     */
    @Override
    public void setContainsPlace(Place containsPlace) {
        this.containsPlace = containsPlace;
    }

    private Boolean smokingAllowed;

    /**
     * Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
     *
     * @return {@link Boolean}
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    @Override
    public Boolean getSmokingAllowed() {
        return smokingAllowed;
    }

    /**
     * Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
     *
     * @param smokingAllowed Boolean value to set.
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    @Override
    public void setSmokingAllowed(Boolean smokingAllowed) {
        this.smokingAllowed = smokingAllowed;
    }

    private Object geoIntersects;

    /**
     * Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link GeospatialGeometry} or {@link Place}
     */
    @Override
    public <T> T getGeoIntersects() {
        return (T) geoIntersects;
    }

    /**
     * Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoIntersects GeospatialGeometry value to set.
     */
    @Override
    public void setGeoIntersects(GeospatialGeometry geoIntersects) {
        this.geoIntersects = geoIntersects;
    }
    /**
     * Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoIntersects Place value to set.
     */
    @Override
    public void setGeoIntersects(Place geoIntersects) {
        this.geoIntersects = geoIntersects;
    }

    private Object latitude;

    /**
     * The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @return {@link Text} or {@link Number}
     */
    @Override
    public <T> T getLatitude() {
        return (T) latitude;
    }

    /**
     * The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @param latitude Text value to set.
     */
    @Override
    public void setLatitude(Text latitude) {
        this.latitude = latitude;
    }
    /**
     * The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @param latitude Number value to set.
     */
    @Override
    public void setLatitude(Number latitude) {
        this.latitude = latitude;
    }

    private Object geoTouches;

    /**
     * Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM) )
     *
     * @return {@link Place} or {@link GeospatialGeometry}
     */
    @Override
    public <T> T getGeoTouches() {
        return (T) geoTouches;
    }

    /**
     * Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM) )
     *
     * @param geoTouches Place value to set.
     */
    @Override
    public void setGeoTouches(Place geoTouches) {
        this.geoTouches = geoTouches;
    }
    /**
     * Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM) )
     *
     * @param geoTouches GeospatialGeometry value to set.
     */
    @Override
    public void setGeoTouches(GeospatialGeometry geoTouches) {
        this.geoTouches = geoTouches;
    }

    private Object geoCoveredBy;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link Place} or {@link GeospatialGeometry}
     */
    @Override
    public <T> T getGeoCoveredBy() {
        return (T) geoCoveredBy;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCoveredBy Place value to set.
     */
    @Override
    public void setGeoCoveredBy(Place geoCoveredBy) {
        this.geoCoveredBy = geoCoveredBy;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCoveredBy GeospatialGeometry value to set.
     */
    @Override
    public void setGeoCoveredBy(GeospatialGeometry geoCoveredBy) {
        this.geoCoveredBy = geoCoveredBy;
    }

    private Object geoEquals;

    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
     *
     * @return {@link Place} or {@link GeospatialGeometry}
     */
    @Override
    public <T> T getGeoEquals() {
        return (T) geoEquals;
    }

    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
     *
     * @param geoEquals Place value to set.
     */
    @Override
    public void setGeoEquals(Place geoEquals) {
        this.geoEquals = geoEquals;
    }
    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
     *
     * @param geoEquals GeospatialGeometry value to set.
     */
    @Override
    public void setGeoEquals(GeospatialGeometry geoEquals) {
        this.geoEquals = geoEquals;
    }

    private URL map;

    /**
     * A URL to a map of the place.
     *
     * @return {@link URL}
     */
    @Override
    public URL getMap() {
        return map;
    }

    /**
     * A URL to a map of the place.
     *
     * @param map URL value to set.
     */
    @Override
    public void setMap(URL map) {
        this.map = map;
    }

    private Boolean publicAccess;

    /**
     * A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value
     *
     * @return {@link Boolean}
     */
    @Override
    public Boolean getPublicAccess() {
        return publicAccess;
    }

    /**
     * A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value
     *
     * @param publicAccess Boolean value to set.
     */
    @Override
    public void setPublicAccess(Boolean publicAccess) {
        this.publicAccess = publicAccess;
    }

    private Object geoCrosses;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link GeospatialGeometry} or {@link Place}
     */
    @Override
    public <T> T getGeoCrosses() {
        return (T) geoCrosses;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCrosses GeospatialGeometry value to set.
     */
    @Override
    public void setGeoCrosses(GeospatialGeometry geoCrosses) {
        this.geoCrosses = geoCrosses;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCrosses Place value to set.
     */
    @Override
    public void setGeoCrosses(Place geoCrosses) {
        this.geoCrosses = geoCrosses;
    }

    private Place containedInPlace;

    /**
     * The basic containment relation between a place and one that contains it.
     *
     * @return {@link Place}
     */
    @Override
    public Place getContainedInPlace() {
        return containedInPlace;
    }

    /**
     * The basic containment relation between a place and one that contains it.
     *
     * @param containedInPlace Place value to set.
     */
    @Override
    public void setContainedInPlace(Place containedInPlace) {
        this.containedInPlace = containedInPlace;
    }

    private LocationFeatureSpecification amenityFeature;

    /**
     * An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
     *
     * @return {@link LocationFeatureSpecification}
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    @Override
    public LocationFeatureSpecification getAmenityFeature() {
        return amenityFeature;
    }

    /**
     * An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
     *
     * @param amenityFeature LocationFeatureSpecification value to set.
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology</a>
     */
    @Override
    public void setAmenityFeature(LocationFeatureSpecification amenityFeature) {
        this.amenityFeature = amenityFeature;
    }

    private Object photos;

    /**
     * Photographs of this place.
     *
     * @return {@link ImageObject} or {@link Photograph}
     */
    @Override
    public <T> T getPhotos() {
        return (T) photos;
    }

    /**
     * Photographs of this place.
     *
     * @param photos ImageObject value to set.
     */
    @Override
    public void setPhotos(ImageObject photos) {
        this.photos = photos;
    }
    /**
     * Photographs of this place.
     *
     * @param photos Photograph value to set.
     */
    @Override
    public void setPhotos(Photograph photos) {
        this.photos = photos;
    }

    private Object geoCovers;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link GeospatialGeometry} or {@link Place}
     */
    @Override
    public <T> T getGeoCovers() {
        return (T) geoCovers;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCovers GeospatialGeometry value to set.
     */
    @Override
    public void setGeoCovers(GeospatialGeometry geoCovers) {
        this.geoCovers = geoCovers;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoCovers Place value to set.
     */
    @Override
    public void setGeoCovers(Place geoCovers) {
        this.geoCovers = geoCovers;
    }

    private Place containedIn;

    /**
     * The basic containment relation between a place and one that contains it.
     *
     * @return {@link Place}
     */
    @Override
    public Place getContainedIn() {
        return containedIn;
    }

    /**
     * The basic containment relation between a place and one that contains it.
     *
     * @param containedIn Place value to set.
     */
    @Override
    public void setContainedIn(Place containedIn) {
        this.containedIn = containedIn;
    }

    private Boolean hasDriveThroughService;

    /**
     * Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.
     *
     * @return {@link Boolean}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public Boolean getHasDriveThroughService() {
        return hasDriveThroughService;
    }

    /**
     * Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.
     *
     * @param hasDriveThroughService Boolean value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     */
    @Override
    public void setHasDriveThroughService(Boolean hasDriveThroughService) {
        this.hasDriveThroughService = hasDriveThroughService;
    }

    private Boolean isAccessibleForFree;

    /**
     * A flag to signal that the item, event, or place is accessible for free.
     *
     * @return {@link Boolean}
     */
    @Override
    public Boolean getIsAccessibleForFree() {
        return isAccessibleForFree;
    }

    /**
     * A flag to signal that the item, event, or place is accessible for free.
     *
     * @param isAccessibleForFree Boolean value to set.
     */
    @Override
    public void setIsAccessibleForFree(Boolean isAccessibleForFree) {
        this.isAccessibleForFree = isAccessibleForFree;
    }

    private Object geoWithin;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link Place} or {@link GeospatialGeometry}
     */
    @Override
    public <T> T getGeoWithin() {
        return (T) geoWithin;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoWithin Place value to set.
     */
    @Override
    public void setGeoWithin(Place geoWithin) {
        this.geoWithin = geoWithin;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoWithin GeospatialGeometry value to set.
     */
    @Override
    public void setGeoWithin(GeospatialGeometry geoWithin) {
        this.geoWithin = geoWithin;
    }

    private Object geoDisjoint;

    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM))
     *
     * @return {@link GeospatialGeometry} or {@link Place}
     */
    @Override
    public <T> T getGeoDisjoint() {
        return (T) geoDisjoint;
    }

    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM))
     *
     * @param geoDisjoint GeospatialGeometry value to set.
     */
    @Override
    public void setGeoDisjoint(GeospatialGeometry geoDisjoint) {
        this.geoDisjoint = geoDisjoint;
    }
    /**
     * Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM))
     *
     * @param geoDisjoint Place value to set.
     */
    @Override
    public void setGeoDisjoint(Place geoDisjoint) {
        this.geoDisjoint = geoDisjoint;
    }

    private URL tourBookingPage;

    /**
     * A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.
     *
     * @return {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2373">https://github.com/schemaorg/schemaorg/issues/2373</a>
     */
    @Override
    public URL getTourBookingPage() {
        return tourBookingPage;
    }

    /**
     * A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.
     *
     * @param tourBookingPage URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2373">https://github.com/schemaorg/schemaorg/issues/2373</a>
     */
    @Override
    public void setTourBookingPage(URL tourBookingPage) {
        this.tourBookingPage = tourBookingPage;
    }

    private Object geoOverlaps;

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @return {@link GeospatialGeometry} or {@link Place}
     */
    @Override
    public <T> T getGeoOverlaps() {
        return (T) geoOverlaps;
    }

    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoOverlaps GeospatialGeometry value to set.
     */
    @Override
    public void setGeoOverlaps(GeospatialGeometry geoOverlaps) {
        this.geoOverlaps = geoOverlaps;
    }
    /**
     * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
     *
     * @param geoOverlaps Place value to set.
     */
    @Override
    public void setGeoOverlaps(Place geoOverlaps) {
        this.geoOverlaps = geoOverlaps;
    }

    private Text branchCode;

    /**
     * A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
     *       
     *
     * @return {@link Text}
     */
    @Override
    public Text getBranchCode() {
        return branchCode;
    }

    /**
     * A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
     *       
     *
     * @param branchCode Text value to set.
     */
    @Override
    public void setBranchCode(Text branchCode) {
        this.branchCode = branchCode;
    }

    private PropertyValue additionalProperty;

    /**
     * A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
     *
     * @return {@link PropertyValue}
     */
    @Override
    public PropertyValue getAdditionalProperty() {
        return additionalProperty;
    }

    /**
     * A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
     *
     * @param additionalProperty PropertyValue value to set.
     */
    @Override
    public void setAdditionalProperty(PropertyValue additionalProperty) {
        this.additionalProperty = additionalProperty;
    }

    private OpeningHoursSpecification openingHoursSpecification;

    /**
     * The opening hours of a certain place.
     *
     * @return {@link OpeningHoursSpecification}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public OpeningHoursSpecification getOpeningHoursSpecification() {
        return openingHoursSpecification;
    }

    /**
     * The opening hours of a certain place.
     *
     * @param openingHoursSpecification OpeningHoursSpecification value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOpeningHoursSpecification(OpeningHoursSpecification openingHoursSpecification) {
        this.openingHoursSpecification = openingHoursSpecification;
    }

    private Object photo;

    /**
     * A photograph of this place.
     *
     * @return {@link Photograph} or {@link ImageObject}
     */
    @Override
    public <T> T getPhoto() {
        return (T) photo;
    }

    /**
     * A photograph of this place.
     *
     * @param photo Photograph value to set.
     */
    @Override
    public void setPhoto(Photograph photo) {
        this.photo = photo;
    }
    /**
     * A photograph of this place.
     *
     * @param photo ImageObject value to set.
     */
    @Override
    public void setPhoto(ImageObject photo) {
        this.photo = photo;
    }

    private OpeningHoursSpecification specialOpeningHoursSpecification;

    /**
     * The special opening hours of a certain place.<br/><br/>Use this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].
     *       
     *
     * @return {@link OpeningHoursSpecification}
     */
    @Override
    public OpeningHoursSpecification getSpecialOpeningHoursSpecification() {
        return specialOpeningHoursSpecification;
    }

    /**
     * The special opening hours of a certain place.<br/><br/>Use this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].
     *       
     *
     * @param specialOpeningHoursSpecification OpeningHoursSpecification value to set.
     */
    @Override
    public void setSpecialOpeningHoursSpecification(OpeningHoursSpecification specialOpeningHoursSpecification) {
        this.specialOpeningHoursSpecification = specialOpeningHoursSpecification;
    }

    private Object hasMap;

    /**
     * A URL to a map of the place.
     *
     * @return {@link URL} or {@link Map}
     */
    @Override
    public <T> T getHasMap() {
        return (T) hasMap;
    }

    /**
     * A URL to a map of the place.
     *
     * @param hasMap URL value to set.
     */
    @Override
    public void setHasMap(URL hasMap) {
        this.hasMap = hasMap;
    }
    /**
     * A URL to a map of the place.
     *
     * @param hasMap Map value to set.
     */
    @Override
    public void setHasMap(Map hasMap) {
        this.hasMap = hasMap;
    }

    private Object longitude;

    /**
     * The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @return {@link Number} or {@link Text}
     */
    @Override
    public <T> T getLongitude() {
        return (T) longitude;
    }

    /**
     * The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @param longitude Number value to set.
     */
    @Override
    public void setLongitude(Number longitude) {
        this.longitude = longitude;
    }
    /**
     * The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
     *
     * @param longitude Text value to set.
     */
    @Override
    public void setLongitude(Text longitude) {
        this.longitude = longitude;
    }

    private Object geo;

    /**
     * The geo coordinates of the place.
     *
     * @return {@link GeoCoordinates} or {@link GeoShape}
     */
    @Override
    public <T> T getGeo() {
        return (T) geo;
    }

    /**
     * The geo coordinates of the place.
     *
     * @param geo GeoCoordinates value to set.
     */
    @Override
    public void setGeo(GeoCoordinates geo) {
        this.geo = geo;
    }
    /**
     * The geo coordinates of the place.
     *
     * @param geo GeoShape value to set.
     */
    @Override
    public void setGeo(GeoShape geo) {
        this.geo = geo;
    }
}
