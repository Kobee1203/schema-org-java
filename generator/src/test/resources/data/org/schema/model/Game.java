/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Thing;
import org.schema.model.QuantitativeValue;
import org.schema.model.Place;
import org.schema.model.datatype.URL;
import org.schema.model.PostalAddress;

/**
 * The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
 *
 * @see <a href="https://schema.org/Game">https://schema.org/Game</a>
 */
public interface Game extends CreativeWork {

    /**
     * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
     *
     * @return {@link Thing}
     */
    Thing getCharacterAttribute();

    /**
     * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
     *
     * @param characterAttribute Thing value to set.
     */
    void setCharacterAttribute(Thing characterAttribute);

    /**
     * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
     *
     * @return {@link Thing}
     */
    Thing getGameItem();

    /**
     * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
     *
     * @param gameItem Thing value to set.
     */
    void setGameItem(Thing gameItem);

    /**
     * Indicate how many people can play this game (minimum, maximum, or range).
     *
     * @return {@link QuantitativeValue}
     */
    QuantitativeValue getNumberOfPlayers();

    /**
     * Indicate how many people can play this game (minimum, maximum, or range).
     *
     * @param numberOfPlayers QuantitativeValue value to set.
     */
    void setNumberOfPlayers(QuantitativeValue numberOfPlayers);

    /**
     * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
     *
     * @return {@link Thing}
     */
    Thing getQuest();

    /**
     * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
     *
     * @param quest Thing value to set.
     */
    void setQuest(Thing quest);

    /**
     * Real or fictional location of the game (or part of game).
     *
     * @return {@link Place} or {@link URL} or {@link PostalAddress}
     */
    <T> T getGameLocation();

    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation Place value to set.
     */
    void setGameLocation(Place gameLocation);
    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation URL value to set.
     */
    void setGameLocation(URL gameLocation);
    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation PostalAddress value to set.
     */
    void setGameLocation(PostalAddress gameLocation);
}
