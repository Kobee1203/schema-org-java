/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.datatype.Text;
import org.schema.model.QuantitativeValue;
import org.schema.model.MonetaryAmount;
import org.schema.model.HowToSupply;
import org.schema.model.HowToStep;
import org.schema.model.HowToSection;
import org.schema.model.CreativeWork;
import org.schema.model.Duration;
import org.schema.model.HowToTool;
import org.schema.model.ItemList;

/**
 * Instructions that explain how to achieve a result by performing a sequence of steps.
 *
 * @see <a href="https://schema.org/HowTo">https://schema.org/HowTo</a>
 */
public interface HowTo extends CreativeWork {

    /**
     * The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
     *
     * @return {@link Text} or {@link QuantitativeValue}
     */
    <T> T getYield();

    /**
     * The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
     *
     * @param yield Text value to set.
     */
    void setYield(Text yield);
    /**
     * The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
     *
     * @param yield QuantitativeValue value to set.
     */
    void setYield(QuantitativeValue yield);

    /**
     * The estimated cost of the supply or supplies consumed when performing instructions.
     *
     * @return {@link Text} or {@link MonetaryAmount}
     */
    <T> T getEstimatedCost();

    /**
     * The estimated cost of the supply or supplies consumed when performing instructions.
     *
     * @param estimatedCost Text value to set.
     */
    void setEstimatedCost(Text estimatedCost);
    /**
     * The estimated cost of the supply or supplies consumed when performing instructions.
     *
     * @param estimatedCost MonetaryAmount value to set.
     */
    void setEstimatedCost(MonetaryAmount estimatedCost);

    /**
     * A sub-property of instrument. A supply consumed when performing instructions or a direction.
     *
     * @return {@link HowToSupply} or {@link Text}
     */
    <T> T getSupply();

    /**
     * A sub-property of instrument. A supply consumed when performing instructions or a direction.
     *
     * @param supply HowToSupply value to set.
     */
    void setSupply(HowToSupply supply);
    /**
     * A sub-property of instrument. A supply consumed when performing instructions or a direction.
     *
     * @param supply Text value to set.
     */
    void setSupply(Text supply);

    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
     *
     * @return {@link HowToStep} or {@link HowToSection} or {@link Text} or {@link CreativeWork}
     */
    <T> T getStep();

    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
     *
     * @param step HowToStep value to set.
     */
    void setStep(HowToStep step);
    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
     *
     * @param step HowToSection value to set.
     */
    void setStep(HowToSection step);
    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
     *
     * @param step Text value to set.
     */
    void setStep(Text step);
    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
     *
     * @param step CreativeWork value to set.
     */
    void setStep(CreativeWork step);

    /**
     * The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @return {@link Duration}
     */
    Duration getTotalTime();

    /**
     * The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @param totalTime Duration value to set.
     */
    void setTotalTime(Duration totalTime);

    /**
     * A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
     *
     * @return {@link HowToTool} or {@link Text}
     */
    <T> T getTool();

    /**
     * A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
     *
     * @param tool HowToTool value to set.
     */
    void setTool(HowToTool tool);
    /**
     * A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
     *
     * @param tool Text value to set.
     */
    void setTool(Text tool);

    /**
     * The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @return {@link Duration}
     */
    Duration getPrepTime();

    /**
     * The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @param prepTime Duration value to set.
     */
    void setPrepTime(Duration prepTime);

    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
     *
     * @return {@link ItemList} or {@link CreativeWork} or {@link Text}
     */
    <T> T getSteps();

    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
     *
     * @param steps ItemList value to set.
     */
    void setSteps(ItemList steps);
    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
     *
     * @param steps CreativeWork value to set.
     */
    void setSteps(CreativeWork steps);
    /**
     * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
     *
     * @param steps Text value to set.
     */
    void setSteps(Text steps);

    /**
     * The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @return {@link Duration}
     */
    Duration getPerformTime();

    /**
     * The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
     *
     * @param performTime Duration value to set.
     */
    void setPerformTime(Duration performTime);
}
