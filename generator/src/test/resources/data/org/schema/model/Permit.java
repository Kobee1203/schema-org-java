/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.Duration;
import org.schema.model.Organization;
import org.schema.model.datatype.Date;
import org.schema.model.datatype.DateTime;
import org.schema.model.Service;
import org.schema.model.AdministrativeArea;
import org.schema.model.Audience;

/**
 * A permit issued by an organization, e.g. a parking pass.
 *
 * @see <a href="https://schema.org/Permit">https://schema.org/Permit</a>
 */
public interface Permit extends Intangible {

    /**
     * The duration of validity of a permit or similar thing.
     *
     * @return {@link Duration}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    List<Duration> getValidForList();

    /**
     * The duration of validity of a permit or similar thing.
     *
     * @return {@link Duration}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    Duration getValidFor();

    /**
     * The duration of validity of a permit or similar thing.
     *
     * @param validFor Duration value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    void addValidFor(Duration validFor);

    /**
     * The organization issuing the ticket or permit.
     *
     * @return {@link Organization}
     */
    List<Organization> getIssuedByList();

    /**
     * The organization issuing the ticket or permit.
     *
     * @return {@link Organization}
     */
    Organization getIssuedBy();

    /**
     * The organization issuing the ticket or permit.
     *
     * @param issuedBy Organization value to set.
     */
    void addIssuedBy(Organization issuedBy);

    /**
     * The date when the item is no longer valid.
     *
     * @return {@link Date}
     */
    List<Date> getValidUntilList();

    /**
     * The date when the item is no longer valid.
     *
     * @return {@link Date}
     */
    Date getValidUntil();

    /**
     * The date when the item is no longer valid.
     *
     * @param validUntil Date value to set.
     */
    void addValidUntil(Date validUntil);

    /**
     * The date when the item becomes valid.
     *
     * @return {@link DateTime} or {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> List<T> getValidFromList();

    /**
     * The date when the item becomes valid.
     *
     * @return {@link DateTime} or {@link Date}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getValidFrom();

    /**
     * The date when the item becomes valid.
     *
     * @param validFrom DateTime value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addValidFrom(DateTime validFrom);
    /**
     * The date when the item becomes valid.
     *
     * @param validFrom Date value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addValidFrom(Date validFrom);

    /**
     * The service through with the permit was granted.
     *
     * @return {@link Service}
     */
    List<Service> getIssuedThroughList();

    /**
     * The service through with the permit was granted.
     *
     * @return {@link Service}
     */
    Service getIssuedThrough();

    /**
     * The service through with the permit was granted.
     *
     * @param issuedThrough Service value to set.
     */
    void addIssuedThrough(Service issuedThrough);

    /**
     * The geographic area where a permit or similar thing is valid.
     *
     * @return {@link AdministrativeArea}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    List<AdministrativeArea> getValidInList();

    /**
     * The geographic area where a permit or similar thing is valid.
     *
     * @return {@link AdministrativeArea}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    AdministrativeArea getValidIn();

    /**
     * The geographic area where a permit or similar thing is valid.
     *
     * @param validIn AdministrativeArea value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1779">https://github.com/schemaorg/schemaorg/issues/1779</a>
     */
    void addValidIn(AdministrativeArea validIn);

    /**
     * The target audience for this permit.
     *
     * @return {@link Audience}
     */
    List<Audience> getPermitAudienceList();

    /**
     * The target audience for this permit.
     *
     * @return {@link Audience}
     */
    Audience getPermitAudience();

    /**
     * The target audience for this permit.
     *
     * @param permitAudience Audience value to set.
     */
    void addPermitAudience(Audience permitAudience);
}
