/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.datatype.Text;
import org.schema.model.Organization;
import org.schema.model.Person;
import org.schema.model.MusicComposition;
import org.schema.model.MusicRecording;
import org.schema.model.Event;
import org.schema.model.CreativeWork;

/**
 * A musical composition.
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
 * @see <a href="https://schema.org/MusicComposition">https://schema.org/MusicComposition</a>
 */
public interface MusicComposition extends CreativeWork {

    /**
     * The International Standard Musical Work Code for the composition.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Text getIswcCode();

    /**
     * The International Standard Musical Work Code for the composition.
     *
     * @param iswcCode Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setIswcCode(Text iswcCode);

    /**
     * The person or organization who wrote a composition, or who is the composer of a work performed at some event.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    <T> T getComposer();

    /**
     * The person or organization who wrote a composition, or who is the composer of a work performed at some event.
     *
     * @param composer Organization value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setComposer(Organization composer);
    /**
     * The person or organization who wrote a composition, or who is the composer of a work performed at some event.
     *
     * @param composer Person value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setComposer(Person composer);

    /**
     * The type of composition (e.g. overture, sonata, symphony, etc.).
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Text getMusicCompositionForm();

    /**
     * The type of composition (e.g. overture, sonata, symphony, etc.).
     *
     * @param musicCompositionForm Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setMusicCompositionForm(Text musicCompositionForm);

    /**
     * Smaller compositions included in this work (e.g. a movement in a symphony).
     *
     * @return {@link MusicComposition}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    MusicComposition getIncludedComposition();

    /**
     * Smaller compositions included in this work (e.g. a movement in a symphony).
     *
     * @param includedComposition MusicComposition value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setIncludedComposition(MusicComposition includedComposition);

    /**
     * An audio recording of the work.
     *
     * @return {@link MusicRecording}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    MusicRecording getRecordedAs();

    /**
     * An audio recording of the work.
     *
     * @param recordedAs MusicRecording value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setRecordedAs(MusicRecording recordedAs);

    /**
     * The date and place the work was first performed.
     *
     * @return {@link Event}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Event getFirstPerformance();

    /**
     * The date and place the work was first performed.
     *
     * @param firstPerformance Event value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setFirstPerformance(Event firstPerformance);

    /**
     * An arrangement derived from the composition.
     *
     * @return {@link MusicComposition}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    MusicComposition getMusicArrangement();

    /**
     * An arrangement derived from the composition.
     *
     * @param musicArrangement MusicComposition value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setMusicArrangement(MusicComposition musicArrangement);

    /**
     * The words in the song.
     *
     * @return {@link CreativeWork}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    CreativeWork getLyrics();

    /**
     * The words in the song.
     *
     * @param lyrics CreativeWork value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setLyrics(CreativeWork lyrics);

    /**
     * The key, mode, or scale this composition uses.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Text getMusicalKey();

    /**
     * The key, mode, or scale this composition uses.
     *
     * @param musicalKey Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setMusicalKey(Text musicalKey);

    /**
     * The person who wrote the words.
     *
     * @return {@link Person}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    Person getLyricist();

    /**
     * The person who wrote the words.
     *
     * @param lyricist Person value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ</a>
     */
    void setLyricist(Person lyricist);
}
