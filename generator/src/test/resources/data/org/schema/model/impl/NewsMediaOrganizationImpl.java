/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.AboutPage;
import org.schema.model.datatype.Text;
import org.schema.model.CreativeWork;
import org.schema.model.datatype.URL;
import org.schema.model.Article;
import org.schema.model.AdministrativeArea;
import org.schema.model.Place;
import org.schema.model.GeoShape;
import org.schema.model.Person;
import org.schema.model.Organization;
import org.schema.model.Thing;
import org.schema.model.Offer;
import org.schema.model.DefinedTerm;
import org.schema.model.Review;
import org.schema.model.ProgramMembership;
import org.schema.model.ContactPoint;
import org.schema.model.datatype.Date;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.Grant;
import org.schema.model.InteractionCounter;
import org.schema.model.Event;
import org.schema.model.Demand;
import org.schema.model.MerchantReturnPolicy;
import org.schema.model.Language;
import org.schema.model.ImageObject;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.PostalAddress;
import org.schema.model.Brand;
import org.schema.model.NonprofitType;
import org.schema.model.OfferCatalog;
import org.schema.model.AggregateRating;
import org.schema.model.VirtualLocation;
import org.schema.model.QuantitativeValue;
import org.schema.model.Action;
import org.schema.model.PropertyValue;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import com.weedow.schemaorg.commons.model.JsonLdFieldTypes;
import java.util.List;
import org.schema.model.NewsMediaOrganization;

/**
 * A News/Media organization such as a newspaper or TV station.
 *
 * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
 * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
 * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
 * @see <a href="https://schema.org/NewsMediaOrganization">https://schema.org/NewsMediaOrganization</a>
 */
@JsonLdTypeName("NewsMediaOrganization")
public class NewsMediaOrganizationImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements NewsMediaOrganization {

    @JsonLdFieldTypes({ AboutPage.class, Text.class, CreativeWork.class, URL.class })
    private List<Object> ownershipFundingInfo;

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @return {@link AboutPage} or {@link Text} or {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getOwnershipFundingInfoList() {
        return (List<T>) ownershipFundingInfo;
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @return {@link AboutPage} or {@link Text} or {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getOwnershipFundingInfo() {
        return (T) getFirst(ownershipFundingInfo);
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo AboutPage value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addOwnershipFundingInfo(AboutPage ownershipFundingInfo) {
        this.ownershipFundingInfo = add(this.ownershipFundingInfo, ownershipFundingInfo);
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addOwnershipFundingInfo(Text ownershipFundingInfo) {
        this.ownershipFundingInfo = add(this.ownershipFundingInfo, ownershipFundingInfo);
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addOwnershipFundingInfo(CreativeWork ownershipFundingInfo) {
        this.ownershipFundingInfo = add(this.ownershipFundingInfo, ownershipFundingInfo);
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
     *
     * @param ownershipFundingInfo URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>ownershipFundingInfo</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addOwnershipFundingInfo(URL ownershipFundingInfo) {
        this.ownershipFundingInfo = add(this.ownershipFundingInfo, ownershipFundingInfo);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> missionCoveragePrioritiesPolicy;

    /**
     * For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>missionCoveragePrioritiesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getMissionCoveragePrioritiesPolicyList() {
        return (List<T>) missionCoveragePrioritiesPolicy;
    }

    /**
     * For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>missionCoveragePrioritiesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getMissionCoveragePrioritiesPolicy() {
        return (T) getFirst(missionCoveragePrioritiesPolicy);
    }

    /**
     * For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.
     *
     * @param missionCoveragePrioritiesPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>missionCoveragePrioritiesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addMissionCoveragePrioritiesPolicy(CreativeWork missionCoveragePrioritiesPolicy) {
        this.missionCoveragePrioritiesPolicy = add(this.missionCoveragePrioritiesPolicy, missionCoveragePrioritiesPolicy);
    }
    /**
     * For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.
     *
     * @param missionCoveragePrioritiesPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>missionCoveragePrioritiesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addMissionCoveragePrioritiesPolicy(URL missionCoveragePrioritiesPolicy) {
        this.missionCoveragePrioritiesPolicy = add(this.missionCoveragePrioritiesPolicy, missionCoveragePrioritiesPolicy);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> actionableFeedbackPolicy;

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>actionableFeedbackPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getActionableFeedbackPolicyList() {
        return (List<T>) actionableFeedbackPolicy;
    }

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>actionableFeedbackPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getActionableFeedbackPolicy() {
        return (T) getFirst(actionableFeedbackPolicy);
    }

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @param actionableFeedbackPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>actionableFeedbackPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addActionableFeedbackPolicy(CreativeWork actionableFeedbackPolicy) {
        this.actionableFeedbackPolicy = add(this.actionableFeedbackPolicy, actionableFeedbackPolicy);
    }
    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
     *
     * @param actionableFeedbackPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>actionableFeedbackPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addActionableFeedbackPolicy(URL actionableFeedbackPolicy) {
        this.actionableFeedbackPolicy = add(this.actionableFeedbackPolicy, actionableFeedbackPolicy);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> noBylinesPolicy;

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>noBylinesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getNoBylinesPolicyList() {
        return (List<T>) noBylinesPolicy;
    }

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>noBylinesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getNoBylinesPolicy() {
        return (T) getFirst(noBylinesPolicy);
    }

    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.
     *
     * @param noBylinesPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>noBylinesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addNoBylinesPolicy(CreativeWork noBylinesPolicy) {
        this.noBylinesPolicy = add(this.noBylinesPolicy, noBylinesPolicy);
    }
    /**
     * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.
     *
     * @param noBylinesPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>noBylinesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addNoBylinesPolicy(URL noBylinesPolicy) {
        this.noBylinesPolicy = add(this.noBylinesPolicy, noBylinesPolicy);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> masthead;

    /**
     * For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>masthead</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getMastheadList() {
        return (List<T>) masthead;
    }

    /**
     * For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>masthead</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getMasthead() {
        return (T) getFirst(masthead);
    }

    /**
     * For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.
     *
     * @param masthead URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>masthead</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addMasthead(URL masthead) {
        this.masthead = add(this.masthead, masthead);
    }
    /**
     * For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.
     *
     * @param masthead CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>masthead</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addMasthead(CreativeWork masthead) {
        this.masthead = add(this.masthead, masthead);
    }

    @JsonLdFieldTypes({ Article.class, URL.class })
    private List<Object> diversityStaffingReport;

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @return {@link Article} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>diversityStaffingReport</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getDiversityStaffingReportList() {
        return (List<T>) diversityStaffingReport;
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @return {@link Article} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>diversityStaffingReport</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getDiversityStaffingReport() {
        return (T) getFirst(diversityStaffingReport);
    }

    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @param diversityStaffingReport Article value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>diversityStaffingReport</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addDiversityStaffingReport(Article diversityStaffingReport) {
        this.diversityStaffingReport = add(this.diversityStaffingReport, diversityStaffingReport);
    }
    /**
     * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
     *
     * @param diversityStaffingReport URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>diversityStaffingReport</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addDiversityStaffingReport(URL diversityStaffingReport) {
        this.diversityStaffingReport = add(this.diversityStaffingReport, diversityStaffingReport);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> unnamedSourcesPolicy;

    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>unnamedSourcesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getUnnamedSourcesPolicyList() {
        return (List<T>) unnamedSourcesPolicy;
    }

    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>unnamedSourcesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getUnnamedSourcesPolicy() {
        return (T) getFirst(unnamedSourcesPolicy);
    }

    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @param unnamedSourcesPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>unnamedSourcesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addUnnamedSourcesPolicy(CreativeWork unnamedSourcesPolicy) {
        this.unnamedSourcesPolicy = add(this.unnamedSourcesPolicy, unnamedSourcesPolicy);
    }
    /**
     * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
     *
     * @param unnamedSourcesPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>unnamedSourcesPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addUnnamedSourcesPolicy(URL unnamedSourcesPolicy) {
        this.unnamedSourcesPolicy = add(this.unnamedSourcesPolicy, unnamedSourcesPolicy);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> diversityPolicy;

    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> List<T> getDiversityPolicyList() {
        return (List<T>) diversityPolicy;
    }

    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> T getDiversityPolicy() {
        return (T) getFirst(diversityPolicy);
    }

    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @param diversityPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void addDiversityPolicy(URL diversityPolicy) {
        this.diversityPolicy = add(this.diversityPolicy, diversityPolicy);
    }
    /**
     * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
     *
     * @param diversityPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void addDiversityPolicy(CreativeWork diversityPolicy) {
        this.diversityPolicy = add(this.diversityPolicy, diversityPolicy);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> verificationFactCheckingPolicy;

    /**
     * Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>verificationFactCheckingPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getVerificationFactCheckingPolicyList() {
        return (List<T>) verificationFactCheckingPolicy;
    }

    /**
     * Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>verificationFactCheckingPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getVerificationFactCheckingPolicy() {
        return (T) getFirst(verificationFactCheckingPolicy);
    }

    /**
     * Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].
     *
     * @param verificationFactCheckingPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>verificationFactCheckingPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addVerificationFactCheckingPolicy(CreativeWork verificationFactCheckingPolicy) {
        this.verificationFactCheckingPolicy = add(this.verificationFactCheckingPolicy, verificationFactCheckingPolicy);
    }
    /**
     * Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].
     *
     * @param verificationFactCheckingPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>verificationFactCheckingPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addVerificationFactCheckingPolicy(URL verificationFactCheckingPolicy) {
        this.verificationFactCheckingPolicy = add(this.verificationFactCheckingPolicy, verificationFactCheckingPolicy);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> ethicsPolicy;

    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> List<T> getEthicsPolicyList() {
        return (List<T>) ethicsPolicy;
    }

    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @return {@link CreativeWork} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public <T> T getEthicsPolicy() {
        return (T) getFirst(ethicsPolicy);
    }

    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @param ethicsPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void addEthicsPolicy(CreativeWork ethicsPolicy) {
        this.ethicsPolicy = add(this.ethicsPolicy, ethicsPolicy);
    }
    /**
     * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
     *
     * @param ethicsPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     */
    @Override
    public void addEthicsPolicy(URL ethicsPolicy) {
        this.ethicsPolicy = add(this.ethicsPolicy, ethicsPolicy);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> correctionsPolicy;

    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>correctionsPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> List<T> getCorrectionsPolicyList() {
        return (List<T>) correctionsPolicy;
    }

    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @return {@link URL} or {@link CreativeWork}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>correctionsPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public <T> T getCorrectionsPolicy() {
        return (T) getFirst(correctionsPolicy);
    }

    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @param correctionsPolicy URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>correctionsPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addCorrectionsPolicy(URL correctionsPolicy) {
        this.correctionsPolicy = add(this.correctionsPolicy, correctionsPolicy);
    }
    /**
     * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
     *
     * @param correctionsPolicy CreativeWork value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1525">https://github.com/schemaorg/schemaorg/issues/1525</a>
     * @see <a href="https://schema.org/publishingPrinciples">https://schema.org/publishingPrinciples</a> <i>correctionsPolicy</i> is a sub property of <i>publishingPrinciples</i>
     */
    @Override
    public void addCorrectionsPolicy(CreativeWork correctionsPolicy) {
        this.correctionsPolicy = add(this.correctionsPolicy, correctionsPolicy);
    }

    @JsonLdFieldTypes({ AdministrativeArea.class, Place.class, GeoShape.class })
    private List<Object> serviceArea;

    /**
     * The geographic area where the service is provided.
     *
     * @return {@link AdministrativeArea} or {@link Place} or {@link GeoShape}
     */
    @Override
    public <T> List<T> getServiceAreaList() {
        return (List<T>) serviceArea;
    }

    /**
     * The geographic area where the service is provided.
     *
     * @return {@link AdministrativeArea} or {@link Place} or {@link GeoShape}
     */
    @Override
    public <T> T getServiceArea() {
        return (T) getFirst(serviceArea);
    }

    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea AdministrativeArea value to set.
     */
    @Override
    public void addServiceArea(AdministrativeArea serviceArea) {
        this.serviceArea = add(this.serviceArea, serviceArea);
    }
    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea Place value to set.
     */
    @Override
    public void addServiceArea(Place serviceArea) {
        this.serviceArea = add(this.serviceArea, serviceArea);
    }
    /**
     * The geographic area where the service is provided.
     *
     * @param serviceArea GeoShape value to set.
     */
    @Override
    public void addServiceArea(GeoShape serviceArea) {
        this.serviceArea = add(this.serviceArea, serviceArea);
    }

    private List<Person> founder;

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getFounderList() {
        return founder;
    }

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFounder() {
        return getFirst(founder);
    }

    /**
     * A person who founded this organization.
     *
     * @param founder Person value to set.
     */
    @Override
    public void addFounder(Person founder) {
        this.founder = add(this.founder, founder);
    }

    private List<Text> isicV4;

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getIsicV4List() {
        return isicV4;
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getIsicV4() {
        return getFirst(isicV4);
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param isicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addIsicV4(Text isicV4) {
        this.isicV4 = add(this.isicV4, isicV4);
    }

    private List<Place> hasPOS;

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Place> getHasPOSList() {
        return hasPOS;
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Place getHasPOS() {
        return getFirst(hasPOS);
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param hasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addHasPOS(Place hasPOS) {
        this.hasPOS = add(this.hasPOS, hasPOS);
    }

    private List<Text> globalLocationNumber;

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getGlobalLocationNumberList() {
        return globalLocationNumber;
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getGlobalLocationNumber() {
        return getFirst(globalLocationNumber);
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param globalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>globalLocationNumber</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addGlobalLocationNumber(Text globalLocationNumber) {
        this.globalLocationNumber = add(this.globalLocationNumber, globalLocationNumber);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> member;

    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> List<T> getMemberList() {
        return (List<T>) member;
    }

    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getMember() {
        return (T) getFirst(member);
    }

    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @param member Organization value to set.
     */
    @Override
    public void addMember(Organization member) {
        this.member = add(this.member, member);
    }
    /**
     * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
     *
     * @param member Person value to set.
     */
    @Override
    public void addMember(Person member) {
        this.member = add(this.member, member);
    }

    @JsonLdFieldTypes({ Thing.class, Text.class, URL.class })
    private List<Object> knowsAbout;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link Thing} or {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> List<T> getKnowsAboutList() {
        return (List<T>) knowsAbout;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link Thing} or {@link Text} or {@link URL}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> T getKnowsAbout() {
        return (T) getFirst(knowsAbout);
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(Thing knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(Text knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void addKnowsAbout(URL knowsAbout) {
        this.knowsAbout = add(this.knowsAbout, knowsAbout);
    }

    private List<Offer> makesOffer;

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Offer> getMakesOfferList() {
        return makesOffer;
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Offer getMakesOffer() {
        return getFirst(makesOffer);
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param makesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addMakesOffer(Offer makesOffer) {
        this.makesOffer = add(this.makesOffer, makesOffer);
    }

    private List<Person> founders;

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getFoundersList() {
        return founders;
    }

    /**
     * A person who founded this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFounders() {
        return getFirst(founders);
    }

    /**
     * A person who founded this organization.
     *
     * @param founders Person value to set.
     */
    @Override
    public void addFounders(Person founders) {
        this.founders = add(this.founders, founders);
    }

    private List<Text> legalName;

    /**
     * The official name of the organization, e.g. the registered company name.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getLegalNameList() {
        return legalName;
    }

    /**
     * The official name of the organization, e.g. the registered company name.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getLegalName() {
        return getFirst(legalName);
    }

    /**
     * The official name of the organization, e.g. the registered company name.
     *
     * @param legalName Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addLegalName(Text legalName) {
        this.legalName = add(this.legalName, legalName);
    }

    @JsonLdFieldTypes({ Text.class, Place.class, GeoShape.class, AdministrativeArea.class })
    private List<Object> areaServed;

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @return {@link Text} or {@link Place} or {@link GeoShape} or {@link AdministrativeArea}
     */
    @Override
    public <T> List<T> getAreaServedList() {
        return (List<T>) areaServed;
    }

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @return {@link Text} or {@link Place} or {@link GeoShape} or {@link AdministrativeArea}
     */
    @Override
    public <T> T getAreaServed() {
        return (T) getFirst(areaServed);
    }

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed Text value to set.
     */
    @Override
    public void addAreaServed(Text areaServed) {
        this.areaServed = add(this.areaServed, areaServed);
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed Place value to set.
     */
    @Override
    public void addAreaServed(Place areaServed) {
        this.areaServed = add(this.areaServed, areaServed);
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed GeoShape value to set.
     */
    @Override
    public void addAreaServed(GeoShape areaServed) {
        this.areaServed = add(this.areaServed, areaServed);
    }
    /**
     * The geographic area where a service or offered item is provided.
     *
     * @param areaServed AdministrativeArea value to set.
     */
    @Override
    public void addAreaServed(AdministrativeArea areaServed) {
        this.areaServed = add(this.areaServed, areaServed);
    }

    private List<Organization> parentOrganization;

    /**
     * The larger organization that this organization is a [[subOrganization]] of, if any.
     *
     * @return {@link Organization}
     */
    @Override
    public List<Organization> getParentOrganizationList() {
        return parentOrganization;
    }

    /**
     * The larger organization that this organization is a [[subOrganization]] of, if any.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getParentOrganization() {
        return getFirst(parentOrganization);
    }

    /**
     * The larger organization that this organization is a [[subOrganization]] of, if any.
     *
     * @param parentOrganization Organization value to set.
     */
    @Override
    public void addParentOrganization(Organization parentOrganization) {
        this.parentOrganization = add(this.parentOrganization, parentOrganization);
    }

    private List<Text> slogan;

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getSloganList() {
        return slogan;
    }

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getSlogan() {
        return getFirst(slogan);
    }

    /**
     * A slogan or motto associated with the item.
     *
     * @param slogan Text value to set.
     */
    @Override
    public void addSlogan(Text slogan) {
        this.slogan = add(this.slogan, slogan);
    }

    private List<Organization> department;

    /**
     * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
     *
     * @return {@link Organization}
     */
    @Override
    public List<Organization> getDepartmentList() {
        return department;
    }

    /**
     * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getDepartment() {
        return getFirst(department);
    }

    /**
     * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
     *
     * @param department Organization value to set.
     */
    @Override
    public void addDepartment(Organization department) {
        this.department = add(this.department, department);
    }

    @JsonLdFieldTypes({ URL.class, DefinedTerm.class, Text.class })
    private List<Object> keywords;

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text}
     */
    @Override
    public <T> List<T> getKeywordsList() {
        return (List<T>) keywords;
    }

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @return {@link URL} or {@link DefinedTerm} or {@link Text}
     */
    @Override
    public <T> T getKeywords() {
        return (T) getFirst(keywords);
    }

    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords URL value to set.
     */
    @Override
    public void addKeywords(URL keywords) {
        this.keywords = add(this.keywords, keywords);
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords DefinedTerm value to set.
     */
    @Override
    public void addKeywords(DefinedTerm keywords) {
        this.keywords = add(this.keywords, keywords);
    }
    /**
     * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
     *
     * @param keywords Text value to set.
     */
    @Override
    public void addKeywords(Text keywords) {
        this.keywords = add(this.keywords, keywords);
    }

    private List<Review> reviews;

    /**
     * Review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public List<Review> getReviewsList() {
        return reviews;
    }

    /**
     * Review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReviews() {
        return getFirst(reviews);
    }

    /**
     * Review of the item.
     *
     * @param reviews Review value to set.
     */
    @Override
    public void addReviews(Review reviews) {
        this.reviews = add(this.reviews, reviews);
    }

    @JsonLdFieldTypes({ Organization.class, ProgramMembership.class })
    private List<Object> memberOf;

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link Organization} or {@link ProgramMembership}
     */
    @Override
    public <T> List<T> getMemberOfList() {
        return (List<T>) memberOf;
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link Organization} or {@link ProgramMembership}
     */
    @Override
    public <T> T getMemberOf() {
        return (T) getFirst(memberOf);
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf Organization value to set.
     */
    @Override
    public void addMemberOf(Organization memberOf) {
        this.memberOf = add(this.memberOf, memberOf);
    }
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf ProgramMembership value to set.
     */
    @Override
    public void addMemberOf(ProgramMembership memberOf) {
        this.memberOf = add(this.memberOf, memberOf);
    }

    @JsonLdFieldTypes({ CreativeWork.class, URL.class })
    private List<Object> publishingPrinciples;

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> List<T> getPublishingPrinciplesList() {
        return (List<T>) publishingPrinciples;
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getPublishingPrinciples() {
        return (T) getFirst(publishingPrinciples);
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples CreativeWork value to set.
     */
    @Override
    public void addPublishingPrinciples(CreativeWork publishingPrinciples) {
        this.publishingPrinciples = add(this.publishingPrinciples, publishingPrinciples);
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples URL value to set.
     */
    @Override
    public void addPublishingPrinciples(URL publishingPrinciples) {
        this.publishingPrinciples = add(this.publishingPrinciples, publishingPrinciples);
    }

    private List<Person> employee;

    /**
     * Someone working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getEmployeeList() {
        return employee;
    }

    /**
     * Someone working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getEmployee() {
        return getFirst(employee);
    }

    /**
     * Someone working for this organization.
     *
     * @param employee Person value to set.
     */
    @Override
    public void addEmployee(Person employee) {
        this.employee = add(this.employee, employee);
    }

    private List<Text> award;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardList() {
        return award;
    }

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return getFirst(award);
    }

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    @Override
    public void addAward(Text award) {
        this.award = add(this.award, award);
    }

    private List<Text> email;

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getEmailList() {
        return email;
    }

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public Text getEmail() {
        return getFirst(email);
    }

    /**
     * Email address.
     *
     * @param email Text value to set.
     */
    @Override
    public void addEmail(Text email) {
        this.email = add(this.email, email);
    }

    private List<ContactPoint> contactPoints;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public List<ContactPoint> getContactPointsList() {
        return contactPoints;
    }

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoints() {
        return getFirst(contactPoints);
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoints ContactPoint value to set.
     */
    @Override
    public void addContactPoints(ContactPoint contactPoints) {
        this.contactPoints = add(this.contactPoints, contactPoints);
    }

    private List<Date> foundingDate;

    /**
     * The date that this organization was founded.
     *
     * @return {@link Date}
     */
    @Override
    public List<Date> getFoundingDateList() {
        return foundingDate;
    }

    /**
     * The date that this organization was founded.
     *
     * @return {@link Date}
     */
    @Override
    public Date getFoundingDate() {
        return getFirst(foundingDate);
    }

    /**
     * The date that this organization was founded.
     *
     * @param foundingDate Date value to set.
     */
    @Override
    public void addFoundingDate(Date foundingDate) {
        this.foundingDate = add(this.foundingDate, foundingDate);
    }

    @JsonLdFieldTypes({ Product.class, OwnershipInfo.class })
    private List<Object> owns;

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> List<T> getOwnsList() {
        return (List<T>) owns;
    }

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getOwns() {
        return (T) getFirst(owns);
    }

    /**
     * Products owned by the organization or person.
     *
     * @param owns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addOwns(Product owns) {
        this.owns = add(this.owns, owns);
    }
    /**
     * Products owned by the organization or person.
     *
     * @param owns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addOwns(OwnershipInfo owns) {
        this.owns = add(this.owns, owns);
    }

    private List<Text> awards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAwardsList() {
        return awards;
    }

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return getFirst(awards);
    }

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    @Override
    public void addAwards(Text awards) {
        this.awards = add(this.awards, awards);
    }

    private List<Review> review;

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public List<Review> getReviewList() {
        return review;
    }

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    @Override
    public Review getReview() {
        return getFirst(review);
    }

    /**
     * A review of the item.
     *
     * @param review Review value to set.
     */
    @Override
    public void addReview(Review review) {
        this.review = add(this.review, review);
    }

    private List<Date> dissolutionDate;

    /**
     * The date that this organization was dissolved.
     *
     * @return {@link Date}
     */
    @Override
    public List<Date> getDissolutionDateList() {
        return dissolutionDate;
    }

    /**
     * The date that this organization was dissolved.
     *
     * @return {@link Date}
     */
    @Override
    public Date getDissolutionDate() {
        return getFirst(dissolutionDate);
    }

    /**
     * The date that this organization was dissolved.
     *
     * @param dissolutionDate Date value to set.
     */
    @Override
    public void addDissolutionDate(Date dissolutionDate) {
        this.dissolutionDate = add(this.dissolutionDate, dissolutionDate);
    }

    private List<Grant> funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public List<Grant> getFundingList() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public Grant getFunding() {
        return getFirst(funding);
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     */
    @Override
    public void addFunding(Grant funding) {
        this.funding = add(this.funding, funding);
    }

    private List<InteractionCounter> interactionStatistic;

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public List<InteractionCounter> getInteractionStatisticList() {
        return interactionStatistic;
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public InteractionCounter getInteractionStatistic() {
        return getFirst(interactionStatistic);
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param interactionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public void addInteractionStatistic(InteractionCounter interactionStatistic) {
        this.interactionStatistic = add(this.interactionStatistic, interactionStatistic);
    }

    private List<Event> events;

    /**
     * Upcoming or past events associated with this place or organization.
     *
     * @return {@link Event}
     */
    @Override
    public List<Event> getEventsList() {
        return events;
    }

    /**
     * Upcoming or past events associated with this place or organization.
     *
     * @return {@link Event}
     */
    @Override
    public Event getEvents() {
        return getFirst(events);
    }

    /**
     * Upcoming or past events associated with this place or organization.
     *
     * @param events Event value to set.
     */
    @Override
    public void addEvents(Event events) {
        this.events = add(this.events, events);
    }

    private List<Demand> seeks;

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Demand> getSeeksList() {
        return seeks;
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Demand getSeeks() {
        return getFirst(seeks);
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param seeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addSeeks(Demand seeks) {
        this.seeks = add(this.seeks, seeks);
    }

    private List<Person> employees;

    /**
     * People working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getEmployeesList() {
        return employees;
    }

    /**
     * People working for this organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getEmployees() {
        return getFirst(employees);
    }

    /**
     * People working for this organization.
     *
     * @param employees Person value to set.
     */
    @Override
    public void addEmployees(Person employees) {
        this.employees = add(this.employees, employees);
    }

    private List<Organization> subOrganization;

    /**
     * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
     *
     * @return {@link Organization}
     */
    @Override
    public List<Organization> getSubOrganizationList() {
        return subOrganization;
    }

    /**
     * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getSubOrganization() {
        return getFirst(subOrganization);
    }

    /**
     * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
     *
     * @param subOrganization Organization value to set.
     */
    @Override
    public void addSubOrganization(Organization subOrganization) {
        this.subOrganization = add(this.subOrganization, subOrganization);
    }

    private List<Place> foundingLocation;

    /**
     * The place where the Organization was founded.
     *
     * @return {@link Place}
     */
    @Override
    public List<Place> getFoundingLocationList() {
        return foundingLocation;
    }

    /**
     * The place where the Organization was founded.
     *
     * @return {@link Place}
     */
    @Override
    public Place getFoundingLocation() {
        return getFirst(foundingLocation);
    }

    /**
     * The place where the Organization was founded.
     *
     * @param foundingLocation Place value to set.
     */
    @Override
    public void addFoundingLocation(Place foundingLocation) {
        this.foundingLocation = add(this.foundingLocation, foundingLocation);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> funder;

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public <T> List<T> getFunderList() {
        return (List<T>) funder;
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public <T> T getFunder() {
        return (T) getFirst(funder);
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Organization value to set.
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public void addFunder(Organization funder) {
        this.funder = add(this.funder, funder);
    }
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Person value to set.
     * @see <a href="https://schema.org/sponsor">https://schema.org/sponsor</a> <i>funder</i> is a sub property of <i>sponsor</i>
     */
    @Override
    public void addFunder(Person funder) {
        this.funder = add(this.funder, funder);
    }

    private List<Text> iso6523Code;

    /**
     * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](https://schema.org/leiCode), [duns](https://schema.org/duns) and [vatID](https://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2915">https://github.com/schemaorg/schemaorg/issues/2915</a>
     */
    @Override
    public List<Text> getIso6523CodeList() {
        return iso6523Code;
    }

    /**
     * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](https://schema.org/leiCode), [duns](https://schema.org/duns) and [vatID](https://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. 
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2915">https://github.com/schemaorg/schemaorg/issues/2915</a>
     */
    @Override
    public Text getIso6523Code() {
        return getFirst(iso6523Code);
    }

    /**
     * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](https://schema.org/leiCode), [duns](https://schema.org/duns) and [vatID](https://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. 
     *
     * @param iso6523Code Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2915">https://github.com/schemaorg/schemaorg/issues/2915</a>
     */
    @Override
    public void addIso6523Code(Text iso6523Code) {
        this.iso6523Code = add(this.iso6523Code, iso6523Code);
    }

    private List<MerchantReturnPolicy> hasMerchantReturnPolicy;

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @return {@link MerchantReturnPolicy}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public List<MerchantReturnPolicy> getHasMerchantReturnPolicyList() {
        return hasMerchantReturnPolicy;
    }

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @return {@link MerchantReturnPolicy}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public MerchantReturnPolicy getHasMerchantReturnPolicy() {
        return getFirst(hasMerchantReturnPolicy);
    }

    /**
     * Specifies a MerchantReturnPolicy that may be applicable.
     *
     * @param hasMerchantReturnPolicy MerchantReturnPolicy value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2288">https://github.com/schemaorg/schemaorg/issues/2288</a>
     */
    @Override
    public void addHasMerchantReturnPolicy(MerchantReturnPolicy hasMerchantReturnPolicy) {
        this.hasMerchantReturnPolicy = add(this.hasMerchantReturnPolicy, hasMerchantReturnPolicy);
    }

    private List<Event> event;

    /**
     * Upcoming or past event associated with this place, organization, or action.
     *
     * @return {@link Event}
     */
    @Override
    public List<Event> getEventList() {
        return event;
    }

    /**
     * Upcoming or past event associated with this place, organization, or action.
     *
     * @return {@link Event}
     */
    @Override
    public Event getEvent() {
        return getFirst(event);
    }

    /**
     * Upcoming or past event associated with this place, organization, or action.
     *
     * @param event Event value to set.
     */
    @Override
    public void addEvent(Event event) {
        this.event = add(this.event, event);
    }

    private List<Text> duns;

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getDunsList() {
        return duns;
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getDuns() {
        return getFirst(duns);
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param duns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>duns</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addDuns(Text duns) {
        this.duns = add(this.duns, duns);
    }

    private List<Person> alumni;

    /**
     * Alumni of an organization.
     *
     * @return {@link Person}
     */
    @Override
    public List<Person> getAlumniList() {
        return alumni;
    }

    /**
     * Alumni of an organization.
     *
     * @return {@link Person}
     */
    @Override
    public Person getAlumni() {
        return getFirst(alumni);
    }

    /**
     * Alumni of an organization.
     *
     * @param alumni Person value to set.
     */
    @Override
    public void addAlumni(Person alumni) {
        this.alumni = add(this.alumni, alumni);
    }

    private List<Text> leiCode;

    /**
     * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF</a>
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>leiCode</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getLeiCodeList() {
        return leiCode;
    }

    /**
     * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF</a>
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>leiCode</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getLeiCode() {
        return getFirst(leiCode);
    }

    /**
     * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
     *
     * @param leiCode Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF</a>
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>leiCode</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addLeiCode(Text leiCode) {
        this.leiCode = add(this.leiCode, leiCode);
    }

    private List<Text> vatID;

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getVatIDList() {
        return vatID;
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getVatID() {
        return getFirst(vatID);
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param vatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addVatID(Text vatID) {
        this.vatID = add(this.vatID, vatID);
    }

    @JsonLdFieldTypes({ Text.class, Language.class })
    private List<Object> knowsLanguage;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Text} or {@link Language}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> List<T> getKnowsLanguageList() {
        return (List<T>) knowsLanguage;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Text} or {@link Language}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getKnowsLanguage() {
        return (T) getFirst(knowsLanguage);
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void addKnowsLanguage(Text knowsLanguage) {
        this.knowsLanguage = add(this.knowsLanguage, knowsLanguage);
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void addKnowsLanguage(Language knowsLanguage) {
        this.knowsLanguage = add(this.knowsLanguage, knowsLanguage);
    }

    @JsonLdFieldTypes({ ImageObject.class, URL.class })
    private List<Object> logo;

    /**
     * An associated logo.
     *
     * @return {@link ImageObject} or {@link URL}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public <T> List<T> getLogoList() {
        return (List<T>) logo;
    }

    /**
     * An associated logo.
     *
     * @return {@link ImageObject} or {@link URL}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public <T> T getLogo() {
        return (T) getFirst(logo);
    }

    /**
     * An associated logo.
     *
     * @param logo ImageObject value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public void addLogo(ImageObject logo) {
        this.logo = add(this.logo, logo);
    }
    /**
     * An associated logo.
     *
     * @param logo URL value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/image">https://schema.org/image</a> <i>logo</i> is a sub property of <i>image</i>
     */
    @Override
    public void addLogo(URL logo) {
        this.logo = add(this.logo, logo);
    }

    private List<EducationalOccupationalCredential> hasCredential;

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public List<EducationalOccupationalCredential> getHasCredentialList() {
        return hasCredential;
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public EducationalOccupationalCredential getHasCredential() {
        return getFirst(hasCredential);
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param hasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void addHasCredential(EducationalOccupationalCredential hasCredential) {
        this.hasCredential = add(this.hasCredential, hasCredential);
    }

    @JsonLdFieldTypes({ Text.class, PostalAddress.class })
    private List<Object> address;

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> List<T> getAddressList() {
        return (List<T>) address;
    }

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> T getAddress() {
        return (T) getFirst(address);
    }

    /**
     * Physical address of the item.
     *
     * @param address Text value to set.
     */
    @Override
    public void addAddress(Text address) {
        this.address = add(this.address, address);
    }
    /**
     * Physical address of the item.
     *
     * @param address PostalAddress value to set.
     */
    @Override
    public void addAddress(PostalAddress address) {
        this.address = add(this.address, address);
    }

    @JsonLdFieldTypes({ Brand.class, Organization.class })
    private List<Object> brand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> List<T> getBrandList() {
        return (List<T>) brand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Brand} or {@link Organization}
     */
    @Override
    public <T> T getBrand() {
        return (T) getFirst(brand);
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    @Override
    public void addBrand(Brand brand) {
        this.brand = add(this.brand, brand);
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    @Override
    public void addBrand(Organization brand) {
        this.brand = add(this.brand, brand);
    }

    private List<NonprofitType> nonprofitStatus;

    /**
     * nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.
     *
     * @return {@link NonprofitType}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2543">https://github.com/schemaorg/schemaorg/issues/2543</a>
     */
    @Override
    public List<NonprofitType> getNonprofitStatusList() {
        return nonprofitStatus;
    }

    /**
     * nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.
     *
     * @return {@link NonprofitType}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2543">https://github.com/schemaorg/schemaorg/issues/2543</a>
     */
    @Override
    public NonprofitType getNonprofitStatus() {
        return getFirst(nonprofitStatus);
    }

    /**
     * nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.
     *
     * @param nonprofitStatus NonprofitType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2543">https://github.com/schemaorg/schemaorg/issues/2543</a>
     */
    @Override
    public void addNonprofitStatus(NonprofitType nonprofitStatus) {
        this.nonprofitStatus = add(this.nonprofitStatus, nonprofitStatus);
    }

    private List<ContactPoint> contactPoint;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public List<ContactPoint> getContactPointList() {
        return contactPoint;
    }

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoint() {
        return getFirst(contactPoint);
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoint ContactPoint value to set.
     */
    @Override
    public void addContactPoint(ContactPoint contactPoint) {
        this.contactPoint = add(this.contactPoint, contactPoint);
    }

    private List<OfferCatalog> hasOfferCatalog;

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public List<OfferCatalog> getHasOfferCatalogList() {
        return hasOfferCatalog;
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public OfferCatalog getHasOfferCatalog() {
        return getFirst(hasOfferCatalog);
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param hasOfferCatalog OfferCatalog value to set.
     */
    @Override
    public void addHasOfferCatalog(OfferCatalog hasOfferCatalog) {
        this.hasOfferCatalog = add(this.hasOfferCatalog, hasOfferCatalog);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> members;

    /**
     * A member of this organization.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> List<T> getMembersList() {
        return (List<T>) members;
    }

    /**
     * A member of this organization.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getMembers() {
        return (T) getFirst(members);
    }

    /**
     * A member of this organization.
     *
     * @param members Organization value to set.
     */
    @Override
    public void addMembers(Organization members) {
        this.members = add(this.members, members);
    }
    /**
     * A member of this organization.
     *
     * @param members Person value to set.
     */
    @Override
    public void addMembers(Person members) {
        this.members = add(this.members, members);
    }

    private List<AggregateRating> aggregateRating;

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    @Override
    public List<AggregateRating> getAggregateRatingList() {
        return aggregateRating;
    }

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    @Override
    public AggregateRating getAggregateRating() {
        return getFirst(aggregateRating);
    }

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @param aggregateRating AggregateRating value to set.
     */
    @Override
    public void addAggregateRating(AggregateRating aggregateRating) {
        this.aggregateRating = add(this.aggregateRating, aggregateRating);
    }

    private List<Text> faxNumber;

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getFaxNumberList() {
        return faxNumber;
    }

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFaxNumber() {
        return getFirst(faxNumber);
    }

    /**
     * The fax number.
     *
     * @param faxNumber Text value to set.
     */
    @Override
    public void addFaxNumber(Text faxNumber) {
        this.faxNumber = add(this.faxNumber, faxNumber);
    }

    private List<Text> telephone;

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getTelephoneList() {
        return telephone;
    }

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTelephone() {
        return getFirst(telephone);
    }

    /**
     * The telephone number.
     *
     * @param telephone Text value to set.
     */
    @Override
    public void addTelephone(Text telephone) {
        this.telephone = add(this.telephone, telephone);
    }

    private List<Text> taxID;

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public List<Text> getTaxIDList() {
        return taxID;
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public Text getTaxID() {
        return getFirst(taxID);
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param taxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     * @see <a href="https://schema.org/identifier">https://schema.org/identifier</a> <i>taxID</i> is a sub property of <i>identifier</i>
     */
    @Override
    public void addTaxID(Text taxID) {
        this.taxID = add(this.taxID, taxID);
    }

    private List<Text> naics;

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public List<Text> getNaicsList() {
        return naics;
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getNaics() {
        return getFirst(naics);
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param naics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void addNaics(Text naics) {
        this.naics = add(this.naics, naics);
    }

    @JsonLdFieldTypes({ Place.class, Text.class, VirtualLocation.class, PostalAddress.class })
    private List<Object> location;

    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @return {@link Place} or {@link Text} or {@link VirtualLocation} or {@link PostalAddress}
     */
    @Override
    public <T> List<T> getLocationList() {
        return (List<T>) location;
    }

    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @return {@link Place} or {@link Text} or {@link VirtualLocation} or {@link PostalAddress}
     */
    @Override
    public <T> T getLocation() {
        return (T) getFirst(location);
    }

    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location Place value to set.
     */
    @Override
    public void addLocation(Place location) {
        this.location = add(this.location, location);
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location Text value to set.
     */
    @Override
    public void addLocation(Text location) {
        this.location = add(this.location, location);
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location VirtualLocation value to set.
     */
    @Override
    public void addLocation(VirtualLocation location) {
        this.location = add(this.location, location);
    }
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     *
     * @param location PostalAddress value to set.
     */
    @Override
    public void addLocation(PostalAddress location) {
        this.location = add(this.location, location);
    }

    private List<QuantitativeValue> numberOfEmployees;

    /**
     * The number of employees in an organization, e.g. business.
     *
     * @return {@link QuantitativeValue}
     */
    @Override
    public List<QuantitativeValue> getNumberOfEmployeesList() {
        return numberOfEmployees;
    }

    /**
     * The number of employees in an organization, e.g. business.
     *
     * @return {@link QuantitativeValue}
     */
    @Override
    public QuantitativeValue getNumberOfEmployees() {
        return getFirst(numberOfEmployees);
    }

    /**
     * The number of employees in an organization, e.g. business.
     *
     * @param numberOfEmployees QuantitativeValue value to set.
     */
    @Override
    public void addNumberOfEmployees(QuantitativeValue numberOfEmployees) {
        this.numberOfEmployees = add(this.numberOfEmployees, numberOfEmployees);
    }

    @JsonLdFieldTypes({ Organization.class, Person.class })
    private List<Object> sponsor;

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> List<T> getSponsorList() {
        return (List<T>) sponsor;
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSponsor() {
        return (T) getFirst(sponsor);
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Organization value to set.
     */
    @Override
    public void addSponsor(Organization sponsor) {
        this.sponsor = add(this.sponsor, sponsor);
    }
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Person value to set.
     */
    @Override
    public void addSponsor(Person sponsor) {
        this.sponsor = add(this.sponsor, sponsor);
    }

    private List<Action> potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public List<Action> getPotentialActionList() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return getFirst(potentialAction);
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void addPotentialAction(Action potentialAction) {
        this.potentialAction = add(this.potentialAction, potentialAction);
    }

    @JsonLdFieldTypes({ URL.class, CreativeWork.class })
    private List<Object> mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> List<T> getMainEntityOfPageList() {
        return (List<T>) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) getFirst(mainEntityOfPage);
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void addMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void addMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = add(this.mainEntityOfPage, mainEntityOfPage);
    }

    @JsonLdFieldTypes({ Event.class, CreativeWork.class })
    private List<Object> subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> List<T> getSubjectOfList() {
        return (List<T>) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) getFirst(subjectOf);
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(Event subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void addSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = add(this.subjectOf, subjectOf);
    }

    private List<URL> url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getUrlList() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return getFirst(url);
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void addUrl(URL url) {
        this.url = add(this.url, url);
    }

    private List<Text> alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getAlternateNameList() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return getFirst(alternateName);
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void addAlternateName(Text alternateName) {
        this.alternateName = add(this.alternateName, alternateName);
    }

    private List<URL> sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public List<URL> getSameAsList() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return getFirst(sameAs);
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void addSameAs(URL sameAs) {
        this.sameAs = add(this.sameAs, sameAs);
    }

    private List<Text> description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public List<Text> getDescriptionList() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return getFirst(description);
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void addDescription(Text description) {
        this.description = add(this.description, description);
    }

    private List<Text> disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public List<Text> getDisambiguatingDescriptionList() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public Text getDisambiguatingDescription() {
        return getFirst(disambiguatingDescription);
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     * @see <a href="https://schema.org/description">https://schema.org/description</a> <i>disambiguatingDescription</i> is a sub property of <i>description</i>
     */
    @Override
    public void addDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = add(this.disambiguatingDescription, disambiguatingDescription);
    }

    @JsonLdFieldTypes({ PropertyValue.class, URL.class, Text.class })
    private List<Object> identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> List<T> getIdentifierList() {
        return (List<T>) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link PropertyValue} or {@link URL} or {@link Text}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) getFirst(identifier);
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void addIdentifier(PropertyValue identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void addIdentifier(URL identifier) {
        this.identifier = add(this.identifier, identifier);
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void addIdentifier(Text identifier) {
        this.identifier = add(this.identifier, identifier);
    }

    @JsonLdFieldTypes({ URL.class, ImageObject.class })
    private List<Object> image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> List<T> getImageList() {
        return (List<T>) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) getFirst(image);
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void addImage(URL image) {
        this.image = add(this.image, image);
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void addImage(ImageObject image) {
        this.image = add(this.image, image);
    }

    private List<Text> name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public List<Text> getNameList() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @return {@link Text}
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public Text getName() {
        return getFirst(name);
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     * @see <a href="https://schema.org/rdfs:label">https://schema.org/rdfs:label</a> <i>name</i> is a sub property of <i>rdfs:label</i>
     */
    @Override
    public void addName(Text name) {
        this.name = add(this.name, name);
    }

    private List<URL> additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public List<URL> getAdditionalTypeList() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public URL getAdditionalType() {
        return getFirst(additionalType);
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     * @see <a href="https://schema.org/rdf:type">https://schema.org/rdf:type</a> <i>additionalType</i> is a sub property of <i>rdf:type</i>
     */
    @Override
    public void addAdditionalType(URL additionalType) {
        this.additionalType = add(this.additionalType, additionalType);
    }
}
