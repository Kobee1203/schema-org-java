/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model.impl;

import org.schema.model.MedicalCondition;
import org.schema.model.Drug;
import org.schema.model.datatype.Text;
import org.schema.model.AdministrativeArea;
import org.schema.model.CreativeWork;
import org.schema.model.datatype.URL;
import org.schema.model.Action;
import org.schema.model.ImageObject;
import org.schema.model.Event;
import org.schema.model.PropertyValue;
import org.schema.model.Thing;
import com.weedow.schemaorg.commons.model.JsonLdTypeName;
import org.schema.model.Intangible;
import org.schema.model.Audience;
import org.schema.model.datatype.Integer;
import org.schema.model.datatype.Number;
import org.schema.model.QuantitativeValue;
import org.schema.model.GenderType;
import org.schema.model.PeopleAudience;
import org.schema.model.MedicalAudience;
import org.schema.model.Person;
import org.schema.model.EducationalOccupationalCredential;
import org.schema.model.MonetaryAmount;
import org.schema.model.PriceSpecification;
import org.schema.model.Place;
import org.schema.model.ContactPoint;
import org.schema.model.Grant;
import org.schema.model.Distance;
import org.schema.model.Occupation;
import org.schema.model.DefinedTerm;
import org.schema.model.datatype.Date;
import org.schema.model.Organization;
import org.schema.model.Offer;
import org.schema.model.InteractionCounter;
import org.schema.model.PostalAddress;
import org.schema.model.ProgramMembership;
import org.schema.model.Brand;
import org.schema.model.EducationalOrganization;
import org.schema.model.Language;
import org.schema.model.Demand;
import org.schema.model.Product;
import org.schema.model.OwnershipInfo;
import org.schema.model.OfferCatalog;
import org.schema.model.Country;
import org.schema.model.Patient;

/**
 * A patient is any person recipient of health care services.
 *
 * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
 * @see <a href="https://schema.org/Patient">https://schema.org/Patient</a>
 */
@JsonLdTypeName("Patient")
public class PatientImpl extends com.weedow.schemaorg.commons.model.JsonLdNodeImpl implements Patient {

    private MedicalCondition healthCondition;

    /**
     * Specifying the health condition(s) of a patient, medical study, or other target audience.
     *
     * @return {@link MedicalCondition}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalCondition getHealthCondition() {
        return healthCondition;
    }

    /**
     * Specifying the health condition(s) of a patient, medical study, or other target audience.
     *
     * @param healthCondition MedicalCondition value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void setHealthCondition(MedicalCondition healthCondition) {
        this.healthCondition = healthCondition;
    }

    private Drug drug;

    /**
     * Specifying a drug or medicine used in a medication procedure.
     *
     * @return {@link Drug}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public Drug getDrug() {
        return drug;
    }

    /**
     * Specifying a drug or medicine used in a medication procedure.
     *
     * @param drug Drug value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void setDrug(Drug drug) {
        this.drug = drug;
    }

    private MedicalCondition diagnosis;

    /**
     * One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
     *
     * @return {@link MedicalCondition}
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public MedicalCondition getDiagnosis() {
        return diagnosis;
    }

    /**
     * One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
     *
     * @param diagnosis MedicalCondition value to set.
     * @see <a href="https://health-lifesci.schema.org">https://health-lifesci.schema.org</a>
     */
    @Override
    public void setDiagnosis(MedicalCondition diagnosis) {
        this.diagnosis = diagnosis;
    }

    private Text audienceType;

    /**
     * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
     *
     * @return {@link Text}
     */
    @Override
    public Text getAudienceType() {
        return audienceType;
    }

    /**
     * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
     *
     * @param audienceType Text value to set.
     */
    @Override
    public void setAudienceType(Text audienceType) {
        this.audienceType = audienceType;
    }

    private AdministrativeArea geographicArea;

    /**
     * The geographic area associated with the audience.
     *
     * @return {@link AdministrativeArea}
     */
    @Override
    public AdministrativeArea getGeographicArea() {
        return geographicArea;
    }

    /**
     * The geographic area associated with the audience.
     *
     * @param geographicArea AdministrativeArea value to set.
     */
    @Override
    public void setGeographicArea(AdministrativeArea geographicArea) {
        this.geographicArea = geographicArea;
    }

    private Object mainEntityOfPage;

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @return {@link CreativeWork} or {@link URL}
     */
    @Override
    public <T> T getMainEntityOfPage() {
        return (T) mainEntityOfPage;
    }

    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage CreativeWork value to set.
     */
    @Override
    public void setMainEntityOfPage(CreativeWork mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }
    /**
     * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
     *
     * @param mainEntityOfPage URL value to set.
     */
    @Override
    public void setMainEntityOfPage(URL mainEntityOfPage) {
        this.mainEntityOfPage = mainEntityOfPage;
    }

    private Text alternateName;

    /**
     * An alias for the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAlternateName() {
        return alternateName;
    }

    /**
     * An alias for the item.
     *
     * @param alternateName Text value to set.
     */
    @Override
    public void setAlternateName(Text alternateName) {
        this.alternateName = alternateName;
    }

    private Text name;

    /**
     * The name of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getName() {
        return name;
    }

    /**
     * The name of the item.
     *
     * @param name Text value to set.
     */
    @Override
    public void setName(Text name) {
        this.name = name;
    }

    private Action potentialAction;

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @return {@link Action}
     */
    @Override
    public Action getPotentialAction() {
        return potentialAction;
    }

    /**
     * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
     *
     * @param potentialAction Action value to set.
     */
    @Override
    public void setPotentialAction(Action potentialAction) {
        this.potentialAction = potentialAction;
    }

    private Object image;

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @return {@link URL} or {@link ImageObject}
     */
    @Override
    public <T> T getImage() {
        return (T) image;
    }

    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image URL value to set.
     */
    @Override
    public void setImage(URL image) {
        this.image = image;
    }
    /**
     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
     *
     * @param image ImageObject value to set.
     */
    @Override
    public void setImage(ImageObject image) {
        this.image = image;
    }

    private URL url;

    /**
     * URL of the item.
     *
     * @return {@link URL}
     */
    @Override
    public URL getUrl() {
        return url;
    }

    /**
     * URL of the item.
     *
     * @param url URL value to set.
     */
    @Override
    public void setUrl(URL url) {
        this.url = url;
    }

    private Text description;

    /**
     * A description of the item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDescription() {
        return description;
    }

    /**
     * A description of the item.
     *
     * @param description Text value to set.
     */
    @Override
    public void setDescription(Text description) {
        this.description = description;
    }

    private Object subjectOf;

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @return {@link Event} or {@link CreativeWork}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public <T> T getSubjectOf() {
        return (T) subjectOf;
    }

    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf Event value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(Event subjectOf) {
        this.subjectOf = subjectOf;
    }
    /**
     * A CreativeWork or Event about this Thing.
     *
     * @param subjectOf CreativeWork value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1670">https://github.com/schemaorg/schemaorg/issues/1670</a>
     */
    @Override
    public void setSubjectOf(CreativeWork subjectOf) {
        this.subjectOf = subjectOf;
    }

    private URL additionalType;

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @return {@link URL}
     */
    @Override
    public URL getAdditionalType() {
        return additionalType;
    }

    /**
     * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
     *
     * @param additionalType URL value to set.
     */
    @Override
    public void setAdditionalType(URL additionalType) {
        this.additionalType = additionalType;
    }

    private Text disambiguatingDescription;

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @return {@link Text}
     */
    @Override
    public Text getDisambiguatingDescription() {
        return disambiguatingDescription;
    }

    /**
     * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
     *
     * @param disambiguatingDescription Text value to set.
     */
    @Override
    public void setDisambiguatingDescription(Text disambiguatingDescription) {
        this.disambiguatingDescription = disambiguatingDescription;
    }

    private URL sameAs;

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @return {@link URL}
     */
    @Override
    public URL getSameAs() {
        return sameAs;
    }

    /**
     * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
     *
     * @param sameAs URL value to set.
     */
    @Override
    public void setSameAs(URL sameAs) {
        this.sameAs = sameAs;
    }

    private Object identifier;

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @return {@link URL} or {@link Text} or {@link PropertyValue}
     */
    @Override
    public <T> T getIdentifier() {
        return (T) identifier;
    }

    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier URL value to set.
     */
    @Override
    public void setIdentifier(URL identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier Text value to set.
     */
    @Override
    public void setIdentifier(Text identifier) {
        this.identifier = identifier;
    }
    /**
     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
     *         
     *
     * @param identifier PropertyValue value to set.
     */
    @Override
    public void setIdentifier(PropertyValue identifier) {
        this.identifier = identifier;
    }

    private Integer requiredMinAge;

    /**
     * Audiences defined by a person's minimum age.
     *
     * @return {@link Integer}
     */
    @Override
    public Integer getRequiredMinAge() {
        return requiredMinAge;
    }

    /**
     * Audiences defined by a person's minimum age.
     *
     * @param requiredMinAge Integer value to set.
     */
    @Override
    public void setRequiredMinAge(Integer requiredMinAge) {
        this.requiredMinAge = requiredMinAge;
    }

    private Number suggestedMaxAge;

    /**
     * Maximum recommended age in years for the audience or user.
     *
     * @return {@link Number}
     */
    @Override
    public Number getSuggestedMaxAge() {
        return suggestedMaxAge;
    }

    /**
     * Maximum recommended age in years for the audience or user.
     *
     * @param suggestedMaxAge Number value to set.
     */
    @Override
    public void setSuggestedMaxAge(Number suggestedMaxAge) {
        this.suggestedMaxAge = suggestedMaxAge;
    }

    private QuantitativeValue suggestedMeasurement;

    /**
     * A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public QuantitativeValue getSuggestedMeasurement() {
        return suggestedMeasurement;
    }

    /**
     * A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
     *
     * @param suggestedMeasurement QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public void setSuggestedMeasurement(QuantitativeValue suggestedMeasurement) {
        this.suggestedMeasurement = suggestedMeasurement;
    }

    private QuantitativeValue suggestedAge;

    /**
     * The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public QuantitativeValue getSuggestedAge() {
        return suggestedAge;
    }

    /**
     * The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
     *
     * @param suggestedAge QuantitativeValue value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2811">https://github.com/schemaorg/schemaorg/issues/2811</a>
     */
    @Override
    public void setSuggestedAge(QuantitativeValue suggestedAge) {
        this.suggestedAge = suggestedAge;
    }

    private Integer requiredMaxAge;

    /**
     * Audiences defined by a person's maximum age.
     *
     * @return {@link Integer}
     */
    @Override
    public Integer getRequiredMaxAge() {
        return requiredMaxAge;
    }

    /**
     * Audiences defined by a person's maximum age.
     *
     * @param requiredMaxAge Integer value to set.
     */
    @Override
    public void setRequiredMaxAge(Integer requiredMaxAge) {
        this.requiredMaxAge = requiredMaxAge;
    }

    private Number suggestedMinAge;

    /**
     * Minimum recommended age in years for the audience or user.
     *
     * @return {@link Number}
     */
    @Override
    public Number getSuggestedMinAge() {
        return suggestedMinAge;
    }

    /**
     * Minimum recommended age in years for the audience or user.
     *
     * @param suggestedMinAge Number value to set.
     */
    @Override
    public void setSuggestedMinAge(Number suggestedMinAge) {
        this.suggestedMinAge = suggestedMinAge;
    }

    private Text requiredGender;

    /**
     * Audiences defined by a person's gender.
     *
     * @return {@link Text}
     */
    @Override
    public Text getRequiredGender() {
        return requiredGender;
    }

    /**
     * Audiences defined by a person's gender.
     *
     * @param requiredGender Text value to set.
     */
    @Override
    public void setRequiredGender(Text requiredGender) {
        this.requiredGender = requiredGender;
    }

    private Object suggestedGender;

    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @return {@link GenderType} or {@link Text}
     */
    @Override
    public <T> T getSuggestedGender() {
        return (T) suggestedGender;
    }

    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @param suggestedGender GenderType value to set.
     */
    @Override
    public void setSuggestedGender(GenderType suggestedGender) {
        this.suggestedGender = suggestedGender;
    }
    /**
     * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
     *
     * @param suggestedGender Text value to set.
     */
    @Override
    public void setSuggestedGender(Text suggestedGender) {
        this.suggestedGender = suggestedGender;
    }

    private Person spouse;

    /**
     * The person's spouse.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSpouse() {
        return spouse;
    }

    /**
     * The person's spouse.
     *
     * @param spouse Person value to set.
     */
    @Override
    public void setSpouse(Person spouse) {
        this.spouse = spouse;
    }

    private Text additionalName;

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAdditionalName() {
        return additionalName;
    }

    /**
     * An additional name for a Person, can be used for a middle name.
     *
     * @param additionalName Text value to set.
     */
    @Override
    public void setAdditionalName(Text additionalName) {
        this.additionalName = additionalName;
    }

    private EducationalOccupationalCredential hasCredential;

    /**
     * A credential awarded to the Person or Organization.
     *
     * @return {@link EducationalOccupationalCredential}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public EducationalOccupationalCredential getHasCredential() {
        return hasCredential;
    }

    /**
     * A credential awarded to the Person or Organization.
     *
     * @param hasCredential EducationalOccupationalCredential value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    @Override
    public void setHasCredential(EducationalOccupationalCredential hasCredential) {
        this.hasCredential = hasCredential;
    }

    private Text telephone;

    /**
     * The telephone number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getTelephone() {
        return telephone;
    }

    /**
     * The telephone number.
     *
     * @param telephone Text value to set.
     */
    @Override
    public void setTelephone(Text telephone) {
        this.telephone = telephone;
    }

    private Text honorificPrefix;

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificPrefix() {
        return honorificPrefix;
    }

    /**
     * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
     *
     * @param honorificPrefix Text value to set.
     */
    @Override
    public void setHonorificPrefix(Text honorificPrefix) {
        this.honorificPrefix = honorificPrefix;
    }

    private Person parents;

    /**
     * A parents of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParents() {
        return parents;
    }

    /**
     * A parents of the person.
     *
     * @param parents Person value to set.
     */
    @Override
    public void setParents(Person parents) {
        this.parents = parents;
    }

    private Text familyName;

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFamilyName() {
        return familyName;
    }

    /**
     * Family name. In the U.S., the last name of a Person.
     *
     * @param familyName Text value to set.
     */
    @Override
    public void setFamilyName(Text familyName) {
        this.familyName = familyName;
    }

    private Text givenName;

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @return {@link Text}
     */
    @Override
    public Text getGivenName() {
        return givenName;
    }

    /**
     * Given name. In the U.S., the first name of a Person.
     *
     * @param givenName Text value to set.
     */
    @Override
    public void setGivenName(Text givenName) {
        this.givenName = givenName;
    }

    private Object knowsAbout;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @return {@link URL} or {@link Text} or {@link Thing}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public <T> T getKnowsAbout() {
        return (T) knowsAbout;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout URL value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(URL knowsAbout) {
        this.knowsAbout = knowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Text knowsAbout) {
        this.knowsAbout = knowsAbout;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
     *
     * @param knowsAbout Thing value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     */
    @Override
    public void setKnowsAbout(Thing knowsAbout) {
        this.knowsAbout = knowsAbout;
    }

    private Event performerIn;

    /**
     * Event that this person is a performer or participant in.
     *
     * @return {@link Event}
     */
    @Override
    public Event getPerformerIn() {
        return performerIn;
    }

    /**
     * Event that this person is a performer or participant in.
     *
     * @param performerIn Event value to set.
     */
    @Override
    public void setPerformerIn(Event performerIn) {
        this.performerIn = performerIn;
    }

    private Object netWorth;

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @return {@link MonetaryAmount} or {@link PriceSpecification}
     */
    @Override
    public <T> T getNetWorth() {
        return (T) netWorth;
    }

    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth MonetaryAmount value to set.
     */
    @Override
    public void setNetWorth(MonetaryAmount netWorth) {
        this.netWorth = netWorth;
    }
    /**
     * The total financial value of the person as calculated by subtracting assets from liabilities.
     *
     * @param netWorth PriceSpecification value to set.
     */
    @Override
    public void setNetWorth(PriceSpecification netWorth) {
        this.netWorth = netWorth;
    }

    private Text award;

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAward() {
        return award;
    }

    /**
     * An award won by or for this item.
     *
     * @param award Text value to set.
     */
    @Override
    public void setAward(Text award) {
        this.award = award;
    }

    private Object workLocation;

    /**
     * A contact location for a person's place of work.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    @Override
    public <T> T getWorkLocation() {
        return (T) workLocation;
    }

    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation Place value to set.
     */
    @Override
    public void setWorkLocation(Place workLocation) {
        this.workLocation = workLocation;
    }
    /**
     * A contact location for a person's place of work.
     *
     * @param workLocation ContactPoint value to set.
     */
    @Override
    public void setWorkLocation(ContactPoint workLocation) {
        this.workLocation = workLocation;
    }

    private Text honorificSuffix;

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @return {@link Text}
     */
    @Override
    public Text getHonorificSuffix() {
        return honorificSuffix;
    }

    /**
     * An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.
     *
     * @param honorificSuffix Text value to set.
     */
    @Override
    public void setHonorificSuffix(Text honorificSuffix) {
        this.honorificSuffix = honorificSuffix;
    }

    private Place deathPlace;

    /**
     * The place where the person died.
     *
     * @return {@link Place}
     */
    @Override
    public Place getDeathPlace() {
        return deathPlace;
    }

    /**
     * The place where the person died.
     *
     * @param deathPlace Place value to set.
     */
    @Override
    public void setDeathPlace(Place deathPlace) {
        this.deathPlace = deathPlace;
    }

    private Object homeLocation;

    /**
     * A contact location for a person's residence.
     *
     * @return {@link Place} or {@link ContactPoint}
     */
    @Override
    public <T> T getHomeLocation() {
        return (T) homeLocation;
    }

    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation Place value to set.
     */
    @Override
    public void setHomeLocation(Place homeLocation) {
        this.homeLocation = homeLocation;
    }
    /**
     * A contact location for a person's residence.
     *
     * @param homeLocation ContactPoint value to set.
     */
    @Override
    public void setHomeLocation(ContactPoint homeLocation) {
        this.homeLocation = homeLocation;
    }

    private Grant funding;

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @return {@link Grant}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public Grant getFunding() {
        return funding;
    }

    /**
     * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
     *
     * @param funding Grant value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/383">https://github.com/schemaorg/schemaorg/issues/383</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setFunding(Grant funding) {
        this.funding = funding;
    }

    private Text vatID;

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getVatID() {
        return vatID;
    }

    /**
     * The Value-added Tax ID of the organization or person.
     *
     * @param vatID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setVatID(Text vatID) {
        this.vatID = vatID;
    }

    private Object height;

    /**
     * The height of the item.
     *
     * @return {@link Distance} or {@link QuantitativeValue}
     */
    @Override
    public <T> T getHeight() {
        return (T) height;
    }

    /**
     * The height of the item.
     *
     * @param height Distance value to set.
     */
    @Override
    public void setHeight(Distance height) {
        this.height = height;
    }
    /**
     * The height of the item.
     *
     * @param height QuantitativeValue value to set.
     */
    @Override
    public void setHeight(QuantitativeValue height) {
        this.height = height;
    }

    private Text globalLocationNumber;

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getGlobalLocationNumber() {
        return globalLocationNumber;
    }

    /**
     * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
     *
     * @param globalLocationNumber Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setGlobalLocationNumber(Text globalLocationNumber) {
        this.globalLocationNumber = globalLocationNumber;
    }

    private ContactPoint contactPoints;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoints() {
        return contactPoints;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoints ContactPoint value to set.
     */
    @Override
    public void setContactPoints(ContactPoint contactPoints) {
        this.contactPoints = contactPoints;
    }

    private Occupation hasOccupation;

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @return {@link Occupation}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public Occupation getHasOccupation() {
        return hasOccupation;
    }

    /**
     * The Person's occupation. For past professions, use Role for expressing dates.
     *
     * @param hasOccupation Occupation value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1698">https://github.com/schemaorg/schemaorg/issues/1698</a>
     */
    @Override
    public void setHasOccupation(Occupation hasOccupation) {
        this.hasOccupation = hasOccupation;
    }

    private Object gender;

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @return {@link GenderType} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public <T> T getGender() {
        return (T) gender;
    }

    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender GenderType value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void setGender(GenderType gender) {
        this.gender = gender;
    }
    /**
     * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
     *
     * @param gender Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2341">https://github.com/schemaorg/schemaorg/issues/2341</a>
     */
    @Override
    public void setGender(Text gender) {
        this.gender = gender;
    }

    private Person parent;

    /**
     * A parent of this person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getParent() {
        return parent;
    }

    /**
     * A parent of this person.
     *
     * @param parent Person value to set.
     */
    @Override
    public void setParent(Person parent) {
        this.parent = parent;
    }

    private Text awards;

    /**
     * Awards won by or for this item.
     *
     * @return {@link Text}
     */
    @Override
    public Text getAwards() {
        return awards;
    }

    /**
     * Awards won by or for this item.
     *
     * @param awards Text value to set.
     */
    @Override
    public void setAwards(Text awards) {
        this.awards = awards;
    }

    private Person sibling;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSibling() {
        return sibling;
    }

    /**
     * A sibling of the person.
     *
     * @param sibling Person value to set.
     */
    @Override
    public void setSibling(Person sibling) {
        this.sibling = sibling;
    }

    private Object jobTitle;

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @return {@link Text} or {@link DefinedTerm}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public <T> T getJobTitle() {
        return (T) jobTitle;
    }

    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void setJobTitle(Text jobTitle) {
        this.jobTitle = jobTitle;
    }
    /**
     * The job title of the person (for example, Financial Manager).
     *
     * @param jobTitle DefinedTerm value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2192">https://github.com/schemaorg/schemaorg/issues/2192</a>
     */
    @Override
    public void setJobTitle(DefinedTerm jobTitle) {
        this.jobTitle = jobTitle;
    }

    private Date birthDate;

    /**
     * Date of birth.
     *
     * @return {@link Date}
     */
    @Override
    public Date getBirthDate() {
        return birthDate;
    }

    /**
     * Date of birth.
     *
     * @param birthDate Date value to set.
     */
    @Override
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    private Object funder;

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getFunder() {
        return (T) funder;
    }

    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Organization value to set.
     */
    @Override
    public void setFunder(Organization funder) {
        this.funder = funder;
    }
    /**
     * A person or organization that supports (sponsors) something through some kind of financial contribution.
     *
     * @param funder Person value to set.
     */
    @Override
    public void setFunder(Person funder) {
        this.funder = funder;
    }

    private Offer makesOffer;

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @return {@link Offer}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Offer getMakesOffer() {
        return makesOffer;
    }

    /**
     * A pointer to products or services offered by the organization or person.
     *
     * @param makesOffer Offer value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setMakesOffer(Offer makesOffer) {
        this.makesOffer = makesOffer;
    }

    private Person children;

    /**
     * A child of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getChildren() {
        return children;
    }

    /**
     * A child of the person.
     *
     * @param children Person value to set.
     */
    @Override
    public void setChildren(Person children) {
        this.children = children;
    }

    private Organization worksFor;

    /**
     * Organizations that the person works for.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getWorksFor() {
        return worksFor;
    }

    /**
     * Organizations that the person works for.
     *
     * @param worksFor Organization value to set.
     */
    @Override
    public void setWorksFor(Organization worksFor) {
        this.worksFor = worksFor;
    }

    private Person knows;

    /**
     * The most generic bi-directional social/work relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getKnows() {
        return knows;
    }

    /**
     * The most generic bi-directional social/work relation.
     *
     * @param knows Person value to set.
     */
    @Override
    public void setKnows(Person knows) {
        this.knows = knows;
    }

    private InteractionCounter interactionStatistic;

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @return {@link InteractionCounter}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public InteractionCounter getInteractionStatistic() {
        return interactionStatistic;
    }

    /**
     * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
     *
     * @param interactionStatistic InteractionCounter value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2421">https://github.com/schemaorg/schemaorg/issues/2421</a>
     */
    @Override
    public void setInteractionStatistic(InteractionCounter interactionStatistic) {
        this.interactionStatistic = interactionStatistic;
    }

    private Object address;

    /**
     * Physical address of the item.
     *
     * @return {@link Text} or {@link PostalAddress}
     */
    @Override
    public <T> T getAddress() {
        return (T) address;
    }

    /**
     * Physical address of the item.
     *
     * @param address Text value to set.
     */
    @Override
    public void setAddress(Text address) {
        this.address = address;
    }
    /**
     * Physical address of the item.
     *
     * @param address PostalAddress value to set.
     */
    @Override
    public void setAddress(PostalAddress address) {
        this.address = address;
    }

    private Object memberOf;

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @return {@link ProgramMembership} or {@link Organization}
     */
    @Override
    public <T> T getMemberOf() {
        return (T) memberOf;
    }

    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf ProgramMembership value to set.
     */
    @Override
    public void setMemberOf(ProgramMembership memberOf) {
        this.memberOf = memberOf;
    }
    /**
     * An Organization (or ProgramMembership) to which this Person or Organization belongs.
     *
     * @param memberOf Organization value to set.
     */
    @Override
    public void setMemberOf(Organization memberOf) {
        this.memberOf = memberOf;
    }

    private Object publishingPrinciples;

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @return {@link URL} or {@link CreativeWork}
     */
    @Override
    public <T> T getPublishingPrinciples() {
        return (T) publishingPrinciples;
    }

    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples URL value to set.
     */
    @Override
    public void setPublishingPrinciples(URL publishingPrinciples) {
        this.publishingPrinciples = publishingPrinciples;
    }
    /**
     * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
     * 
     * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
     *
     * @param publishingPrinciples CreativeWork value to set.
     */
    @Override
    public void setPublishingPrinciples(CreativeWork publishingPrinciples) {
        this.publishingPrinciples = publishingPrinciples;
    }

    private Person colleagues;

    /**
     * A colleague of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getColleagues() {
        return colleagues;
    }

    /**
     * A colleague of the person.
     *
     * @param colleagues Person value to set.
     */
    @Override
    public void setColleagues(Person colleagues) {
        this.colleagues = colleagues;
    }

    private Date deathDate;

    /**
     * Date of death.
     *
     * @return {@link Date}
     */
    @Override
    public Date getDeathDate() {
        return deathDate;
    }

    /**
     * Date of death.
     *
     * @param deathDate Date value to set.
     */
    @Override
    public void setDeathDate(Date deathDate) {
        this.deathDate = deathDate;
    }

    private Text email;

    /**
     * Email address.
     *
     * @return {@link Text}
     */
    @Override
    public Text getEmail() {
        return email;
    }

    /**
     * Email address.
     *
     * @param email Text value to set.
     */
    @Override
    public void setEmail(Text email) {
        this.email = email;
    }

    private Organization affiliation;

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @return {@link Organization}
     */
    @Override
    public Organization getAffiliation() {
        return affiliation;
    }

    /**
     * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
     *
     * @param affiliation Organization value to set.
     */
    @Override
    public void setAffiliation(Organization affiliation) {
        this.affiliation = affiliation;
    }

    private Person siblings;

    /**
     * A sibling of the person.
     *
     * @return {@link Person}
     */
    @Override
    public Person getSiblings() {
        return siblings;
    }

    /**
     * A sibling of the person.
     *
     * @param siblings Person value to set.
     */
    @Override
    public void setSiblings(Person siblings) {
        this.siblings = siblings;
    }

    private Place birthPlace;

    /**
     * The place where the person was born.
     *
     * @return {@link Place}
     */
    @Override
    public Place getBirthPlace() {
        return birthPlace;
    }

    /**
     * The place where the person was born.
     *
     * @param birthPlace Place value to set.
     */
    @Override
    public void setBirthPlace(Place birthPlace) {
        this.birthPlace = birthPlace;
    }

    private Object brand;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    @Override
    public <T> T getBrand() {
        return (T) brand;
    }

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Organization value to set.
     */
    @Override
    public void setBrand(Organization brand) {
        this.brand = brand;
    }
    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @param brand Brand value to set.
     */
    @Override
    public void setBrand(Brand brand) {
        this.brand = brand;
    }

    private Object sponsor;

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @return {@link Organization} or {@link Person}
     */
    @Override
    public <T> T getSponsor() {
        return (T) sponsor;
    }

    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Organization value to set.
     */
    @Override
    public void setSponsor(Organization sponsor) {
        this.sponsor = sponsor;
    }
    /**
     * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
     *
     * @param sponsor Person value to set.
     */
    @Override
    public void setSponsor(Person sponsor) {
        this.sponsor = sponsor;
    }

    private Text naics;

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getNaics() {
        return naics;
    }

    /**
     * The North American Industry Classification System (NAICS) code for a particular organization or business person.
     *
     * @param naics Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setNaics(Text naics) {
        this.naics = naics;
    }

    private ContactPoint contactPoint;

    /**
     * A contact point for a person or organization.
     *
     * @return {@link ContactPoint}
     */
    @Override
    public ContactPoint getContactPoint() {
        return contactPoint;
    }

    /**
     * A contact point for a person or organization.
     *
     * @param contactPoint ContactPoint value to set.
     */
    @Override
    public void setContactPoint(ContactPoint contactPoint) {
        this.contactPoint = contactPoint;
    }

    private Text callSign;

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @return {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    @Override
    public Text getCallSign() {
        return callSign;
    }

    /**
     * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
     *
     * @param callSign Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2109">https://github.com/schemaorg/schemaorg/issues/2109</a>
     */
    @Override
    public void setCallSign(Text callSign) {
        this.callSign = callSign;
    }

    private Text isicV4;

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getIsicV4() {
        return isicV4;
    }

    /**
     * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
     *
     * @param isicV4 Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setIsicV4(Text isicV4) {
        this.isicV4 = isicV4;
    }

    private Place hasPOS;

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @return {@link Place}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Place getHasPOS() {
        return hasPOS;
    }

    /**
     * Points-of-Sales operated by the organization or person.
     *
     * @param hasPOS Place value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setHasPOS(Place hasPOS) {
        this.hasPOS = hasPOS;
    }

    private Object alumniOf;

    /**
     * An organization that the person is an alumni of.
     *
     * @return {@link EducationalOrganization} or {@link Organization}
     */
    @Override
    public <T> T getAlumniOf() {
        return (T) alumniOf;
    }

    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf EducationalOrganization value to set.
     */
    @Override
    public void setAlumniOf(EducationalOrganization alumniOf) {
        this.alumniOf = alumniOf;
    }
    /**
     * An organization that the person is an alumni of.
     *
     * @param alumniOf Organization value to set.
     */
    @Override
    public void setAlumniOf(Organization alumniOf) {
        this.alumniOf = alumniOf;
    }

    private Text duns;

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getDuns() {
        return duns;
    }

    /**
     * The Dun & Bradstreet DUNS number for identifying an organization or business person.
     *
     * @param duns Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setDuns(Text duns) {
        this.duns = duns;
    }

    private QuantitativeValue weight;

    /**
     * The weight of the product or person.
     *
     * @return {@link QuantitativeValue}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public QuantitativeValue getWeight() {
        return weight;
    }

    /**
     * The weight of the product or person.
     *
     * @param weight QuantitativeValue value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setWeight(QuantitativeValue weight) {
        this.weight = weight;
    }

    private Object knowsLanguage;

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @return {@link Language} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public <T> T getKnowsLanguage() {
        return (T) knowsLanguage;
    }

    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Language value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Language knowsLanguage) {
        this.knowsLanguage = knowsLanguage;
    }
    /**
     * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
     *
     * @param knowsLanguage Text value to set.
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1688">https://github.com/schemaorg/schemaorg/issues/1688</a>
     * @see <a href="https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP">https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP</a>
     */
    @Override
    public void setKnowsLanguage(Text knowsLanguage) {
        this.knowsLanguage = knowsLanguage;
    }

    private Person relatedTo;

    /**
     * The most generic familial relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getRelatedTo() {
        return relatedTo;
    }

    /**
     * The most generic familial relation.
     *
     * @param relatedTo Person value to set.
     */
    @Override
    public void setRelatedTo(Person relatedTo) {
        this.relatedTo = relatedTo;
    }

    private Object colleague;

    /**
     * A colleague of the person.
     *
     * @return {@link Person} or {@link URL}
     */
    @Override
    public <T> T getColleague() {
        return (T) colleague;
    }

    /**
     * A colleague of the person.
     *
     * @param colleague Person value to set.
     */
    @Override
    public void setColleague(Person colleague) {
        this.colleague = colleague;
    }
    /**
     * A colleague of the person.
     *
     * @param colleague URL value to set.
     */
    @Override
    public void setColleague(URL colleague) {
        this.colleague = colleague;
    }

    private Demand seeks;

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @return {@link Demand}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Demand getSeeks() {
        return seeks;
    }

    /**
     * A pointer to products or services sought by the organization or person (demand).
     *
     * @param seeks Demand value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setSeeks(Demand seeks) {
        this.seeks = seeks;
    }

    private Text taxID;

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @return {@link Text}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public Text getTaxID() {
        return taxID;
    }

    /**
     * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
     *
     * @param taxID Text value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setTaxID(Text taxID) {
        this.taxID = taxID;
    }

    private Object owns;

    /**
     * Products owned by the organization or person.
     *
     * @return {@link Product} or {@link OwnershipInfo}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public <T> T getOwns() {
        return (T) owns;
    }

    /**
     * Products owned by the organization or person.
     *
     * @param owns Product value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(Product owns) {
        this.owns = owns;
    }
    /**
     * Products owned by the organization or person.
     *
     * @param owns OwnershipInfo value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    @Override
    public void setOwns(OwnershipInfo owns) {
        this.owns = owns;
    }

    private OfferCatalog hasOfferCatalog;

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    @Override
    public OfferCatalog getHasOfferCatalog() {
        return hasOfferCatalog;
    }

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @param hasOfferCatalog OfferCatalog value to set.
     */
    @Override
    public void setHasOfferCatalog(OfferCatalog hasOfferCatalog) {
        this.hasOfferCatalog = hasOfferCatalog;
    }

    private Person follows;

    /**
     * The most generic uni-directional social relation.
     *
     * @return {@link Person}
     */
    @Override
    public Person getFollows() {
        return follows;
    }

    /**
     * The most generic uni-directional social relation.
     *
     * @param follows Person value to set.
     */
    @Override
    public void setFollows(Person follows) {
        this.follows = follows;
    }

    private Country nationality;

    /**
     * Nationality of the person.
     *
     * @return {@link Country}
     */
    @Override
    public Country getNationality() {
        return nationality;
    }

    /**
     * Nationality of the person.
     *
     * @param nationality Country value to set.
     */
    @Override
    public void setNationality(Country nationality) {
        this.nationality = nationality;
    }

    private Text faxNumber;

    /**
     * The fax number.
     *
     * @return {@link Text}
     */
    @Override
    public Text getFaxNumber() {
        return faxNumber;
    }

    /**
     * The fax number.
     *
     * @param faxNumber Text value to set.
     */
    @Override
    public void setFaxNumber(Text faxNumber) {
        this.faxNumber = faxNumber;
    }
}
