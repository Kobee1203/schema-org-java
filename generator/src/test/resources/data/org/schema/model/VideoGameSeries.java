/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.datatype.URL;
import org.schema.model.CreativeWorkSeason;
import org.schema.model.Person;
import org.schema.model.VideoObject;
import org.schema.model.Episode;
import org.schema.model.Thing;
import org.schema.model.datatype.Integer;
import org.schema.model.CreativeWork;
import org.schema.model.Organization;
import org.schema.model.GamePlayMode;
import org.schema.model.datatype.Text;
import org.schema.model.MusicGroup;
import org.schema.model.QuantitativeValue;
import org.schema.model.Place;
import org.schema.model.PostalAddress;

/**
 * A video game series.
 *
 * @see <a href="https://schema.org/VideoGameSeries">https://schema.org/VideoGameSeries</a>
 */
public interface VideoGameSeries extends CreativeWorkSeries {

    /**
     * A season in a media series.
     *
     * @return {@link URL} or {@link CreativeWorkSeason}
     */
    <T> List<T> getSeasonList();

    /**
     * A season in a media series.
     *
     * @return {@link URL} or {@link CreativeWorkSeason}
     */
    <T> T getSeason();

    /**
     * A season in a media series.
     *
     * @param season URL value to set.
     */
    void addSeason(URL season);
    /**
     * A season in a media series.
     *
     * @param season CreativeWorkSeason value to set.
     */
    void addSeason(CreativeWorkSeason season);

    /**
     * A season that is part of the media series.
     *
     * @return {@link CreativeWorkSeason}
     */
    List<CreativeWorkSeason> getContainsSeasonList();

    /**
     * A season that is part of the media series.
     *
     * @return {@link CreativeWorkSeason}
     */
    CreativeWorkSeason getContainsSeason();

    /**
     * A season that is part of the media series.
     *
     * @param containsSeason CreativeWorkSeason value to set.
     */
    void addContainsSeason(CreativeWorkSeason containsSeason);

    /**
     * A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    List<Person> getDirectorList();

    /**
     * A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    Person getDirector();

    /**
     * A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @param director Person value to set.
     */
    void addDirector(Person director);

    /**
     * An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    List<Person> getActorList();

    /**
     * An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    Person getActor();

    /**
     * An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @param actor Person value to set.
     */
    void addActor(Person actor);

    /**
     * The trailer of a movie or tv/radio series, season, episode, etc.
     *
     * @return {@link VideoObject}
     */
    List<VideoObject> getTrailerList();

    /**
     * The trailer of a movie or tv/radio series, season, episode, etc.
     *
     * @return {@link VideoObject}
     */
    VideoObject getTrailer();

    /**
     * The trailer of a movie or tv/radio series, season, episode, etc.
     *
     * @param trailer VideoObject value to set.
     */
    void addTrailer(VideoObject trailer);

    /**
     * An episode of a TV/radio series or season.
     *
     * @return {@link Episode}
     */
    List<Episode> getEpisodesList();

    /**
     * An episode of a TV/radio series or season.
     *
     * @return {@link Episode}
     */
    Episode getEpisodes();

    /**
     * An episode of a TV/radio series or season.
     *
     * @param episodes Episode value to set.
     */
    void addEpisodes(Episode episodes);

    /**
     * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
     *
     * @return {@link Thing}
     */
    List<Thing> getCharacterAttributeList();

    /**
     * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
     *
     * @return {@link Thing}
     */
    Thing getCharacterAttribute();

    /**
     * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
     *
     * @param characterAttribute Thing value to set.
     */
    void addCharacterAttribute(Thing characterAttribute);

    /**
     * The number of episodes in this season or series.
     *
     * @return {@link Integer}
     */
    List<Integer> getNumberOfEpisodesList();

    /**
     * The number of episodes in this season or series.
     *
     * @return {@link Integer}
     */
    Integer getNumberOfEpisodes();

    /**
     * The number of episodes in this season or series.
     *
     * @param numberOfEpisodes Integer value to set.
     */
    void addNumberOfEpisodes(Integer numberOfEpisodes);

    /**
     * A season in a media series.
     *
     * @return {@link CreativeWorkSeason}
     */
    List<CreativeWorkSeason> getSeasonsList();

    /**
     * A season in a media series.
     *
     * @return {@link CreativeWorkSeason}
     */
    CreativeWorkSeason getSeasons();

    /**
     * A season in a media series.
     *
     * @param seasons CreativeWorkSeason value to set.
     */
    void addSeasons(CreativeWorkSeason seasons);

    /**
     * Cheat codes to the game.
     *
     * @return {@link CreativeWork}
     */
    List<CreativeWork> getCheatCodeList();

    /**
     * Cheat codes to the game.
     *
     * @return {@link CreativeWork}
     */
    CreativeWork getCheatCode();

    /**
     * Cheat codes to the game.
     *
     * @param cheatCode CreativeWork value to set.
     */
    void addCheatCode(CreativeWork cheatCode);

    /**
     * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
     *
     * @return {@link Thing}
     */
    List<Thing> getGameItemList();

    /**
     * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
     *
     * @return {@link Thing}
     */
    Thing getGameItem();

    /**
     * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
     *
     * @param gameItem Thing value to set.
     */
    void addGameItem(Thing gameItem);

    /**
     * The production company or studio responsible for the item e.g. series, video game, episode etc.
     *
     * @return {@link Organization}
     */
    List<Organization> getProductionCompanyList();

    /**
     * The production company or studio responsible for the item e.g. series, video game, episode etc.
     *
     * @return {@link Organization}
     */
    Organization getProductionCompany();

    /**
     * The production company or studio responsible for the item e.g. series, video game, episode etc.
     *
     * @param productionCompany Organization value to set.
     */
    void addProductionCompany(Organization productionCompany);

    /**
     * An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    List<Person> getActorsList();

    /**
     * An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    Person getActors();

    /**
     * An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
     *
     * @param actors Person value to set.
     */
    void addActors(Person actors);

    /**
     * Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
     *
     * @return {@link GamePlayMode}
     */
    List<GamePlayMode> getPlayModeList();

    /**
     * Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
     *
     * @return {@link GamePlayMode}
     */
    GamePlayMode getPlayMode();

    /**
     * Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
     *
     * @param playMode GamePlayMode value to set.
     */
    void addPlayMode(GamePlayMode playMode);

    /**
     * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
     *
     * @return {@link Text} or {@link URL} or {@link Thing}
     */
    <T> List<T> getGamePlatformList();

    /**
     * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
     *
     * @return {@link Text} or {@link URL} or {@link Thing}
     */
    <T> T getGamePlatform();

    /**
     * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
     *
     * @param gamePlatform Text value to set.
     */
    void addGamePlatform(Text gamePlatform);
    /**
     * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
     *
     * @param gamePlatform URL value to set.
     */
    void addGamePlatform(URL gamePlatform);
    /**
     * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
     *
     * @param gamePlatform Thing value to set.
     */
    void addGamePlatform(Thing gamePlatform);

    /**
     * The number of seasons in this series.
     *
     * @return {@link Integer}
     */
    List<Integer> getNumberOfSeasonsList();

    /**
     * The number of seasons in this series.
     *
     * @return {@link Integer}
     */
    Integer getNumberOfSeasons();

    /**
     * The number of seasons in this series.
     *
     * @param numberOfSeasons Integer value to set.
     */
    void addNumberOfSeasons(Integer numberOfSeasons);

    /**
     * The composer of the soundtrack.
     *
     * @return {@link Person} or {@link MusicGroup}
     */
    <T> List<T> getMusicByList();

    /**
     * The composer of the soundtrack.
     *
     * @return {@link Person} or {@link MusicGroup}
     */
    <T> T getMusicBy();

    /**
     * The composer of the soundtrack.
     *
     * @param musicBy Person value to set.
     */
    void addMusicBy(Person musicBy);
    /**
     * The composer of the soundtrack.
     *
     * @param musicBy MusicGroup value to set.
     */
    void addMusicBy(MusicGroup musicBy);

    /**
     * Indicate how many people can play this game (minimum, maximum, or range).
     *
     * @return {@link QuantitativeValue}
     */
    List<QuantitativeValue> getNumberOfPlayersList();

    /**
     * Indicate how many people can play this game (minimum, maximum, or range).
     *
     * @return {@link QuantitativeValue}
     */
    QuantitativeValue getNumberOfPlayers();

    /**
     * Indicate how many people can play this game (minimum, maximum, or range).
     *
     * @param numberOfPlayers QuantitativeValue value to set.
     */
    void addNumberOfPlayers(QuantitativeValue numberOfPlayers);

    /**
     * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
     *
     * @return {@link Thing}
     */
    List<Thing> getQuestList();

    /**
     * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
     *
     * @return {@link Thing}
     */
    Thing getQuest();

    /**
     * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
     *
     * @param quest Thing value to set.
     */
    void addQuest(Thing quest);

    /**
     * Real or fictional location of the game (or part of game).
     *
     * @return {@link Place} or {@link URL} or {@link PostalAddress}
     */
    <T> List<T> getGameLocationList();

    /**
     * Real or fictional location of the game (or part of game).
     *
     * @return {@link Place} or {@link URL} or {@link PostalAddress}
     */
    <T> T getGameLocation();

    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation Place value to set.
     */
    void addGameLocation(Place gameLocation);
    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation URL value to set.
     */
    void addGameLocation(URL gameLocation);
    /**
     * Real or fictional location of the game (or part of game).
     *
     * @param gameLocation PostalAddress value to set.
     */
    void addGameLocation(PostalAddress gameLocation);

    /**
     * An episode of a tv, radio or game media within a series or season.
     *
     * @return {@link Episode}
     */
    List<Episode> getEpisodeList();

    /**
     * An episode of a tv, radio or game media within a series or season.
     *
     * @return {@link Episode}
     */
    Episode getEpisode();

    /**
     * An episode of a tv, radio or game media within a series or season.
     *
     * @param episode Episode value to set.
     */
    void addEpisode(Episode episode);

    /**
     * A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    List<Person> getDirectorsList();

    /**
     * A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @return {@link Person}
     */
    Person getDirectors();

    /**
     * A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
     *
     * @param directors Person value to set.
     */
    void addDirectors(Person directors);
}
