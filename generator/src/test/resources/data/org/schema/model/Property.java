/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Class;
import org.schema.model.Enumeration;
import org.schema.model.Property;

/**
 * A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.
 *
 * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
 * @see <a href="https://schema.org/Property">https://schema.org/Property</a>
 */
public interface Property extends Intangible {

    /**
     * Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
     *
     * @return {@link Class}
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    Class getDomainIncludes();

    /**
     * Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
     *
     * @param domainIncludes Class value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setDomainIncludes(Class domainIncludes);

    /**
     * Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
     *
     * @return {@link Enumeration} or {@link Class} or {@link Property}
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    <T> T getSupersededBy();

    /**
     * Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
     *
     * @param supersededBy Enumeration value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setSupersededBy(Enumeration supersededBy);
    /**
     * Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
     *
     * @param supersededBy Class value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setSupersededBy(Class supersededBy);
    /**
     * Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
     *
     * @param supersededBy Property value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setSupersededBy(Property supersededBy);

    /**
     * Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
     *
     * @return {@link Class}
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    Class getRangeIncludes();

    /**
     * Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
     *
     * @param rangeIncludes Class value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setRangeIncludes(Class rangeIncludes);

    /**
     * Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
     *
     * @return {@link Property}
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    Property getInverseOf();

    /**
     * Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
     *
     * @param inverseOf Property value to set.
     * @see <a href="https://meta.schema.org">https://meta.schema.org</a>
     */
    void setInverseOf(Property inverseOf);
}
