/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.datatype.Text;
import org.schema.model.datatype.Boolean;
import org.schema.model.datatype.Number;
import org.schema.model.Thing;

/**
 * A Property value specification.
 *
 * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass</a>
 * @see <a href="https://schema.org/PropertyValueSpecification">https://schema.org/PropertyValueSpecification</a>
 */
public interface PropertyValueSpecification extends Intangible {

    /**
     * Specifies a regular expression for testing literal values according to the HTML spec.
     *
     * @return {@link Text}
     */
    List<Text> getValuePatternList();

    /**
     * Specifies a regular expression for testing literal values according to the HTML spec.
     *
     * @return {@link Text}
     */
    Text getValuePattern();

    /**
     * Specifies a regular expression for testing literal values according to the HTML spec.
     *
     * @param valuePattern Text value to set.
     */
    void addValuePattern(Text valuePattern);

    /**
     * Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
     *
     * @return {@link Boolean}
     */
    List<Boolean> getReadonlyValueList();

    /**
     * Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
     *
     * @return {@link Boolean}
     */
    Boolean getReadonlyValue();

    /**
     * Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
     *
     * @param readonlyValue Boolean value to set.
     */
    void addReadonlyValue(Boolean readonlyValue);

    /**
     * Specifies the minimum allowed range for number of characters in a literal value.
     *
     * @return {@link Number}
     */
    List<Number> getValueMinLengthList();

    /**
     * Specifies the minimum allowed range for number of characters in a literal value.
     *
     * @return {@link Number}
     */
    Number getValueMinLength();

    /**
     * Specifies the minimum allowed range for number of characters in a literal value.
     *
     * @param valueMinLength Number value to set.
     */
    void addValueMinLength(Number valueMinLength);

    /**
     * Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
     *
     * @return {@link Text}
     */
    List<Text> getValueNameList();

    /**
     * Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
     *
     * @return {@link Text}
     */
    Text getValueName();

    /**
     * Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
     *
     * @param valueName Text value to set.
     */
    void addValueName(Text valueName);

    /**
     * The upper value of some characteristic or property.
     *
     * @return {@link Number}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Number> getMaxValueList();

    /**
     * The upper value of some characteristic or property.
     *
     * @return {@link Number}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Number getMaxValue();

    /**
     * The upper value of some characteristic or property.
     *
     * @param maxValue Number value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addMaxValue(Number maxValue);

    /**
     * Specifies the allowed range for number of characters in a literal value.
     *
     * @return {@link Number}
     */
    List<Number> getValueMaxLengthList();

    /**
     * Specifies the allowed range for number of characters in a literal value.
     *
     * @return {@link Number}
     */
    Number getValueMaxLength();

    /**
     * Specifies the allowed range for number of characters in a literal value.
     *
     * @param valueMaxLength Number value to set.
     */
    void addValueMaxLength(Number valueMaxLength);

    /**
     * Whether the property must be filled in to complete the action.  Default is false.
     *
     * @return {@link Boolean}
     */
    List<Boolean> getValueRequiredList();

    /**
     * Whether the property must be filled in to complete the action.  Default is false.
     *
     * @return {@link Boolean}
     */
    Boolean getValueRequired();

    /**
     * Whether the property must be filled in to complete the action.  Default is false.
     *
     * @param valueRequired Boolean value to set.
     */
    void addValueRequired(Boolean valueRequired);

    /**
     * The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
     *
     * @return {@link Number}
     */
    List<Number> getStepValueList();

    /**
     * The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
     *
     * @return {@link Number}
     */
    Number getStepValue();

    /**
     * The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
     *
     * @param stepValue Number value to set.
     */
    void addStepValue(Number stepValue);

    /**
     * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
     *
     * @return {@link Thing} or {@link Text}
     */
    <T> List<T> getDefaultValueList();

    /**
     * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
     *
     * @return {@link Thing} or {@link Text}
     */
    <T> T getDefaultValue();

    /**
     * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
     *
     * @param defaultValue Thing value to set.
     */
    void addDefaultValue(Thing defaultValue);
    /**
     * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
     *
     * @param defaultValue Text value to set.
     */
    void addDefaultValue(Text defaultValue);

    /**
     * Whether multiple values are allowed for the property.  Default is false.
     *
     * @return {@link Boolean}
     */
    List<Boolean> getMultipleValuesList();

    /**
     * Whether multiple values are allowed for the property.  Default is false.
     *
     * @return {@link Boolean}
     */
    Boolean getMultipleValues();

    /**
     * Whether multiple values are allowed for the property.  Default is false.
     *
     * @param multipleValues Boolean value to set.
     */
    void addMultipleValues(Boolean multipleValues);

    /**
     * The lower value of some characteristic or property.
     *
     * @return {@link Number}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    List<Number> getMinValueList();

    /**
     * The lower value of some characteristic or property.
     *
     * @return {@link Number}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    Number getMinValue();

    /**
     * The lower value of some characteristic or property.
     *
     * @param minValue Number value to set.
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void addMinValue(Number minValue);
}
