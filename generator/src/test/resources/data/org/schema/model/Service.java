/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import org.schema.model.Review;
import org.schema.model.datatype.Text;
import org.schema.model.Audience;
import org.schema.model.datatype.URL;
import org.schema.model.PhysicalActivityCategory;
import org.schema.model.Thing;
import org.schema.model.CategoryCode;
import org.schema.model.OpeningHoursSpecification;
import org.schema.model.Offer;
import org.schema.model.Demand;
import org.schema.model.Organization;
import org.schema.model.Person;
import org.schema.model.AggregateRating;
import org.schema.model.Service;
import org.schema.model.Product;
import org.schema.model.ServiceChannel;
import org.schema.model.Brand;
import org.schema.model.ImageObject;
import org.schema.model.GeoShape;
import org.schema.model.AdministrativeArea;
import org.schema.model.Place;
import org.schema.model.GovernmentBenefitsType;
import org.schema.model.OfferCatalog;

/**
 * A service provided by an organization, e.g. delivery service, print services, etc.
 *
 * @see <a href="https://schema.org/Service">https://schema.org/Service</a>
 */
public interface Service extends Intangible {

    /**
     * A review of the item.
     *
     * @return {@link Review}
     */
    Review getReview();

    /**
     * A review of the item.
     *
     */
    void setReview(Review fReview);

    /**
     * An award won by or for this item.
     *
     * @return {@link Text}
     */
    Text getAward();

    /**
     * An award won by or for this item.
     *
     */
    void setAward(Text fAward);

    /**
     * The audience eligible for this service.
     *
     * @return {@link Audience}
     */
    Audience getServiceAudience();

    /**
     * The audience eligible for this service.
     *
     */
    void setServiceAudience(Audience fServiceAudience);

    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @return {@link URL} or {@link Text} or {@link PhysicalActivityCategory} or {@link Thing} or {@link CategoryCode}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     */
    <T> T getCategory();

    /**
     * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     *
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2490">https://github.com/schemaorg/schemaorg/issues/2490</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1741">https://github.com/schemaorg/schemaorg/issues/1741</a>
     */
    void setCategory(Object fCategory);

    /**
     * The hours during which this service or contact is available.
     *
     * @return {@link OpeningHoursSpecification}
     */
    OpeningHoursSpecification getHoursAvailable();

    /**
     * The hours during which this service or contact is available.
     *
     */
    void setHoursAvailable(OpeningHoursSpecification fHoursAvailable);

    /**
     * An intended audience, i.e. a group for whom something was created.
     *
     * @return {@link Audience}
     */
    Audience getAudience();

    /**
     * An intended audience, i.e. a group for whom something was created.
     *
     */
    void setAudience(Audience fAudience);

    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @return {@link Offer} or {@link Demand}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    <T> T getOffers();

    /**
     * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
     *       
     *
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     */
    void setOffers(Object fOffers);

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     *
     * @return {@link Thing}
     */
    Thing getServiceOutput();

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     *
     */
    void setServiceOutput(Thing fServiceOutput);

    /**
     * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     *
     * @return {@link Organization} or {@link Person}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2927">https://github.com/schemaorg/schemaorg/issues/2927</a>
     */
    <T> T getProvider();

    /**
     * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2289">https://github.com/schemaorg/schemaorg/issues/2289</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/2927">https://github.com/schemaorg/schemaorg/issues/2927</a>
     */
    void setProvider(Object fProvider);

    /**
     * Human-readable terms of service documentation.
     *
     * @return {@link URL} or {@link Text}
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1423">https://github.com/schemaorg/schemaorg/issues/1423</a>
     */
    <T> T getTermsOfService();

    /**
     * Human-readable terms of service documentation.
     *
     * @see <a href="https://pending.schema.org">https://pending.schema.org</a>
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1423">https://github.com/schemaorg/schemaorg/issues/1423</a>
     */
    void setTermsOfService(Object fTermsOfService);

    /**
     * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
     *
     * @return {@link Text}
     */
    Text getProviderMobility();

    /**
     * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
     *
     */
    void setProviderMobility(Text fProviderMobility);

    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     *
     * @return {@link Person} or {@link Organization}
     */
    <T> T getBroker();

    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     *
     */
    void setBroker(Object fBroker);

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     * @return {@link AggregateRating}
     */
    AggregateRating getAggregateRating();

    /**
     * The overall rating, based on a collection of reviews or ratings, of the item.
     *
     */
    void setAggregateRating(AggregateRating fAggregateRating);

    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @return {@link Service} or {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getIsSimilarTo();

    /**
     * A pointer to another, functionally similar product (or multiple products).
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setIsSimilarTo(Object fIsSimilarTo);

    /**
     * A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
     *
     * @return {@link ServiceChannel}
     */
    ServiceChannel getAvailableChannel();

    /**
     * A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
     *
     */
    void setAvailableChannel(ServiceChannel fAvailableChannel);

    /**
     * A slogan or motto associated with the item.
     *
     * @return {@link Text}
     */
    Text getSlogan();

    /**
     * A slogan or motto associated with the item.
     *
     */
    void setSlogan(Text fSlogan);

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     * @return {@link Organization} or {@link Brand}
     */
    <T> T getBrand();

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     *
     */
    void setBrand(Object fBrand);

    /**
     * An associated logo.
     *
     * @return {@link URL} or {@link ImageObject}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getLogo();

    /**
     * An associated logo.
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setLogo(Object fLogo);

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     *
     * @return {@link Thing}
     */
    Thing getProduces();

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     *
     */
    void setProduces(Thing fProduces);

    /**
     * The geographic area where the service is provided.
     *
     * @return {@link GeoShape} or {@link AdministrativeArea} or {@link Place}
     */
    <T> T getServiceArea();

    /**
     * The geographic area where the service is provided.
     *
     */
    void setServiceArea(Object fServiceArea);

    /**
     * The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
     *
     * @return {@link GovernmentBenefitsType} or {@link Text}
     */
    <T> T getServiceType();

    /**
     * The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
     *
     */
    void setServiceType(Object fServiceType);

    /**
     * The geographic area where a service or offered item is provided.
     *
     * @return {@link AdministrativeArea} or {@link GeoShape} or {@link Text} or {@link Place}
     */
    <T> T getAreaServed();

    /**
     * The geographic area where a service or offered item is provided.
     *
     */
    void setAreaServed(Object fAreaServed);

    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @return {@link Service} or {@link Product}
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    <T> T getIsRelatedTo();

    /**
     * A pointer to another, somehow related product (or multiple products).
     *
     * @see <a href="http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms">http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms</a>
     */
    void setIsRelatedTo(Object fIsRelatedTo);

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     * @return {@link OfferCatalog}
     */
    OfferCatalog getHasOfferCatalog();

    /**
     * Indicates an OfferCatalog listing for this Organization, Person, or Service.
     *
     */
    void setHasOfferCatalog(OfferCatalog fHasOfferCatalog);
}
