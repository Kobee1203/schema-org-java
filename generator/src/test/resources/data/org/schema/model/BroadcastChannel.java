/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package org.schema.model;

import java.util.List;
import org.schema.model.datatype.Text;
import org.schema.model.BroadcastService;
import org.schema.model.datatype.URL;
import org.schema.model.CableOrSatelliteService;
import org.schema.model.BroadcastFrequencySpecification;

/**
 * A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
 *
 * @see <a href="https://schema.org/BroadcastChannel">https://schema.org/BroadcastChannel</a>
 */
public interface BroadcastChannel extends Intangible {

    /**
     * The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
     *
     * @return {@link Text}
     */
    List<Text> getBroadcastChannelIdList();

    /**
     * The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
     *
     * @return {@link Text}
     */
    Text getBroadcastChannelId();

    /**
     * The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
     *
     * @param broadcastChannelId Text value to set.
     */
    void addBroadcastChannelId(Text broadcastChannelId);

    /**
     * The BroadcastService offered on this channel.
     *
     * @return {@link BroadcastService}
     */
    List<BroadcastService> getProvidesBroadcastServiceList();

    /**
     * The BroadcastService offered on this channel.
     *
     * @return {@link BroadcastService}
     */
    BroadcastService getProvidesBroadcastService();

    /**
     * The BroadcastService offered on this channel.
     *
     * @param providesBroadcastService BroadcastService value to set.
     */
    void addProvidesBroadcastService(BroadcastService providesBroadcastService);

    /**
     * Genre of the creative work, broadcast channel or group.
     *
     * @return {@link Text} or {@link URL}
     */
    <T> List<T> getGenreList();

    /**
     * Genre of the creative work, broadcast channel or group.
     *
     * @return {@link Text} or {@link URL}
     */
    <T> T getGenre();

    /**
     * Genre of the creative work, broadcast channel or group.
     *
     * @param genre Text value to set.
     */
    void addGenre(Text genre);
    /**
     * Genre of the creative work, broadcast channel or group.
     *
     * @param genre URL value to set.
     */
    void addGenre(URL genre);

    /**
     * The type of service required to have access to the channel (e.g. Standard or Premium).
     *
     * @return {@link Text}
     */
    List<Text> getBroadcastServiceTierList();

    /**
     * The type of service required to have access to the channel (e.g. Standard or Premium).
     *
     * @return {@link Text}
     */
    Text getBroadcastServiceTier();

    /**
     * The type of service required to have access to the channel (e.g. Standard or Premium).
     *
     * @param broadcastServiceTier Text value to set.
     */
    void addBroadcastServiceTier(Text broadcastServiceTier);

    /**
     * The CableOrSatelliteService offering the channel.
     *
     * @return {@link CableOrSatelliteService}
     */
    List<CableOrSatelliteService> getInBroadcastLineupList();

    /**
     * The CableOrSatelliteService offering the channel.
     *
     * @return {@link CableOrSatelliteService}
     */
    CableOrSatelliteService getInBroadcastLineup();

    /**
     * The CableOrSatelliteService offering the channel.
     *
     * @param inBroadcastLineup CableOrSatelliteService value to set.
     */
    void addInBroadcastLineup(CableOrSatelliteService inBroadcastLineup);

    /**
     * The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
     *
     * @return {@link Text} or {@link BroadcastFrequencySpecification}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1004">https://github.com/schemaorg/schemaorg/issues/1004</a>
     */
    <T> List<T> getBroadcastFrequencyList();

    /**
     * The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
     *
     * @return {@link Text} or {@link BroadcastFrequencySpecification}
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1004">https://github.com/schemaorg/schemaorg/issues/1004</a>
     */
    <T> T getBroadcastFrequency();

    /**
     * The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
     *
     * @param broadcastFrequency Text value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1004">https://github.com/schemaorg/schemaorg/issues/1004</a>
     */
    void addBroadcastFrequency(Text broadcastFrequency);
    /**
     * The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
     *
     * @param broadcastFrequency BroadcastFrequencySpecification value to set.
     * @see <a href="https://github.com/schemaorg/schemaorg/issues/1004">https://github.com/schemaorg/schemaorg/issues/1004</a>
     */
    void addBroadcastFrequency(BroadcastFrequencySpecification broadcastFrequency);
}
