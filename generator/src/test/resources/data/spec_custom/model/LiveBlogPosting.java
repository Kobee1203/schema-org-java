/*
 * This class is auto generated by the schema.org code generator program.
 * https://github.com/Kobee1203/schema-org-java
 * Do not edit the class manually.
 */
package spec_custom.model;

import java.util.List;
import spec_custom.model.BlogPosting;
import spec_custom.model.datatype.DateTime;

/**
 * A [[LiveBlogPosting]] is a [[BlogPosting]] intended to provide a rolling textual coverage of an ongoing event through continuous updates.
 *
 * @see <a href="https://schema.org/LiveBlogPosting">https://schema.org/LiveBlogPosting</a>
 */
public interface LiveBlogPosting extends BlogPosting {

    /**
     * An update to the LiveBlog.
     *
     * @return {@link BlogPosting}
     */
    List<BlogPosting> getLiveBlogUpdateList();

    /**
     * An update to the LiveBlog.
     *
     * @return {@link BlogPosting}
     */
    BlogPosting getLiveBlogUpdate();

    /**
     * An update to the LiveBlog.
     *
     * @param liveBlogUpdate BlogPosting value to set.
     */
    void addLiveBlogUpdate(BlogPosting liveBlogUpdate);

    /**
     * The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
     *
     * @return {@link DateTime}
     */
    List<DateTime> getCoverageStartTimeList();

    /**
     * The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
     *
     * @return {@link DateTime}
     */
    DateTime getCoverageStartTime();

    /**
     * The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
     *
     * @param coverageStartTime DateTime value to set.
     */
    void addCoverageStartTime(DateTime coverageStartTime);

    /**
     * The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
     *
     * @return {@link DateTime}
     */
    List<DateTime> getCoverageEndTimeList();

    /**
     * The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
     *
     * @return {@link DateTime}
     */
    DateTime getCoverageEndTime();

    /**
     * The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
     *
     * @param coverageEndTime DateTime value to set.
     */
    void addCoverageEndTime(DateTime coverageEndTime);
}
