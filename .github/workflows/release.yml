name: Release

on:
  push:
    branches:
      - 'release/**'

jobs:
  build:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip ci]')"

    runs-on: ubuntu-latest

    steps:
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: List keys
        run: gpg -K

      - name: Setup git user configuration
        run: |
          echo "Setup git user name to '$GIT_RELEASE_BOT_NAME'"
          git config --global user.name "$GIT_RELEASE_BOT_NAME";
          echo "Setup git user email to '$GIT_RELEASE_BOT_EMAIL'"
          git config --global user.email "$GIT_RELEASE_BOT_EMAIL";
        env:
          GIT_RELEASE_BOT_NAME: ${{ secrets.GIT_RELEASE_BOT_NAME }}
          GIT_RELEASE_BOT_EMAIL: ${{ secrets.GIT_RELEASE_BOT_EMAIL }}

      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v4
        env:
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1
        with:
          ref: ${{ github.REF }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Create Maven Settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          servers: '[
            {
              "id": "ossrh",
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
            },
            {
              "id": "github",
              "username": "${{ github.actor }}",
              "password": "${{ github.token }}"
            }
          ]'

      - name: Maven Version
        run: mvn --version

      - name: Prepare Release (Dry Run)
        run: mvn -e -B -DdryRun=true release:clean release:prepare -P release,ossrh
        env:
          SIGN_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          SIGN_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          SIGN_KEY_PASS: ${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare and Perform Release
        run: mvn -e -B release:clean release:prepare release:perform -P release,ossrh
        env:
          SIGN_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          SIGN_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          SIGN_KEY_PASS: ${{ secrets.GPG_PASSPHRASE }}